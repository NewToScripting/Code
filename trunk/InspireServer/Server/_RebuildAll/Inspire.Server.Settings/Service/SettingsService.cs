//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------


using System.ServiceModel.Activation;
using Inspire.Settings.BusinessLogic;
using Inspire.Settings.MessageContracts;
using WCF = global::System.ServiceModel;

namespace Inspire.Settings.ServiceImplementation
{	
	/// <summary>
	/// Service Class - UserService
	/// </summary>
    [AspNetCompatibilityRequirements(RequirementsMode = AspNetCompatibilityRequirementsMode.Allowed)]
    [WCF::ServiceBehavior(Name = "SettingService", Namespace = "http://schemas.inspiredisplays.com", InstanceContextMode = WCF::InstanceContextMode.PerSession, ConcurrencyMode = WCF::ConcurrencyMode.Single)]
    public class SettingService : ServiceContracts.ISettingServiceContract
    {
        #region DeleteSettingServiceContract Members

        public virtual GetSettingsResponseMessage GetSetting(GetSettingsRequestMessage request)
		{
            GetSettingsResponseMessage response = new GetSettingsResponseMessage();
            response.Setting = ResourceAccessFasade.GetSetting(request.Key);
            return response;
		}

        public virtual AddSettingResponseMessage AddSetting(AddSettingRequestMessage request)
		{
            AddSettingResponseMessage response = new AddSettingResponseMessage();
            ResourceAccessFasade.AddSetting(request.Setting);
            return response;
		}

        public virtual DeleteSettingResponseMessage DeleteSetting(DeleteSettingRequestMessage request)
		{
            DeleteSettingResponseMessage response = new DeleteSettingResponseMessage();
            ResourceAccessFasade.DeleteSetting(request.Key);
            return response;
		}

	
        
		#endregion		
		
	}
	
	
}

