//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
using System.ServiceModel.Activation;
using System;
using Inspire.Server.Display.BusinessLogic;
using Inspire.Server.Display.MessageContracts;
using WCF = global::System.ServiceModel;

namespace Inspire.Server.Display.ServiceImplementation
{	
	/// <summary>
	/// Service Class - ClientDisplayGroupsService
	/// </summary>
    [AspNetCompatibilityRequirements(RequirementsMode = AspNetCompatibilityRequirementsMode.Allowed)]
	[WCF::ServiceBehavior(Name = "ClientDisplayGroupsService", 
		Namespace = "http://schemas.inspiredisplays.com/ServiceContract.Model/", 
		InstanceContextMode = WCF::InstanceContextMode.PerSession, 
		ConcurrencyMode = WCF::ConcurrencyMode.Single )]
	public abstract class ClientDisplayGroupsServiceBase : Inspire.Server.Display.ServiceContracts.IClientDisplayGroupsServiceContract
	{
		#region ClientDisplayGroupsServiceContract Members

		public virtual GetDisplayGroupsResponseMessage GetDisplayGroups(GetDisplayGroupsRequestMessage request)
		{
		    string propertyID;
            GetDisplayGroupsResponseMessage response = new GetDisplayGroupsResponseMessage();
		    propertyID = request.PropertyID;
            response.DisplayGroups = DisplayGroupAccessFasade.GetDisplayGroups(propertyID);
			return response;
		}

        public virtual GetAllDisplayGroupsResponseMessage GetAllDisplayGroups(GetAllDisplayGroupsRequestMessage request)
        {
            GetAllDisplayGroupsResponseMessage response = new GetAllDisplayGroupsResponseMessage();
            response.DisplayGroups = DisplayGroupAccessFasade.GetAllDisplayGroups();
            return response;
        }
        
		public virtual AddDisplayGroupResponseMessage AddDisplayGroup(AddDisplayGroupRequestMessage request)
        {
            DisplayGroupAccessFasade.AddDisplayGroup(request.DisplayGroup);
            AddDisplayGroupResponseMessage response = new AddDisplayGroupResponseMessage();
            return response;
		}

		public virtual UpdateDisplayGroupResponseMessage UpdateDisplayGroup(UpdateDisplayGroupRequestMessage request)
		{
            DisplayGroupAccessFasade.UpdateDisplayGroup(request.DisplayGroup);
            UpdateDisplayGroupResponseMessage response = new UpdateDisplayGroupResponseMessage();
            return response;
		}

		public virtual DeleteDisplayGroupResponseMessage DeleteDisplayGroup(DeleteDisplayGroupRequestMessage request)
		{
            DisplayGroupAccessFasade.DeleteDisplayGroup(request.GUID);
            DeleteDisplayGroupResponseMessage response = new DeleteDisplayGroupResponseMessage();
            return response;
		}

		#endregion		
		
	}
	
	public partial class ClientDisplayGroupsService : ClientDisplayGroupsServiceBase
	{
	}
	
}

