//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using Inspire.Server.Display.BusinessLogic;
using Inspire.Server.Display.MessageContracts;
using WCF = global::System.ServiceModel;
using Inspire.Server.Display.ServiceContracts;
using System.ServiceModel.Activation;

namespace Inspire.Server.Display.ServiceImplementation
{	
	/// <summary>
	/// Service Class - ClientDisplayPropertiesService
	/// </summary>
    [AspNetCompatibilityRequirements(RequirementsMode = AspNetCompatibilityRequirementsMode.Allowed)]
	[WCF::ServiceBehavior(Name = "ClientDisplayPropertiesService", 
		Namespace = "http://schemas.inspiredisplays.com/ServiceContract.Model/", 
		InstanceContextMode = WCF::InstanceContextMode.PerSession,  
		ConcurrencyMode = WCF::ConcurrencyMode.Single )]
	public abstract class ClientDisplayPropertiesServiceBase : IClientDisplayPropertiesServiceContract
	{
		#region ClientDisplayPropertiesServiceContract Members

		public virtual GetDisplayPropertiesResponseMessage GetDisplayProperties(GetDisplayPropertiesRequestMessage request)
		{
            GetDisplayPropertiesResponseMessage response = new GetDisplayPropertiesResponseMessage();
            response.DisplayProperties = DisplayPropertyAccessFasade.GetAllDisplays();
			return response;
		}

		public virtual AddDisplayPropertyResponseMessage AddDisplayProperty(AddDisplayPropertyRequestMessage request)
        {
		    DisplayPropertyAccessFasade.AddDisplayProperty(request.DisplayProperty);
            AddDisplayPropertyResponseMessage response = new AddDisplayPropertyResponseMessage();
            return response;
		}

		public virtual UpdateDisplayPropertyResponseMessage UpdateDisplayProperty(UpdateDisplayPropertyRequestMessage request)
		{
            DisplayPropertyAccessFasade.UpdateDisplayProperty(request.DisplayProperty);
            UpdateDisplayPropertyResponseMessage response = new UpdateDisplayPropertyResponseMessage();
			return response;
		}

		public virtual DeleteDisplayPropertyResponseMessage DeleteDisplayProperty(DeleteDisplayPropertyRequestMessage request)
		{   
            DisplayPropertyAccessFasade.DeleteDisplayProperty(request.GUID);
            DeleteDisplayPropertyResponseMessage response = new DeleteDisplayPropertyResponseMessage();
			return response;
		}

		#endregion		
		
	}
	
	public partial class ClientDisplayPropertiesService : ClientDisplayPropertiesServiceBase
	{
	}
	
}

