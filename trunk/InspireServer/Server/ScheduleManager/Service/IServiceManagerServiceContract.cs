//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Net.Security;
using WCF = global::System.ServiceModel;
using Inspire.Server.ScheduleManager.MessageContracts;
using Inspire.Server.Common.FaultContracts;

namespace Inspire.Server.ScheduleManager.ServiceContracts
{
	/// <summary>
	/// Service Contract Class - ServiceManagerServiceContract
	/// </summary>
	[WCF::ServiceContract(Namespace = "http://schemas.inspiredisplays.com/ServiceContract/", Name = "ServiceManagerServiceContract", SessionMode = WCF::SessionMode.Allowed, ProtectionLevel = ProtectionLevel.None )]
	public partial interface IServiceManagerServiceContract 
	{
        [WCF::FaultContract(typeof(GeneralFaultContract))]
		[WCF::OperationContract(IsTerminating = false, IsInitiating = true, IsOneWay = false, AsyncPattern = false, Action = "http://schemas.inspiredisplays.com/ServiceContract/ServiceContract1/GetSchedules", ProtectionLevel = ProtectionLevel.None)]
		GetScheduleResponseMessage GetSchedules(GetSchedulesRequestMessage request);

        [WCF::FaultContract(typeof(GeneralFaultContract))]
        [WCF::OperationContract(IsTerminating = false, IsInitiating = true, IsOneWay = false, AsyncPattern = false, Action = "http://schemas.inspiredisplays.com/ServiceContract/ServiceContract1/GetCurrentSchedules", ProtectionLevel = ProtectionLevel.None)]
        GetScheduleResponseMessage GetCurrentSchedules(GetSchedulesRequestMessage request);

        [WCF::FaultContract(typeof(GeneralFaultContract))]
        [WCF::OperationContract(IsTerminating = false, IsInitiating = true, IsOneWay = false, AsyncPattern = false, Action = "http://schemas.inspiredisplays.com/ServiceContract/ServiceContract1/GetSingleSchedules", ProtectionLevel = ProtectionLevel.None)]
        GetSingleScheduleResponseMessage GetSingleSchedule(GetSingleSchedulesRequestMessage request);

        [WCF::FaultContract(typeof(GeneralFaultContract))]
        [WCF::OperationContract(IsTerminating = false, IsInitiating = true, IsOneWay = false, AsyncPattern = false, Action = "http://schemas.inspiredisplays.com/ServiceContract/ServiceContract1/GetDisplaysInSchedule", ProtectionLevel = ProtectionLevel.None)]
        GetDisplaysInScheduleResponseMessage GetDisplaysInSchedule(GetDisplaysInScheduleRequestMessage request);

        [WCF::FaultContract(typeof(GeneralFaultContract))]
		[WCF::OperationContract(IsTerminating = false, IsInitiating = true, IsOneWay = false, AsyncPattern = false, Action = "http://schemas.inspiredisplays.com/ServiceContract/ServiceContract1/AddSchedule", ProtectionLevel = ProtectionLevel.None)]
		AddScheduleResponseMessage AddSchedule(AddScheduleRequestMessage request);

        [WCF::FaultContract(typeof(GeneralFaultContract))]
		[WCF::OperationContract(IsTerminating = false, IsInitiating = true, IsOneWay = false, AsyncPattern = false, Action = "http://schemas.inspiredisplays.com/ServiceContract/ServiceContract1/UpdateSchedule", ProtectionLevel = ProtectionLevel.None)]
		UpdateScheduleResponseMessage UpdateSchedule(UpdateScheduleRequestSchedule request);

        [WCF::FaultContract(typeof(GeneralFaultContract))]
		[WCF::OperationContract(IsTerminating = false, IsInitiating = true, IsOneWay = false, AsyncPattern = false, Action = "http://schemas.inspiredisplays.com/ServiceContract/ServiceContract1/DeleteSchedule", ProtectionLevel = ProtectionLevel.None)]
		DeleteScheduleResponseMessage DeleteSchedule(DeleteScheduleRequestMessage request);

        [WCF::FaultContract(typeof(GeneralFaultContract))]
        [WCF::OperationContract(IsTerminating = false, IsInitiating = true, IsOneWay = false, AsyncPattern = false, Action = "http://schemas.inspiredisplays.com/ServiceContract/ServiceContract1/GetSchedulesFromHostname", ProtectionLevel = ProtectionLevel.None)]
        GetScheduleFromHostnameResponseMessage GetSchedulesFromHostName(GetSchedulesFromHostnameRequestMessage request);


	}
}

