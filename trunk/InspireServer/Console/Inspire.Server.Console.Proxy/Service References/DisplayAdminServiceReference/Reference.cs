//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.3053
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Inspire.Server.Console.Proxy.DisplayAdminServiceReference {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(Namespace="http://ServiceContract.InspireDisplays.com", ConfigurationName="DisplayAdminServiceReference.DisplayAdminServiceContract")]
    public interface DisplayAdminServiceContract {
        
        // CODEGEN: Generating message contract since the operation CheckAndUpdateDisplays is neither RPC nor document wrapped.
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://ServiceContract.InspireDisplays.com/DisplayAdminContract/CheckAndUpdateDis" +
            "playsRequest")]
        void CheckAndUpdateDisplays(Inspire.Server.Console.Proxy.DisplayAdminServiceReference.CheckAndUpdateDisplaysRequest request);
        
        // CODEGEN: Generating message contract since the operation UpdateDisplays is neither RPC nor document wrapped.
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://ServiceContract.InspireDisplays.com/DisplayAdminServiceContract/UpdateDisp" +
            "laysRequest")]
        void UpdateDisplays(Inspire.Server.Console.Proxy.DisplayAdminServiceReference.UpdateDisplaysRequest request);
        
        // CODEGEN: Generating message contract since the operation PingDisplays is neither RPC nor document wrapped.
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://ServiceContract.InspireDisplays.com/DisplayAdminServiceContract/PingDispla" +
            "ys")]
        void PingDisplays(Inspire.Server.Console.Proxy.DisplayAdminServiceReference.PingDisplaysRequest request);
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class CheckAndUpdateDisplaysRequest {
        
        public CheckAndUpdateDisplaysRequest() {
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class UpdateDisplaysRequest {
        
        public UpdateDisplaysRequest() {
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class PingDisplaysRequest {
        
        public PingDisplaysRequest() {
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    public interface DisplayAdminServiceContractChannel : Inspire.Server.Console.Proxy.DisplayAdminServiceReference.DisplayAdminServiceContract, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    public partial class DisplayAdminServiceContractClient : System.ServiceModel.ClientBase<Inspire.Server.Console.Proxy.DisplayAdminServiceReference.DisplayAdminServiceContract>, Inspire.Server.Console.Proxy.DisplayAdminServiceReference.DisplayAdminServiceContract {
        
        public DisplayAdminServiceContractClient() {
        }
        
        public DisplayAdminServiceContractClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public DisplayAdminServiceContractClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public DisplayAdminServiceContractClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public DisplayAdminServiceContractClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        void Inspire.Server.Console.Proxy.DisplayAdminServiceReference.DisplayAdminServiceContract.CheckAndUpdateDisplays(Inspire.Server.Console.Proxy.DisplayAdminServiceReference.CheckAndUpdateDisplaysRequest request) {
            base.Channel.CheckAndUpdateDisplays(request);
        }
        
        public void CheckAndUpdateDisplays() {
            Inspire.Server.Console.Proxy.DisplayAdminServiceReference.CheckAndUpdateDisplaysRequest inValue = new Inspire.Server.Console.Proxy.DisplayAdminServiceReference.CheckAndUpdateDisplaysRequest();
            ((Inspire.Server.Console.Proxy.DisplayAdminServiceReference.DisplayAdminServiceContract)(this)).CheckAndUpdateDisplays(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        void Inspire.Server.Console.Proxy.DisplayAdminServiceReference.DisplayAdminServiceContract.UpdateDisplays(Inspire.Server.Console.Proxy.DisplayAdminServiceReference.UpdateDisplaysRequest request) {
            base.Channel.UpdateDisplays(request);
        }
        
        public void UpdateDisplays() {
            Inspire.Server.Console.Proxy.DisplayAdminServiceReference.UpdateDisplaysRequest inValue = new Inspire.Server.Console.Proxy.DisplayAdminServiceReference.UpdateDisplaysRequest();
            ((Inspire.Server.Console.Proxy.DisplayAdminServiceReference.DisplayAdminServiceContract)(this)).UpdateDisplays(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        void Inspire.Server.Console.Proxy.DisplayAdminServiceReference.DisplayAdminServiceContract.PingDisplays(Inspire.Server.Console.Proxy.DisplayAdminServiceReference.PingDisplaysRequest request) {
            base.Channel.PingDisplays(request);
        }
        
        public void PingDisplays() {
            Inspire.Server.Console.Proxy.DisplayAdminServiceReference.PingDisplaysRequest inValue = new Inspire.Server.Console.Proxy.DisplayAdminServiceReference.PingDisplaysRequest();
            ((Inspire.Server.Console.Proxy.DisplayAdminServiceReference.DisplayAdminServiceContract)(this)).PingDisplays(inValue);
        }
    }
}
