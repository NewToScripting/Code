//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.ServiceModel;
using Inspire.Server.Rooms.BusinessLogic;
using Inspire.Server.Rooms.MessageContracts;
using Inspire.Server.Rooms.ServiceContracts;
using WCF = global::System.ServiceModel;

namespace Inspire.Server.Rooms.ServiceImplementation
{
    /// <summary>
    /// Service Class - RoomsService
    /// </summary>
    [ServiceBehavior(Name = "RoomsService", 
        Namespace = "http://schemas.inspiredisplays.com", 
        InstanceContextMode = InstanceContextMode.PerSession, 
        ConcurrencyMode = ConcurrencyMode.Single )]
    public abstract class RoomsServiceBase : IRoomsServiceContract
    {
        #region RoomsServiceContract Members

        public virtual GetRoomsResponseMessage GetRooms(GetRoomsRequestMessage request)
        {
            GetRoomsResponseMessage response = new GetRoomsResponseMessage();
            response.Rooms = ResouceAccessFasade.GetRooms();
            return response;
        }

        public virtual GetRoomsFromDisplayIDResponseMessage GetRoomsFromDisplayID(GetRoomsFromDisplayIDRequestMessage request)
        {
            GetRoomsFromDisplayIDResponseMessage response = new GetRoomsFromDisplayIDResponseMessage();
            response.Rooms = ResouceAccessFasade.GetRoomsForDisplay(request.DisplayID);
            return response;
        }

        public virtual AddRoomResponseMessage AddRoom(AddRoomRequestMessage request)
        {
            ResouceAccessFasade.AddRoom(request.Room);
            return new AddRoomResponseMessage();
        }

        public virtual AddRoomToDisplayAssnResponseMessage AddRoomToDisplayAssn(AddRoomToDisplayAssnRequestMessage request)
        {
            ResouceAccessFasade.AddRoomToDisplayAssn(request.RoomID, request.DisplayID);
            return new AddRoomToDisplayAssnResponseMessage(); 
        }

        public virtual DeleteRoomToDisplayAssnResponseMessage DeleteRoomToDisplayAssn(DeleteRoomToDisplayAssnRequestMessage request)
        {
            ResouceAccessFasade.DeleteRoomToDisplayAssn(request.RoomID, request.DisplayID);
            return new DeleteRoomToDisplayAssnResponseMessage();
        }

        public virtual DeleteRoomResponseMessage DeleteRoom(DeleteRoomRequestMessage request)
        {
            ResouceAccessFasade.DeleteRoom(request.GUID);
            return new DeleteRoomResponseMessage();
        }

        public virtual GetAliasesResponseMessage GetAliases(GetAliasesRequestMessage request)
        {
            GetAliasesResponseMessage response = new GetAliasesResponseMessage();
            response.Aliases = ResouceAccessFasade.GetAliases(request.RoomID);
            return response;
        }

        public virtual AddAliasResponseMessage AddAlias(AddAliasRequestMessage request)
        {
            ResouceAccessFasade.AddAlias(request.Alias);
            return new AddAliasResponseMessage();
        }

        public virtual DeleteAliasResponseMessage DeleteAlias(DeleteAliasRequestMessage request)
        {
            ResouceAccessFasade.DeleteAlias(request.AliasID);
            return new DeleteAliasResponseMessage();
        }

        #endregion		
		
    }

    public partial class RoomsService : RoomsServiceBase
    {
    }
}