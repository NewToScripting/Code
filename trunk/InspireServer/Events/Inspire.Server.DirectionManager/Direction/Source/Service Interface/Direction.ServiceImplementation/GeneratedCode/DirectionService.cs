//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using Inspire.Server.Direction.BusinessLogic;
using Inspire.Server.Direction.MessageContracts;
using Inspire.Server.Direction.ServiceContracts;
using WCF = global::System.ServiceModel;

namespace Inspire.Server.Direction.ServiceImplementation
{	
	/// <summary>
	/// Service Class - DirectionService
	/// </summary>
	[WCF::ServiceBehavior(Name = "DirectionService", 
		Namespace = "http://schemas.inspiredisplays.com", 
		InstanceContextMode = WCF::InstanceContextMode.PerSession, 
		ConcurrencyMode = WCF::ConcurrencyMode.Single )]
	public abstract class DirectionServiceBase : IDirectionServiceContract
	{
		#region DirectionServiceContract Members

		public virtual GetDirectionsResponseMessage GetDirections(GetDirectionsRequestMessage request)
        {
            GetDirectionsResponseMessage response = new GetDirectionsResponseMessage();
            response.Directions = ResouceAccessFasade.GetDirections(request.DisplayID);
            return response;
        }

        public virtual AddDirectionResponseMessage AddDirection(AddDirectionRequestMessage request)
        {
            ResouceAccessFasade.AddDirections(request.Directions);
            return new AddDirectionResponseMessage();
        }

        public virtual DeleteDirectionResponseMessage DeleteDirection(DeleteDirectionRequestMessage request)
        {
            ResouceAccessFasade.DeleteDirections(request.DirectionID);
            return new DeleteDirectionResponseMessage();
        }

		#endregion		
		
	}
	
	public partial class DirectionService : DirectionServiceBase
	{
	}
	
}

