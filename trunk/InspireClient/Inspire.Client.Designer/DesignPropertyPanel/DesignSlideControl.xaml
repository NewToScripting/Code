<UserControl x:Class="Inspire.Client.DesignWindow.DesignPropertyPanel.DesignSlideControl"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:d="http://schemas.microsoft.com/expression/interactivedesigner/2006" 
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
    xmlns:DesignPropertyPanel="clr-namespace:Inspire.Client.Designer.DesignPropertyPanel" 
    xmlns:Inspire="clr-namespace:Inspire;assembly=Inspire" 
    xmlns:Commands="clr-namespace:Inspire.Commands;assembly=Inspire" mc:Ignorable="d" Background="#FF111111">
    <UserControl.CommandBindings>
        <CommandBinding Command="{x:Static Commands:InspireCommands.DeleteSlideCommand}" Executed="DeleteSlideExecuted" CanExecute="DeleteSlideCanExecute" />
        <CommandBinding Command="{x:Static Commands:InspireCommands.UploadSlideToServer}" Executed="UploadSlideToServerExecuted" CanExecute="UploadSlideToServerCanExecute" />
        <CommandBinding Command="{x:Static Commands:InspireCommands.RefreshSlidesCommand}" Executed="RefreshSlidesExecuted" CanExecute="RefreshSlidesCanExecute" />
    </UserControl.CommandBindings>
    <UserControl.Resources>
        <ContextMenu x:Key="SlideContextMenu" Background="#FF000000">
            <MenuItem Header="Delete Slide" Command="{x:Static Commands:InspireCommands.DeleteSlideCommand}" Background="#FF000000">
                <MenuItem.Icon>
                    <Image Source="Images/Remove.png"
               Width="16"
               Height="16" />
                </MenuItem.Icon>
            </MenuItem>
            <MenuItem Header="Upload to Server" Command="{x:Static Commands:InspireCommands.UploadSlideToServer}" Background="#FF000000">
                <MenuItem.Icon>
                    <Image Source="Images/Upload24.png"
               Width="20"
               Height="20" />
                </MenuItem.Icon>
            </MenuItem>
        </ContextMenu>

        <!--<Style TargetType="{x:Type ListBox}">
            <Setter Property="SnapsToDevicePixels" Value="true" />
            <Setter Property="Background" Value="{StaticResource SunkenBackground}" />
            <Setter Property="BorderBrush" Value="{DynamicResource SolidBorderBrush}" />
            <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto" />
            <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto" />
            <Setter Property="ScrollViewer.CanContentScroll" Value="True" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ListBox}">
                        <Grid>
                            <Border x:Name="Border" CornerRadius="4,4,4,4" BorderThickness="1,1,1,1" Margin="0,0,0,0" Background="{StaticResource DisabledSunkenBackground}" BitmapEffect="{DynamicResource EffectBlur}">
                                <Border.BorderBrush>
                                    <SolidColorBrush Color="{DynamicResource BlackColor}" />
                                </Border.BorderBrush>
                            </Border>
                            <ScrollViewer Margin="0,8,0,8" Style="{DynamicResource nuclearScrollViewer}" Focusable="false">

                                <ItemsPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                            </ScrollViewer>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Background" Value="{DynamicResource DisabledBackgroundBrush}" TargetName="Border" />
                                <Setter Property="BorderBrush" Value="{DynamicResource DisabledBorderBrush}" TargetName="Border" />
                            </Trigger>
                            <Trigger Property="IsGrouping" Value="true">
                                <Setter Property="ScrollViewer.CanContentScroll" Value="false" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>-->

        <Style d:IsControlPart="True" TargetType="{x:Type ListBoxItem}">
            <Setter Property="SnapsToDevicePixels" Value="true" />
            <Setter Property="OverridesDefaultStyle" Value="true" />
            <Setter Property="Background" Value="Transparent" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ListBoxItem}">
                        <ControlTemplate.Resources>
                            <Storyboard x:Key="HoverOn">
                                <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="contentPresenterHover" Storyboard.TargetProperty="(UIElement.Opacity)">
                                    <SplineDoubleKeyFrame KeyTime="00:00:00.2000000" Value="1" />
                                </DoubleAnimationUsingKeyFrames>
                                <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="contentPresenterHover" Storyboard.TargetProperty="(UIElement.Effect).(DropShadowEffect.Opacity)">
                                    <SplineDoubleKeyFrame KeyTime="00:00:00.2000000" Value="1" />
                                </DoubleAnimationUsingKeyFrames>
                            </Storyboard>
                            <Storyboard x:Key="HoverOff">
                                <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="contentPresenterHover" Storyboard.TargetProperty="(UIElement.Opacity)">
                                    <SplineDoubleKeyFrame KeyTime="00:00:00.3000000" Value="0" />
                                </DoubleAnimationUsingKeyFrames>
                            </Storyboard>
                            <Storyboard x:Key="SelectedOn">
                                <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="contentPresenter" Storyboard.TargetProperty="(UIElement.Effect).(DropShadowEffect.Opacity)">
                                    <SplineDoubleKeyFrame KeyTime="00:00:00.1000000" Value="1" />
                                </DoubleAnimationUsingKeyFrames>
                                <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="Selected" Storyboard.TargetProperty="(UIElement.Opacity)">
                                    <SplineDoubleKeyFrame KeyTime="00:00:00.1000000" Value="1" />
                                </DoubleAnimationUsingKeyFrames>
                            </Storyboard>
                            <Storyboard x:Key="SelectedOff">
                                <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="Selected" Storyboard.TargetProperty="(UIElement.Opacity)">
                                    <SplineDoubleKeyFrame KeyTime="00:00:00.3000000" Value="0" />
                                </DoubleAnimationUsingKeyFrames>
                                <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="contentPresenter" Storyboard.TargetProperty="(UIElement.Effect).(DropShadowEffect.Opacity)">
                                    <SplineDoubleKeyFrame KeyTime="00:00:00.3000000" Value="0" />
                                </DoubleAnimationUsingKeyFrames>
                            </Storyboard>
                            <Storyboard x:Key="HoverSelectedOn">
                                <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="contentPresenterSelected" Storyboard.TargetProperty="(UIElement.Opacity)">
                                    <SplineDoubleKeyFrame KeyTime="00:00:00.1000000" Value="1" />
                                </DoubleAnimationUsingKeyFrames>
                            </Storyboard>
                            <Storyboard x:Key="HoverSelectedOff">
                                <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="contentPresenterSelected" Storyboard.TargetProperty="(UIElement.Opacity)">
                                    <SplineDoubleKeyFrame KeyTime="00:00:00.3000000" Value="0" />
                                </DoubleAnimationUsingKeyFrames>
                            </Storyboard>
                        </ControlTemplate.Resources>
                        <Grid SnapsToDevicePixels="true"  Margin="10,0,10,0">
                            <!--Background="{StaticResource DisabledSunkenBackground}"-->
                            <Border x:Name="Border" Background="{x:Null}" />
                            <Border x:Name="Selected"  BorderThickness="1,1,1,1"  >
                                <!--Background="{StaticResource SunkenBackground}" -->
                                <Border.BorderBrush>
                                    <SolidColorBrush Color="Black" />
                                </Border.BorderBrush>
                                <!--<Border BorderThickness="1,1,1,1" CornerRadius="1,1,1,1">
                                    <Border.BorderBrush>
                                        <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                            <GradientStop Color="#FF000000" Offset="0" />
                                            <GradientStop Color="#FFFFFFFF" Offset="1" />
                                            <GradientStop Color="#FF616161" Offset="0.219" />
                                        </LinearGradientBrush>
                                    </Border.BorderBrush>
                                </Border>-->
                            </Border>
                            <ContentPresenter Margin="2" x:Name="contentPresenterHover" VerticalAlignment="Center" d:LayoutOverrides="Height" Opacity="0">
                                <ContentPresenter.Effect>
                                    <DropShadowEffect Color="{StaticResource MainColor}" Opacity="1" BlurRadius="10" ShadowDepth="0" />
                                </ContentPresenter.Effect>
                            </ContentPresenter>
                            <ContentPresenter Margin="2" x:Name="contentPresenterSelected" VerticalAlignment="Center" d:LayoutOverrides="Height" Opacity="0">
                                <ContentPresenter.Effect>
                                    <DropShadowEffect Color="{StaticResource MainColor}" Opacity="1" BlurRadius="10" ShadowDepth="0" />
                                </ContentPresenter.Effect>
                            </ContentPresenter>
                            <ContentPresenter Margin="2" x:Name="contentPresenter" VerticalAlignment="Center">
                                <ContentPresenter.Effect>
                                    <DropShadowEffect Color="{StaticResource MainColor}" Opacity="0" BlurRadius="4" ShadowDepth="0" />
                                </ContentPresenter.Effect>
                            </ContentPresenter>
                        </Grid>
                        <ControlTemplate.Triggers>

                            <EventTrigger RoutedEvent="FrameworkElement.Loaded">
                                <BeginStoryboard x:Name="LoadedSelectedOff_BeginStoryboard" Storyboard="{StaticResource SelectedOff}" />
                            </EventTrigger>

                            <EventTrigger RoutedEvent="ListBoxItem.Selected">
                                <BeginStoryboard x:Name="LBISelectedOn_BeginStoryboard" Storyboard="{StaticResource SelectedOn}" />
                            </EventTrigger>

                            <EventTrigger RoutedEvent="ListBoxItem.Unselected">
                                <BeginStoryboard x:Name="LBISelectedOff_BeginStoryboard" Storyboard="{StaticResource SelectedOff}" />
                            </EventTrigger>

                            <MultiTrigger>
                                <MultiTrigger.ExitActions>
                                    <BeginStoryboard Storyboard="{StaticResource HoverSelectedOff}" x:Name="HoverSelectedOff_BeginStoryboard" />
                                </MultiTrigger.ExitActions>
                                <MultiTrigger.EnterActions>
                                    <BeginStoryboard Storyboard="{StaticResource HoverSelectedOn}" x:Name="HoverSelectedOn_BeginStoryboard" />
                                </MultiTrigger.EnterActions>
                                <MultiTrigger.Conditions>
                                    <Condition Property="Selector.IsSelected" Value="True" />
                                    <Condition Property="IsMouseOver" Value="True" />
                                </MultiTrigger.Conditions>
                            </MultiTrigger>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="IsMouseOver" Value="True" />
                                    <Condition Property="Selector.IsSelected" Value="False" />
                                </MultiTrigger.Conditions>
                                <MultiTrigger.ExitActions>
                                    <BeginStoryboard x:Name="HoverOff_BeginStoryboard" Storyboard="{StaticResource HoverOff}" />
                                </MultiTrigger.ExitActions>
                                <MultiTrigger.EnterActions>
                                    <BeginStoryboard Storyboard="{StaticResource HoverOn}" />
                                </MultiTrigger.EnterActions>
                            </MultiTrigger>

                            <Trigger Property="IsSelected" Value="true">
                                <Trigger.ExitActions>
                                    <BeginStoryboard x:Name="SelectedOff_BeginStoryboard" Storyboard="{StaticResource SelectedOff}" />
                                </Trigger.ExitActions>
                                <Trigger.EnterActions>
                                    <BeginStoryboard x:Name="SelectedOn_BeginStoryboard" Storyboard="{StaticResource SelectedOn}" />
                                </Trigger.EnterActions>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Foreground" Value="{StaticResource DisabledForegroundBrush}" />
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="Background" Value="Green" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Setter Property="Foreground">
                <Setter.Value>
                    <SolidColorBrush Color="{StaticResource WhiteColor}" />
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <Trigger Property="Selector.IsSelected" Value="True">
                    <Setter Property="Foreground">
                        <Setter.Value>
                            <SolidColorBrush Color="{StaticResource MainColor}" />
                        </Setter.Value>
                    </Setter>
                </Trigger>
                <MultiTrigger>
                    <MultiTrigger.Conditions>
                        <Condition Property="IsMouseOver" Value="True" />
                        <Condition Property="Selector.IsSelected" Value="True" />
                    </MultiTrigger.Conditions>
                    <Setter Property="Foreground">
                        <Setter.Value>
                            <SolidColorBrush Color="{StaticResource WhiteColor}" />
                        </Setter.Value>
                    </Setter>
                </MultiTrigger>
                <MultiTrigger>
                    <MultiTrigger.Conditions>
                        <Condition Property="Selector.IsSelected" Value="True" />
                        <Condition Property="IsMouseOver" Value="True" />
                    </MultiTrigger.Conditions>
                    <Setter Property="Foreground">
                        <Setter.Value>
                            <SolidColorBrush Color="{StaticResource WhiteColor}" />
                        </Setter.Value>
                    </Setter>

                </MultiTrigger>
            </Style.Triggers>
        </Style>
    </UserControl.Resources>
    <DockPanel LastChildFill="True">
        <Button Name="btnRefresh" DockPanel.Dock="Bottom" Height="30" HorizontalContentAlignment="Left" Command="{x:Static Commands:InspireCommands.RefreshSlidesCommand}" Content="Refresh Slides" Inspire:ButtonImage.Image="Images\Refresh.png"/>
        <Inspire:InnerGlowBorderControl DockPanel.Dock="Top" InnerGlowColor="#ff000000"  InnerGlowSize="9,10,9,0" InnerGlowOpacity="0.7"
                                      Margin="0,0,0,0" Background="#FF111111" BorderBrush="#FF333333" BorderThickness="2,2,2,2" CornerRadius="5,5,5,5">
            <Grid Margin="0,0,0,0">
                <Grid.Background>
                    <LinearGradientBrush EndPoint="127.499000549316,154.52799987793" StartPoint="117.924003601074,149" MappingMode="Absolute" SpreadMethod="Repeat">
                        <GradientStop Color="#00000000"/>
                        <GradientStop Color="#00000000" Offset="1"/>
                        <GradientStop Color="#00000000" Offset="0.498"/>
                        <GradientStop Color="#00000000" Offset="0.55500000715255737"/>
                        <GradientStop Color="#FF000000" Offset="0.527999997138977"/>
                    </LinearGradientBrush>
                </Grid.Background>
                <Grid Margin="0,0,0,0">
                    <Grid.Background>
                        <LinearGradientBrush EndPoint="119.947998046875,156.550994873047" StartPoint="125.474998474121,146.977005004883" MappingMode="Absolute" SpreadMethod="Repeat">
                            <GradientStop Color="#00000000"/>
                            <GradientStop Color="#00000000" Offset="1"/>
                            <GradientStop Color="#00000000" Offset="0.498"/>
                            <GradientStop Color="#00000000" Offset="0.55500000715255737"/>
                            <GradientStop Color="#FF000000" Offset="0.527999997138977"/>
                        </LinearGradientBrush>
                    </Grid.Background>
                    <Inspire:Filter Header="Search:" x:Name="DesignerSlideFilter" SearchStrategy="{x:Static Inspire:Slide.NameSearchStrategy}">
                        <ListBox x:Name="DesignSlideWrapPanel" BorderThickness="1,0,1,1" SelectionMode="Single" Style="{x:Null}" Background="Transparent">
                        <ListBox.ItemTemplate>
                            <DataTemplate DataType="{x:Type Inspire:Slide}">
                                <Border Background="Transparent" ContextMenu="{StaticResource SlideContextMenu}" MouseLeftButtonDown="ListBoxItem_MouseLeftButtonDown">
                                    <Grid Height="95" >
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="100"/>
                                            <ColumnDefinition Width="90"/>
                                            <ColumnDefinition Width="44*"/>
                                        </Grid.ColumnDefinitions>
                                        <Grid.RowDefinitions>
                                            <RowDefinition Height="15"/>
                                            <RowDefinition Height="20" />
                                            <RowDefinition Height="50*"/>
                                        </Grid.RowDefinitions>
                                        <StackPanel x:Name="PART_OfflineControl" Visibility="Collapsed" Margin="0,0,2,2" Orientation="Horizontal" VerticalAlignment="Bottom" Grid.Row="2" Grid.Column="1" Grid.ColumnSpan="2" HorizontalAlignment="Right">
                                            <Grid Margin="0,0,2,0" Width="10" Height="10">
                                                <!-- Background Layer -->
                                                <Ellipse Fill="Red"/>
                                                <!-- Refraction Layer -->
                                                <Ellipse x:Name="RefractionLayer">
                                                    <Ellipse.Fill>
                                                        <RadialGradientBrush GradientOrigin="0.496,1.052">
                                                            <RadialGradientBrush.RelativeTransform>
                                                                <TransformGroup>
                                                                    <ScaleTransform CenterX="0.5" CenterY="0.5" ScaleX="1.5" ScaleY="1.5"/>
                                                                    <TranslateTransform X="0.02" Y="0.3"/>
                                                                </TransformGroup>
                                                            </RadialGradientBrush.RelativeTransform>
                                                            <GradientStop Offset="1" Color="#00000000"/>
                                                            <GradientStop Offset="0.4" Color="#FFFFFFFF"/>
                                                        </RadialGradientBrush>
                                                    </Ellipse.Fill>
                                                </Ellipse>
                                                <!-- Reflection Layer -->
                                                <Path x:Name="ReflectionLayer" VerticalAlignment="Top" Stretch="Fill">
                                                    <Path.RenderTransform>
                                                        <ScaleTransform ScaleY="0.5" />
                                                    </Path.RenderTransform>
                                                    <Path.Data>
                                                        <PathGeometry>
                                                            <PathFigure IsClosed="True" StartPoint="98.999,45.499">
                                                                <BezierSegment Point1="98.999,54.170" Point2="89.046,52.258" Point3="85.502,51.029"/>
                                                                <BezierSegment
                                    IsSmoothJoin="True"
                                    Point1="75.860,47.685"
                                    Point2="69.111,45.196"
                                    Point3="50.167,45.196"/>
                                                                <BezierSegment Point1="30.805,45.196" Point2="20.173,47.741" Point3="10.665,51.363"/>
                                                                <BezierSegment
                                    IsSmoothJoin="True"
                                    Point1="7.469,52.580"
                                    Point2="1.000,53.252"
                                    Point3="1.000,44.999"/>
                                                                <BezierSegment Point1="1.000,39.510" Point2="0.884,39.227" Point3="2.519,34.286"/>
                                                                <BezierSegment
                                    IsSmoothJoin="True"
                                    Point1="9.106,14.370"
                                    Point2="27.875,0"
                                    Point3="50,0"/>
                                                                <BezierSegment Point1="72.198,0" Point2="91.018,14.466" Point3="97.546,34.485"/>
                                                                <BezierSegment
                                    IsSmoothJoin="True"
                                    Point1="99.139,39.369"
                                    Point2="98.999,40.084"
                                    Point3="98.999,45.499"/>
                                                            </PathFigure>
                                                        </PathGeometry>
                                                    </Path.Data>
                                                    <Path.Fill>
                                                        <RadialGradientBrush GradientOrigin="0.498,0.526">
                                                            <RadialGradientBrush.RelativeTransform>
                                                                <TransformGroup>
                                                                    <ScaleTransform
                                       CenterX="0.5"
                                       CenterY="0.5"
                                       ScaleX="1"
                                       ScaleY="1.997"/>
                                                                    <TranslateTransform X="0" Y="0.5"/>
                                                                </TransformGroup>
                                                            </RadialGradientBrush.RelativeTransform>
                                                            <GradientStop Offset="1" Color="#FFFFFFFF"/>
                                                            <GradientStop Offset="0.85" Color="#92FFFFFF"/>
                                                            <GradientStop Offset="0" Color="#00000000"/>
                                                        </RadialGradientBrush>
                                                    </Path.Fill>
                                                </Path>
                                  
                                            </Grid>
                                            <TextBlock Foreground="{StaticResource Highlight}" FontSize="9">Offline</TextBlock>
                                        </StackPanel>
                                        <StackPanel Margin="0,2,2,0" Orientation="Horizontal" Grid.Row="0" Grid.Column="1" Grid.ColumnSpan="2" HorizontalAlignment="Right">
                                            <TextBlock Foreground="{StaticResource Highlight}" FontSize="9">(</TextBlock>
                                            <TextBlock Foreground="{StaticResource Highlight}" FontSize="9" Text="{Binding Path=HResolution}"/>
                                            <TextBlock Foreground="{StaticResource Highlight}" FontSize="9">x</TextBlock>
                                            <TextBlock Foreground="{StaticResource Highlight}" FontSize="9" Text="{Binding Path=VResolution}"/>
                                            <TextBlock Foreground="{StaticResource Highlight}" FontSize="9">)</TextBlock>
                                        </StackPanel>

                                        <TextBlock Width="110" HorizontalAlignment="Left" ToolTip="{Binding Path=Name}" TextTrimming="CharacterEllipsis" FontSize="12" Grid.Column="1" Grid.Row="1" Grid.ColumnSpan="2" Text="{Binding Path=Name}">
                                            <TextBlock.Effect>
                                                <DropShadowEffect
                                                    ShadowDepth="1"
                                                    Direction="270"
                                                    Color="Black" />
                                            </TextBlock.Effect>
                                            
                                        </TextBlock>

                                        <TextBox Width="130" Height="80" Foreground="{StaticResource Highlight}"  BorderThickness="0" Background="Transparent" Style="{x:Null}" TextWrapping="Wrap" Focusable="False" IsReadOnly="True" HorizontalContentAlignment="Left" HorizontalAlignment="Left" FontSize="12" Grid.Column="1" Grid.ColumnSpan="2" Grid.Row="2" Text="{Binding Path=Description}">
                                            <TextBox.Effect>
                                                <DropShadowEffect
                                ShadowDepth="1"
                                Direction="270"
                                Color="Black" />
                                            </TextBox.Effect>
                                            <TextBox.ToolTip>
                                                <Grid MaxWidth="200">
                                                    <TextBox TextWrapping="Wrap" BorderThickness="0" Background="Transparent" Style="{x:Null}" Text="{Binding Path=Description}"/>
                                                </Grid>
                                            </TextBox.ToolTip>
                                        </TextBox>
                                        <!--<Button Width="115" Height="100" ContextMenu="{StaticResource SlideContextMenu}" MouseDoubleClick="Slide_MouseDoubleClick" PreviewMouseLeftButtonDown="ListBoxItem_MouseLeftButtonDown" ToolTip="{Binding Path=Name}"/>-->
                                        <Image Grid.Column="0" Grid.Row="0" Grid.RowSpan="3" HorizontalAlignment="Center" Source="{Binding Path=ThumbNail, Mode=OneWay, NotifyOnTargetUpdated=True}" RenderOptions.BitmapScalingMode="LowQuality" Height="90" Width="90" IsHitTestVisible="False" >
                                            <Image.Effect>
                                                    <DropShadowEffect ShadowDepth="0" />
                                            </Image.Effect>
                                        </Image>
                                        <DesignPropertyPanel:SaveControl x:Name="PART_SaveControl" Grid.Column="0" Grid.ColumnSpan="2" Grid.RowSpan="3" Margin="20,0,0,0" Visibility="Collapsed"/>
                                    </Grid>
                                </Border>
                                <DataTemplate.Triggers>
                                    <DataTrigger Binding="{Binding IsSaving}" Value="true">
                                        <Setter Property="Visibility" Value="Visible" TargetName="PART_SaveControl" />
                                    </DataTrigger>
                                    <DataTrigger Binding="{Binding IsOnline}" Value="false">
                                        <Setter Property="Visibility" Value="Visible" TargetName="PART_OfflineControl" />
                                    </DataTrigger>
                                </DataTemplate.Triggers>
                            </DataTemplate>
                        </ListBox.ItemTemplate>
                        <ListBox.ItemsPanel>
                            <ItemsPanelTemplate>
                                <VirtualizingStackPanel/>
                            </ItemsPanelTemplate>
                        </ListBox.ItemsPanel>
                    </ListBox>
                   </Inspire:Filter>
                </Grid>
            </Grid>
        </Inspire:InnerGlowBorderControl>
    </DockPanel>
</UserControl>
