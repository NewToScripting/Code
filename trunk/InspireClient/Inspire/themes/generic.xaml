<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:d="http://schemas.microsoft.com/expression/interactivedesigner/2006" 
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" mc:Ignorable="d"
    xmlns:Themes="clr-namespace:Microsoft.Windows.Themes;assembly=PresentationFramework.Aero"
    xmlns:MediaObjects="clr-namespace:Inspire.MediaObjects"
    xmlns:Commands="clr-namespace:Inspire.Commands" xmlns:local="clr-namespace:Inspire">

    <SolidColorBrush x:Key="Foreground" Color="LightGray" />

    <SolidColorBrush x:Key="SunkenBackground" Color="#444444" />

    <SolidColorBrush x:Key="Highlight" Color="#808080" />

    <SolidColorBrush x:Key="RaisedHighlight" Color="#888888" />

    <SolidColorBrush x:Key="Shadow" Color="#101010" />

    <SolidColorBrush x:Key="RaisedShadow" Color="#000000" />

    <SolidColorBrush x:Key="DisabledForeground" Color="#777" />

    <SolidColorBrush x:Key="DisabledSunkenBackground" Color="#404040" />

    <SolidColorBrush x:Key="DisabledHighlight" Color="#505050" />

    <SolidColorBrush x:Key="DisabledShadow" Color="#303030" />

    <SolidColorBrush x:Key="BarelyVisible" Color="#01000000"/>

    <LinearGradientBrush x:Key="Normal" StartPoint="0,0" EndPoint="0,1">
        <GradientStop Offset="0.0" Color="#585858" />
        <GradientStop Offset="1.2" Color="#282828" />
    </LinearGradientBrush>
    
    <!-- InnerGlowBorder style -->
    <Style TargetType="local:InnerGlowBorderControl">
        <Setter Property="InnerGlowSize" Value="10,10,10,10" />
        <Setter Property="InnerGlowOpacity" Value="0.5" />
        <Setter Property="InnerGlowColor" Value="#ff000000" />
        <Setter Property="ClipContent" Value="True" />
        <Setter Property="ContentZIndex" Value="0" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="local:InnerGlowBorderControl">
                        <Grid>
                            <ContentPresenter Margin="{TemplateBinding Padding}" Canvas.ZIndex="{TemplateBinding ContentZIndex}" />

                            <Border x:Name="PART_LeftGlow" IsHitTestVisible="False" Canvas.ZIndex="0"
                                    Opacity="{TemplateBinding InnerGlowOpacity}"
                                    HorizontalAlignment="Left" VerticalAlignment="Stretch"
                                    Width="10">
                                <Border.Background>
                                    <LinearGradientBrush StartPoint="0, 0.5" EndPoint="1, 0.5">
                                        <GradientStop Offset="0" Color="#ff000000" x:Name="PART_LeftGlowStop0" />
                                        <GradientStop Offset="1" Color="#00000000" x:Name="PART_LeftGlowStop1" />
                                    </LinearGradientBrush>
                                </Border.Background>
                            </Border>
                            <Border x:Name="PART_TopGlow" IsHitTestVisible="False" Canvas.ZIndex="0"
                                    Opacity="{TemplateBinding InnerGlowOpacity}"
                                    HorizontalAlignment="Stretch" VerticalAlignment="Top"
                                    Height="10">
                                <Border.Background>
                                    <LinearGradientBrush StartPoint="0.5, 0" EndPoint="0.5, 1">
                                        <GradientStop Offset="0" Color="#ff000000" x:Name="PART_TopGlowStop0" />
                                        <GradientStop Offset="1" Color="#00000000" x:Name="PART_TopGlowStop1" />
                                    </LinearGradientBrush>
                                </Border.Background>
                            </Border>
                            <Border x:Name="PART_RightGlow" IsHitTestVisible="False" Canvas.ZIndex="0"
                                    Opacity="{TemplateBinding InnerGlowOpacity}"
                                    HorizontalAlignment="Right" VerticalAlignment="Stretch"
                                    Width="10">
                                <Border.Background>
                                    <LinearGradientBrush StartPoint="1, 0.5" EndPoint="0, 0.5">
                                        <GradientStop Offset="0" Color="#ff000000" x:Name="PART_RightGlowStop0" />
                                        <GradientStop Offset="1" Color="#00000000" x:Name="PART_RightGlowStop1" />
                                    </LinearGradientBrush>
                                </Border.Background>
                            </Border>
                            <Border x:Name="PART_BottomGlow" IsHitTestVisible="False" Canvas.ZIndex="0"
                                    Opacity="{TemplateBinding InnerGlowOpacity}"
                                    HorizontalAlignment="Stretch" VerticalAlignment="Bottom"
                                    Height="10">
                                <Border.Background>
                                    <LinearGradientBrush StartPoint="0.5, 1" EndPoint="0.5, 0">
                                        <GradientStop Offset="0" Color="#ff000000" x:Name="PART_BottomGlowStop0" />
                                        <GradientStop Offset="1" Color="#00000000" x:Name="PART_BottomGlowStop1" />
                                    </LinearGradientBrush>
                                </Border.Background>
                            </Border>
                        </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <DrawingBrush 
    x:Key="CheckerBrush"
    Viewport="0,0,10,10" ViewportUnits="Absolute" TileMode="Tile">
        <DrawingBrush.Drawing>
            <DrawingGroup>
                <GeometryDrawing Brush="White">
                    <GeometryDrawing.Geometry>
                        <RectangleGeometry Rect="0,0 100,100" />
                    </GeometryDrawing.Geometry>
                </GeometryDrawing>
                <GeometryDrawing Brush="LightGray">
                    <GeometryDrawing.Geometry>
                        <GeometryGroup>
                            <RectangleGeometry Rect="0,0 50,50" />
                            <RectangleGeometry Rect="50,50 50,50" />
                        </GeometryGroup>
                    </GeometryDrawing.Geometry>
                </GeometryDrawing>
            </DrawingGroup>
        </DrawingBrush.Drawing>
    </DrawingBrush>
    
    
    <!-- ******************************** Begin DiscoveryBlueLowTheme ********************************** -->


    <Color x:Key="MainColor">#FF00ADFF</Color>
    <Color x:Key="HoverColor">#FF393939</Color>
    <Color x:Key="DefaultColor">#FF9BB1C5</Color>
    <SolidColorBrush x:Key="LightBrush" Color="#FF333333" />
    <SolidColorBrush x:Key="ShadeBrush" Color="#FF434343" />

    <Color x:Key="TopGradientSelectColor">#FFFFFFFF</Color>
    <Color x:Key="BottomGradientSelectColor">#FF737373</Color>

    <Color x:Key="BlackColor">#FF000000</Color>
    <Color x:Key="WhiteColor">#FFFFFFFF</Color>

    <SolidColorBrush x:Key="TextBrush" Color="#FFFFFFFF" />
    <SolidColorBrush x:Key="NormalBrush" Color="{StaticResource MainColor}" />
    <SolidColorBrush x:Key="NormalBorderBrush" Color="#FF333333" />
    <SolidColorBrush x:Key="HoverBrush" Color="{StaticResource HoverColor}" />
  

    <LinearGradientBrush x:Key="PressedBrush" EndPoint="0.5,0.971" StartPoint="0.5,0.042">
        <GradientStop Color="#4C000000" Offset="0" />
        <GradientStop Color="#26FFFFFF" Offset="1" />
        <GradientStop Color="#4C000000" Offset="0.467" />
        <GradientStop Color="#26FFFFFF" Offset="0.479" />
    </LinearGradientBrush>

    <SolidColorBrush x:Key="ControlBackgroundBrush" Color="#FF333333" />

    <SolidColorBrush x:Key="SemiTransparentBlackBrushKey">#40000000</SolidColorBrush>

    <LinearGradientBrush x:Key="SelectedBackgroundBrush" EndPoint="0.5,1" StartPoint="0.5,0">
        <GradientStop Color="{StaticResource TopGradientSelectColor}" Offset="0" />
        <GradientStop Color="{StaticResource BottomGradientSelectColor}" Offset="1" />
    </LinearGradientBrush>

    <SolidColorBrush x:Key="DisabledForegroundBrush" Color="#888" />

    <SolidColorBrush x:Key="DisabledBorderBrush" Color="#AAA" />

    <LinearGradientBrush x:Key="ShineBrush" EndPoint="0.5,0.971" StartPoint="0.5,0.042">
        <GradientStop Color="#59FFFFFF" Offset="0" />
        <GradientStop Color="#00FFFFFF" Offset="1" />
        <GradientStop Color="#26FFFFFF" Offset="0.467" />
        <GradientStop Color="#00FFFFFF" Offset="0.475" />
    </LinearGradientBrush>

    <LinearGradientBrush x:Key="HoverShineBrush" EndPoint="0.5,0.971" StartPoint="0.5,0.042">
        <GradientStop Color="#4CFFFFFF" Offset="0" />
        <GradientStop Color="#26FFFFFF" Offset="1" />
        <GradientStop Color="#26FFFFFF" Offset="0.467" />
        <GradientStop Color="#00FFFFFF" Offset="0.475" />
        <GradientStop Color="#00FFFFFF" Offset="0.856" />
    </LinearGradientBrush>

    <LinearGradientBrush x:Key="PressedBorderBrush" EndPoint="0,1" StartPoint="0,0">
        <GradientStop Color="#444" Offset="0.0" />
        <GradientStop Color="#888" Offset="1.0" />
    </LinearGradientBrush>


    <SolidColorBrush x:Key="SolidBorderBrush" Color="#888" />





    <Color x:Key="GrayColor">#FF939393</Color>

    <Color x:Key="ControlColor">#FF343434</Color>

    <Color x:Key="TopGradient">#FF666666</Color>
    <Color x:Key="BottomGradient">#FF333333</Color>

    <LinearGradientBrush x:Key="MouseOverBrush"
                       EndPoint="0,1"
                       StartPoint="0,0">
        <GradientStop Color="#FFF"
                  Offset="0.0" />
        <GradientStop Color="#AAA"
                  Offset="1.0" />
    </LinearGradientBrush>


    <LinearGradientBrush x:Key="DisabledBackgroundBrush" StartPoint="0,0" EndPoint="0,1">
        <GradientBrush.GradientStops>
            <GradientStopCollection>
                <GradientStop Color="#FF474444" Offset="0.0"/>
                <GradientStop Color="#FF000000" Offset="1.0"/>
            </GradientStopCollection>
        </GradientBrush.GradientStops>
    </LinearGradientBrush>

    <LinearGradientBrush x:Key="WindowBackgroundBrush"
                       EndPoint="0.5,1"
                       StartPoint="0.5,0">
        <GradientStop Color="{StaticResource TopGradient}"
                  Offset="0" />
        <GradientStop Color="{StaticResource BottomGradient}"
                  Offset="1" />
    </LinearGradientBrush>

    <LinearGradientBrush x:Key="DefaultedBorderBrush"
                       EndPoint="0,1"
                       StartPoint="0,0">
        <GradientStop Color="#777"
                  Offset="0.0" />
        <GradientStop Color="#000"
                  Offset="1.0" />
    </LinearGradientBrush>

    <SolidColorBrush x:Key="LightBorderBrush"
                   Color="#AAA" />
    <SolidColorBrush x:Key="LightColorBrush"
                   Color="#DDD" />

    <SolidColorBrush x:Key="GlyphBrush"
                   Color="{StaticResource MainColor}" />

    <Style x:Key="nuclearButtonFocusVisual">
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate>
                    <Border>
                        <Rectangle Margin="2"
                       Stroke="#60000000"
                       StrokeThickness="1"
                       StrokeDashArray="1 2" />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    
    <Style x:Key="ButtonFocusVisual">
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate>
                    <Rectangle SnapsToDevicePixels="true" Margin="2" Stroke="Black" StrokeDashArray="1 2" StrokeThickness="1" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    

    <LinearGradientBrush x:Key="PopupBackgroundBrush"
                       EndPoint="0.5,0.968"
                       StartPoint="0.5,0.063">
        <GradientStop Color="#FF3E3E3E"
                  Offset="0" />
        <GradientStop Color="#FF2D2D2D"
                  Offset="1" />
        <GradientStop Color="#FF262626"
                  Offset="0.519" />
    </LinearGradientBrush>

    <!--<BlurBitmapEffect Radius="2"
                    x:Key="EffectBlur" KernelType="Box" />-->
    <DropShadowEffect x:Key="EffectBlur" BlurRadius="6" ShadowDepth="0" />


    <Style x:Key="RadioButtonFocusVisual">
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate>
                    <Border>
                        <Rectangle Margin="15,0,0,0" Stroke="#60000000" StrokeThickness="1" StrokeDashArray="1 2" />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>


    <LinearGradientBrush x:Key="HorizontalNormalBrush" StartPoint="0,0" EndPoint="1,0">
        <GradientBrush.GradientStops>
            <GradientStopCollection>
                <GradientStop Color="#FFF" Offset="0.0"/>
                <GradientStop Color="#CCC" Offset="1.0"/>
            </GradientStopCollection>
        </GradientBrush.GradientStops>
    </LinearGradientBrush>

    <LinearGradientBrush x:Key="HorizontalLightBrush" StartPoint="0,0" EndPoint="1,0">
        <GradientBrush.GradientStops>
            <GradientStopCollection>
                <GradientStop Color="#FFF" Offset="0.0"/>
                <GradientStop Color="#EEE" Offset="1.0"/>
            </GradientStopCollection>
        </GradientBrush.GradientStops>
    </LinearGradientBrush>

    <Style x:Key="CheckBoxFocusVisual">
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate>
                    <Border>
                        <Rectangle Margin="15,0,0,0" Stroke="#60000000" StrokeThickness="1" StrokeDashArray="1 2" />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style d:IsControlPart="True" TargetType="{x:Type RepeatButton}" BasedOn="{x:Null}">
        <Setter Property="Background" Value="{StaticResource NormalBrush}" />
        <Setter Property="BorderBrush" Value="{StaticResource NormalBorderBrush}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RepeatButton}">
                    <ControlTemplate.Resources>
                        <Storyboard x:Key="HoverOn">
                            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="Hover" Storyboard.TargetProperty="(UIElement.Opacity)">
                                <SplineDoubleKeyFrame KeyTime="00:00:00.1000000" Value="1" />
                            </DoubleAnimationUsingKeyFrames>
                        </Storyboard>
                        <Storyboard x:Key="HoverOff">
                            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="Hover" Storyboard.TargetProperty="(UIElement.Opacity)">
                                <SplineDoubleKeyFrame KeyTime="00:00:00.3000000" Value="0" />
                            </DoubleAnimationUsingKeyFrames>
                        </Storyboard>
                    </ControlTemplate.Resources>

                    <Grid>
                        <Border BorderThickness="2,2,2,2" CornerRadius="7,7,7,7" BorderBrush="{x:Null}" x:Name="Shadow" Effect="{StaticResource EffectBlur}">

                            <Border.Background>
                                <SolidColorBrush Color="{StaticResource BlackColor}" />
                            </Border.Background>
                        </Border>
                        <Border x:Name="Base" CornerRadius="8,8,8,8">
                            <Border.Background>
                                <SolidColorBrush Color="{StaticResource BlackColor}" />
                            </Border.Background>
                        </Border>
                        <Border BorderThickness="2,2,2,2" CornerRadius="7,7,7,7" x:Name="MainBorder" BorderBrush="#66FFFFFF">
                            <Border.Background>
                                <SolidColorBrush Color="{StaticResource ControlColor}" />
                            </Border.Background>
                        </Border>
                        <Border BorderThickness="2,2,2,2" CornerRadius="7,7,7,7" Opacity="0.5" BorderBrush="{x:Null}" x:Name="Fill">
                            <Border.Background>
                                <LinearGradientBrush EndPoint="0.973,0.5" StartPoint="0.028,0.5">
                                    <GradientStop Color="#FF000000" Offset="0.997" />
                                    <GradientStop Color="#FFFFFFFF" Offset="0.001" />
                                </LinearGradientBrush>
                            </Border.Background>
                        </Border>
                        <Border CornerRadius="7,7,7,7" BorderThickness="2,2,2,2" Opacity="0" x:Name="Hover">
                            <Border.BorderBrush>
                                <SolidColorBrush Color="{StaticResource MainColor}" />
                            </Border.BorderBrush>
                        </Border>
                        <ContentPresenter HorizontalAlignment="Center" x:Name="ContentPresenter" VerticalAlignment="Center" Content="{TemplateBinding Content}" ContentTemplate="{TemplateBinding ContentTemplate}" ContentTemplateSelector="{TemplateBinding ContentTemplateSelector}" Margin="1,2,1,2" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsKeyboardFocused" Value="true" />
                        <Trigger Property="IsMouseOver" Value="true">
                            <Trigger.ExitActions>
                                <BeginStoryboard Storyboard="{StaticResource HoverOff}" x:Name="HoverOff_BeginStoryboard" />
                            </Trigger.ExitActions>
                            <Trigger.EnterActions>
                                <BeginStoryboard Storyboard="{StaticResource HoverOn}" />
                            </Trigger.EnterActions>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="true" />
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Foreground" Value="{StaticResource DisabledForegroundBrush}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="Margin" Value="0,0,0,0" />
    </Style>

    <Style x:Key="nuclearThumbStyle" d:IsControlPart="True" TargetType="{x:Type Thumb}" BasedOn="{x:Null}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Thumb}">
                    <ControlTemplate.Resources>
                        <Storyboard x:Key="HoverOff">
                            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="border" Storyboard.TargetProperty="(UIElement.Opacity)">
                                <SplineDoubleKeyFrame KeyTime="00:00:00.3000000" Value="0" />
                            </DoubleAnimationUsingKeyFrames>
                        </Storyboard>
                        <Storyboard x:Key="HoverOn">
                            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="border" Storyboard.TargetProperty="(UIElement.Opacity)">
                                <SplineDoubleKeyFrame KeyTime="00:00:00.1000000" Value="1" />
                            </DoubleAnimationUsingKeyFrames>
                        </Storyboard>
                    </ControlTemplate.Resources>
                    <Grid Margin="0,0,0,0" x:Name="Grid">
                        <Border Background="#FF000000" CornerRadius="7,7,7,7" x:Name="Shadow" Effect="{StaticResource EffectBlur}"/>
                        <Border x:Name="Base" CornerRadius="8,8,8,8">
                            <Border.Background>
                                <SolidColorBrush Color="{StaticResource BlackColor}" />
                            </Border.Background>
                        </Border>

                        <Border BorderThickness="2,2,2,2" CornerRadius="7,7,7,7" x:Name="MainBorder" BorderBrush="#66FFFFFF">
                            <Border.Background>
                                <SolidColorBrush Color="{StaticResource ControlColor}" />
                            </Border.Background>
                            <Grid Width="Auto" Height="10" VerticalAlignment="Center">
                                <Rectangle HorizontalAlignment="Stretch" VerticalAlignment="Top" Fill="#FFFFFFFF" Margin="2,0,2,0" StrokeThickness="2">
                                    <Rectangle.Stroke>
                                        <SolidColorBrush Color="{StaticResource MainColor}" />
                                    </Rectangle.Stroke>
                                </Rectangle>
                                <Rectangle HorizontalAlignment="Stretch" VerticalAlignment="Bottom" Fill="#FFFFFFFF" Margin="2,0,2,0" StrokeThickness="2">
                                    <Rectangle.Stroke>
                                        <SolidColorBrush Color="{StaticResource MainColor}" />
                                    </Rectangle.Stroke>
                                </Rectangle>
                                <Rectangle HorizontalAlignment="Stretch" VerticalAlignment="Center" Fill="#FFFFFFFF" Margin="2,0,2,0" StrokeThickness="2">
                                    <Rectangle.Stroke>
                                        <SolidColorBrush Color="{StaticResource MainColor}" />
                                    </Rectangle.Stroke>
                                </Rectangle>
                            </Grid>
                        </Border>
                        <Border BorderThickness="2,2,2,2" CornerRadius="7,7,7,7" Opacity="0" RenderTransformOrigin="0.5,0.5" x:Name="border">
                            <Border.Background>
                                <SolidColorBrush Color="{StaticResource ControlColor}" />
                            </Border.Background>
                            <Border.BorderBrush>
                                <SolidColorBrush Color="{StaticResource MainColor}" />
                            </Border.BorderBrush>
                            <Border.RenderTransform>
                                <TransformGroup>
                                    <ScaleTransform ScaleX="1" ScaleY="1" />
                                    <SkewTransform AngleX="0" AngleY="0" />
                                    <RotateTransform Angle="0" />
                                    <TranslateTransform X="0" Y="0" />
                                </TransformGroup>
                            </Border.RenderTransform>
                            <Grid Width="Auto" Height="10" VerticalAlignment="Center">
                                <Rectangle HorizontalAlignment="Stretch" VerticalAlignment="Top" Fill="#FFFFFFFF" Margin="2,0,2,0" StrokeThickness="2">
                                    <Rectangle.Stroke>
                                        <SolidColorBrush Color="{StaticResource MainColor}" />
                                    </Rectangle.Stroke>
                                </Rectangle>
                                <Rectangle HorizontalAlignment="Stretch" VerticalAlignment="Bottom" Fill="#FFFFFFFF" Margin="2,0,2,0" StrokeThickness="2">
                                    <Rectangle.Stroke>
                                        <SolidColorBrush Color="{StaticResource MainColor}" />
                                    </Rectangle.Stroke>
                                </Rectangle>
                                <Rectangle HorizontalAlignment="Stretch" VerticalAlignment="Center" Fill="#FFFFFFFF" Margin="2,0,2,0" StrokeThickness="2">
                                    <Rectangle.Stroke>
                                        <SolidColorBrush Color="{StaticResource MainColor}" />
                                    </Rectangle.Stroke>
                                </Rectangle>
                            </Grid>
                        </Border>
                        <Border CornerRadius="8,8,8,8" Opacity="0.4" RenderTransformOrigin="0.5,0.5" x:Name="border1">
                            <Border.Background>
                                <LinearGradientBrush EndPoint="0.968,0.5" StartPoint="0.054,0.5">
                                    <GradientStop Color="#FF000000" Offset="0.996" />
                                    <GradientStop Color="#8DFFFFFF" Offset="0.005" />
                                </LinearGradientBrush>
                            </Border.Background>
                            <Border.RenderTransform>
                                <TransformGroup>
                                    <ScaleTransform ScaleX="1" ScaleY="1" />
                                    <SkewTransform AngleX="0" AngleY="0" />
                                    <RotateTransform Angle="0" />
                                    <TranslateTransform X="0" Y="0" />
                                </TransformGroup>
                            </Border.RenderTransform>
                        </Border>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsFocused" Value="True" />
                        <Trigger Property="IsMouseOver" Value="True">
                            <Trigger.ExitActions>
                                <BeginStoryboard x:Name="HoverOff_BeginStoryboard" Storyboard="{StaticResource HoverOff}" />
                            </Trigger.ExitActions>
                            <Trigger.EnterActions>
                                <BeginStoryboard Storyboard="{StaticResource HoverOn}" x:Name="HoverOn_BeginStoryboard" />
                            </Trigger.EnterActions>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False" />
                        <Trigger Property="IsDragging" Value="True" />
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="nuclearScrollRepeatButtonStyle" d:IsControlPart="True" TargetType="{x:Type RepeatButton}">
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="BorderBrush" Value="Transparent" />
        <Setter Property="IsTabStop" Value="false" />
        <Setter Property="Focusable" Value="false" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RepeatButton}">
                    <Grid>
                        <Rectangle Fill="{TemplateBinding Background}" Stroke="{TemplateBinding BorderBrush}" StrokeThickness="{TemplateBinding BorderThickness}" />
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ScrollBarPageButton" TargetType="{x:Type RepeatButton}">
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="OverridesDefaultStyle" Value="true"/>
        <Setter Property="IsTabStop" Value="false"/>
        <Setter Property="Focusable" Value="false"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RepeatButton}">
                    <Border Background="Transparent"/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="HorizontalScrollBarThumb" TargetType="{x:Type Thumb}">
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="OverridesDefaultStyle" Value="true"/>
        <Setter Property="IsTabStop" Value="false"/>
        <Setter Property="Focusable" Value="false"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Thumb}">
                    <Grid Background="Transparent">
                        <Border
                Height="8"
                Background="#FFF"
                BorderThickness="0.5,1"
                CornerRadius="3"/>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="VerticalScrollBarThumb" TargetType="{x:Type Thumb}">
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="OverridesDefaultStyle" Value="true"/>
        <Setter Property="IsTabStop" Value="false"/>
        <Setter Property="Focusable" Value="false"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Thumb}">
                    <Grid Background="Transparent">
                        <Border
                Width="8"
                Background="#FFF"
                BorderThickness="1,0.5"
                CornerRadius="3"/>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <ControlTemplate x:Key="VerticalScrollBar" TargetType="{x:Type ScrollBar}">
        <Grid Width="8">
            <Border
          Width="8"
          Background="#18000000"
          CornerRadius="3"/>
            <Track
          Name="PART_Track"
          IsDirectionReversed="true">
                <Track.DecreaseRepeatButton>
                    <RepeatButton Command="ScrollBar.PageUpCommand" Style="{StaticResource ScrollBarPageButton}"/>
                </Track.DecreaseRepeatButton>
                <Track.Thumb>
                    <Thumb x:Name="Thumb" Opacity="0.25" Style="{StaticResource VerticalScrollBarThumb}"/>
                </Track.Thumb>
                <Track.IncreaseRepeatButton>
                    <RepeatButton Command="ScrollBar.PageDownCommand" Style="{StaticResource ScrollBarPageButton}"/>
                </Track.IncreaseRepeatButton>
            </Track>
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Trigger.EnterActions>
                    <BeginStoryboard>
                        <Storyboard>
                            <DoubleAnimation
                  Duration="0:0:0.25"
                  Storyboard.TargetName="Thumb"
                  Storyboard.TargetProperty="Opacity"
                  To="1"/>
                        </Storyboard>
                    </BeginStoryboard>
                </Trigger.EnterActions>
                <Trigger.ExitActions>
                    <BeginStoryboard>
                        <Storyboard>
                            <DoubleAnimation Duration="0:0:0.25" Storyboard.TargetName="Thumb" Storyboard.TargetProperty="Opacity"/>
                        </Storyboard>
                    </BeginStoryboard>
                </Trigger.ExitActions>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <ControlTemplate x:Key="HorizontalScrollBar" TargetType="{x:Type ScrollBar}">
        <Grid Height="8">
            <Border
          Height="8"
          Background="#18000000"
          CornerRadius="3"/>
            <Track
          Name="PART_Track"
          IsDirectionReversed="false">
                <Track.DecreaseRepeatButton>
                    <RepeatButton Command="ScrollBar.PageUpCommand" Style="{StaticResource ScrollBarPageButton}"/>
                </Track.DecreaseRepeatButton>
                <Track.Thumb>
                    <Thumb x:Name="Thumb" Opacity="0.25" Style="{StaticResource HorizontalScrollBarThumb}"/>
                </Track.Thumb>
                <Track.IncreaseRepeatButton>
                    <RepeatButton Command="ScrollBar.PageDownCommand" Style="{StaticResource ScrollBarPageButton}"/>
                </Track.IncreaseRepeatButton>
            </Track>
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Trigger.EnterActions>
                    <BeginStoryboard>
                        <Storyboard>
                            <DoubleAnimation
                  Duration="0:0:0.25"
                  Storyboard.TargetName="Thumb"
                  Storyboard.TargetProperty="Opacity"
                  To="1"/>
                        </Storyboard>
                    </BeginStoryboard>
                </Trigger.EnterActions>
                <Trigger.ExitActions>
                    <BeginStoryboard>
                        <Storyboard>
                            <DoubleAnimation Duration="0:0:0.25" Storyboard.TargetName="Thumb" Storyboard.TargetProperty="Opacity"/>
                        </Storyboard>
                    </BeginStoryboard>
                </Trigger.ExitActions>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>
    
    <LinearGradientBrush x:Key="ListBackgroundBrush" EndPoint="0.5,1" StartPoint="0.5,0">
        <GradientStop Color="#FF111111" Offset="0" />
        <GradientStop Color="#FF373737" Offset="1" />
    </LinearGradientBrush>
    
    <Style x:Key="ExpanderHeaderFocusVisual">
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate>
                    <Border>
                        <Rectangle SnapsToDevicePixels="true" Margin="0" Stroke="Black" StrokeDashArray="1 2" StrokeThickness="1" />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <LinearGradientBrush x:Key="SmallOuterBorderBrush" EndPoint="0.125,0.5" StartPoint="0.847,0.5">
        <GradientStop Color="#FFFFFFFF" Offset="0" />
        <GradientStop Color="#00FFFFFF" Offset="0.745" />
    </LinearGradientBrush>
    <LinearGradientBrush x:Key="SmallInnerBorderBrush" EndPoint="-0.059,0.5" StartPoint="0.828,0.5">
        <GradientStop Color="#FFFFFFFF" Offset="0" />
        <GradientStop Color="#00FFFFFF" Offset="0.39" />
    </LinearGradientBrush>
    <RadialGradientBrush x:Key="SmallButtonTopWhite">
        <RadialGradientBrush.RelativeTransform>
            <TransformGroup>
                <ScaleTransform CenterX="0.5" CenterY="0.5" ScaleX="1.465" ScaleY="1.269" />
                <SkewTransform AngleX="0" AngleY="0" CenterX="0.5" CenterY="0.5" />
                <RotateTransform Angle="0" CenterX="0.5" CenterY="0.5" />
                <TranslateTransform X="-0.297" Y="-0.285" />
            </TransformGroup>
        </RadialGradientBrush.RelativeTransform>
        <GradientStop Color="#63FDFDFD" Offset="0" />
        <GradientStop Color="#00FFFFFF" Offset="0.789" />
    </RadialGradientBrush>

    <Style x:Key="ExpanderDownHeaderStyle" TargetType="{x:Type ToggleButton}">

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <ControlTemplate.Resources>
                        <Storyboard x:Key="HoverOn">
                            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="Hover" Storyboard.TargetProperty="(UIElement.Opacity)">
                                <SplineDoubleKeyFrame KeyTime="00:00:00.1000000" Value="1" />
                            </DoubleAnimationUsingKeyFrames>
                        </Storyboard>
                        <Storyboard x:Key="HoverOff">
                            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="Hover" Storyboard.TargetProperty="(UIElement.Opacity)">
                                <SplineDoubleKeyFrame KeyTime="00:00:00.3000000" Value="0" />
                            </DoubleAnimationUsingKeyFrames>
                        </Storyboard>
                        <Storyboard x:Key="PressedOn">
                            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="ButtonTopWhite" Storyboard.TargetProperty="(Panel.Background).(Brush.RelativeTransform).(TransformGroup.Children)[3].(TranslateTransform.X)">
                                <SplineDoubleKeyFrame KeyTime="00:00:00.1000000" Value="0.054" />
                            </DoubleAnimationUsingKeyFrames>
                            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="ButtonTopWhite" Storyboard.TargetProperty="(Panel.Background).(Brush.RelativeTransform).(TransformGroup.Children)[3].(TranslateTransform.Y)">
                                <SplineDoubleKeyFrame KeyTime="00:00:00.1000000" Value="0.192" />
                            </DoubleAnimationUsingKeyFrames>
                        </Storyboard>
                        <Storyboard x:Key="PresssedOff">
                            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="ButtonTopWhite" Storyboard.TargetProperty="(Panel.Background).(Brush.RelativeTransform).(TransformGroup.Children)[3].(TranslateTransform.X)">
                                <SplineDoubleKeyFrame KeyTime="00:00:00.1000000" Value="0" />
                            </DoubleAnimationUsingKeyFrames>
                            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="ButtonTopWhite" Storyboard.TargetProperty="(Panel.Background).(Brush.RelativeTransform).(TransformGroup.Children)[3].(TranslateTransform.Y)">
                                <SplineDoubleKeyFrame KeyTime="00:00:00.1000000" Value="0" />
                            </DoubleAnimationUsingKeyFrames>
                        </Storyboard>
                    </ControlTemplate.Resources>
                    <Border Background="{x:Null}" BorderBrush="{x:Null}" BorderThickness="1,1,1,1" CornerRadius="2,2,2,2">
                        <Grid SnapsToDevicePixels="False" Background="Transparent">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="19" />
                                <ColumnDefinition Width="*" />
                            </Grid.ColumnDefinitions>

                            <Border Grid.ColumnSpan="2" CornerRadius="7,7,7,7" Opacity="0.25" Margin="0,0,-2,-2" x:Name="Shadow" Effect="{StaticResource EffectBlur}">
                                <Border.Background>
                                    <SolidColorBrush Color="{StaticResource BlackColor}" />
                                </Border.Background>
                            </Border>

                            <Border Grid.ColumnSpan="2" CornerRadius="4,4,4,4" BorderThickness="1,1,1,1" RenderTransformOrigin="0.5,0.5">
                                <Border.RenderTransform>
                                    <TransformGroup>
                                        <ScaleTransform ScaleX="1" ScaleY="1" />
                                        <SkewTransform AngleX="0" AngleY="0" />
                                        <RotateTransform Angle="180" />
                                        <TranslateTransform X="0" Y="0" />
                                    </TransformGroup>
                                </Border.RenderTransform>
                                <Border.BorderBrush>
                                    <LinearGradientBrush EndPoint="1.475,0.5" StartPoint="0.02,0.5">
                                        <GradientStop Color="{StaticResource MainColor}" Offset="0" />
                                        <GradientStop Color="#00FFFFFF" Offset="0.556" />
                                    </LinearGradientBrush>
                                </Border.BorderBrush>
                                <Border.Background>
                                    <SolidColorBrush Color="{StaticResource ControlColor}" />
                                </Border.Background>
                                <Border BorderThickness="1,1,0,1" CornerRadius="3,3,3,3">
                                    <Border.BorderBrush>
                                        <LinearGradientBrush EndPoint="0.859,0.5" StartPoint="0.02,0.5">
                                            <GradientStop Color="{StaticResource MainColor}" Offset="0" />
                                            <GradientStop Color="#00FFFFFF" Offset="0.682" />
                                        </LinearGradientBrush>
                                    </Border.BorderBrush>
                                </Border>
                            </Border>

                            <Rectangle OpacityMask="#FF000000" HorizontalAlignment="Stretch" VerticalAlignment="Center" Width="Auto" Fill="#FFFFFFFF" StrokeThickness="1" Margin="5,8,5,0" x:Name="rectangle" Visibility="Collapsed">
                                <Rectangle.Stroke>
                                    <SolidColorBrush Color="{StaticResource MainColor}" />
                                </Rectangle.Stroke>
                            </Rectangle>
                            <Border HorizontalAlignment="Stretch" Width="Auto" Grid.Column="0" CornerRadius="8,8,8,8" BorderThickness="1,1,1,1" Margin="0,0,0,0" Opacity="0.75" BorderBrush="{StaticResource SmallOuterBorderBrush}" RenderTransformOrigin="0.5,0.5">
                                <Border.RenderTransform>
                                    <TransformGroup>
                                        <ScaleTransform ScaleX="1" ScaleY="1" />
                                        <SkewTransform AngleX="0" AngleY="0" />
                                        <RotateTransform Angle="180" />
                                        <TranslateTransform X="0" Y="0" />
                                    </TransformGroup>
                                </Border.RenderTransform>
                                <Grid Width="Auto" Height="Auto">
                                    <Border CornerRadius="6,6,6,6" BorderThickness="2,2,2,2" Margin="0,0,-0.3,0" Opacity="0">
                                        <Border.BorderBrush>
                                            <SolidColorBrush Color="{StaticResource MainColor}" />
                                        </Border.BorderBrush>
                                    </Border>
                                </Grid>
                            </Border>

                            <Rectangle OpacityMask="#FF000000" HorizontalAlignment="Stretch" VerticalAlignment="Center" Width="Auto" Fill="#FFFFFFFF" StrokeThickness="1" Margin="5,-4,5,0" x:Name="rectangle1">
                                <Rectangle.Stroke>
                                    <SolidColorBrush Color="{StaticResource MainColor}" />
                                </Rectangle.Stroke>
                            </Rectangle>
                            <Path HorizontalAlignment="Center" x:Name="Up_Arrow" VerticalAlignment="Center" Data="M 0 0 L 4 4 L 8 0 Z" Margin="0,4,0,0">
                                <Path.Fill>
                                    <SolidColorBrush Color="{StaticResource MainColor}" />
                                </Path.Fill>
                            </Path>
                            <Path Visibility="Collapsed" HorizontalAlignment="Center" x:Name="Down_Arrow" VerticalAlignment="Center" Fill="{StaticResource GlyphBrush}" Data="M 0 4 L 4 0 L 8 4 Z" />
                            <Border HorizontalAlignment="Stretch" Width="Auto" Grid.Column="0" CornerRadius="8,8,8,8" BorderThickness="1,1,1,1" Margin="0,0,0,0" Opacity="0.75" BorderBrush="{StaticResource SmallOuterBorderBrush}" RenderTransformOrigin="0.5,0.5" x:Name="ButtonShine">
                                <Border.RenderTransform>
                                    <TransformGroup>
                                        <ScaleTransform ScaleX="1" ScaleY="1" />
                                        <SkewTransform AngleX="0" AngleY="0" />
                                        <RotateTransform Angle="180" />
                                        <TranslateTransform X="0" Y="0" />
                                    </TransformGroup>
                                </Border.RenderTransform>
                                <Grid Width="Auto" Height="Auto">
                                    <Border CornerRadius="6,6,6,6" BorderThickness="2,2,2,2" Margin="-1,-1,-1,-1" Opacity="0" x:Name="Hover">
                                        <Border.BorderBrush>
                                            <SolidColorBrush Color="{StaticResource MainColor}" />
                                        </Border.BorderBrush>
                                    </Border>

                                </Grid>
                            </Border>
                            <Border CornerRadius="8,8,8,8" x:Name="ButtonTopWhite" Width="Auto" Height="Auto" Margin="0,0,2,2" RenderTransformOrigin="0.5,0.5">
                                <Border.RenderTransform>
                                    <TransformGroup>
                                        <ScaleTransform ScaleX="1" ScaleY="1" />
                                        <SkewTransform AngleX="0" AngleY="0" />
                                        <RotateTransform Angle="0" />
                                        <TranslateTransform X="0" Y="0" />
                                    </TransformGroup>
                                </Border.RenderTransform>

                                <Border.Background>
                                    <RadialGradientBrush>
                                        <RadialGradientBrush.RelativeTransform>
                                            <TransformGroup>
                                                <ScaleTransform CenterX="0.5" CenterY="0.5" ScaleX="1.465" ScaleY="1.269" />
                                                <SkewTransform AngleX="0" AngleY="0" CenterX="0.5" CenterY="0.5" />
                                                <RotateTransform Angle="0" CenterX="0.5" CenterY="0.5" />
                                                <TranslateTransform X="-0.297" Y="-0.285" />
                                            </TransformGroup>
                                        </RadialGradientBrush.RelativeTransform>
                                        <GradientStop Color="#63FDFDFD" Offset="0" />
                                        <GradientStop Color="#00FFFFFF" Offset="0.789" />
                                    </RadialGradientBrush>
                                </Border.Background>
                            </Border>

                            <ContentPresenter SnapsToDevicePixels="True" HorizontalAlignment="Left" Margin="4,4,0,4" VerticalAlignment="Center" Grid.Column="1" RecognizesAccessKey="True" />
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked" Value="true">
                            <Setter Property="Visibility" TargetName="Down_Arrow" Value="Visible" />
                            <Setter Property="Visibility" TargetName="Up_Arrow" Value="Collapsed" />
                            <Setter Property="Visibility" TargetName="rectangle1" Value="Collapsed" />
                            <Setter Property="Visibility" TargetName="rectangle" Value="Visible" />

                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Trigger.ExitActions>
                                <BeginStoryboard Storyboard="{StaticResource HoverOff}" x:Name="HoverOff_BeginStoryboard" />
                            </Trigger.ExitActions>
                            <Trigger.EnterActions>
                                <BeginStoryboard Storyboard="{StaticResource HoverOn}" />
                            </Trigger.EnterActions>

                        </Trigger>
                        <Trigger Property="IsPressed" Value="true">
                            <Trigger.ExitActions>
                                <BeginStoryboard Storyboard="{StaticResource PresssedOff}" x:Name="PresssedOff_BeginStoryboard" />
                            </Trigger.ExitActions>
                            <Trigger.EnterActions>
                                <BeginStoryboard Storyboard="{StaticResource PressedOn}" x:Name="PressedOn_BeginStoryboard" />
                            </Trigger.EnterActions>

                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="Foreground" Value="#FFFFFFFF"/>

    </Style>

    <Style x:Key="ExpanderRightHeaderStyle" TargetType="{x:Type ToggleButton}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <ControlTemplate.Resources>
                        <Storyboard x:Key="HoverOn">
                            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="Hover" Storyboard.TargetProperty="(UIElement.Opacity)">
                                <SplineDoubleKeyFrame KeyTime="00:00:00.1000000" Value="1" />
                            </DoubleAnimationUsingKeyFrames>
                        </Storyboard>
                        <Storyboard x:Key="HoverOff">
                            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="Hover" Storyboard.TargetProperty="(UIElement.Opacity)">
                                <SplineDoubleKeyFrame KeyTime="00:00:00.3000000" Value="0" />
                            </DoubleAnimationUsingKeyFrames>
                        </Storyboard>
                        <Storyboard x:Key="PressedOn">
                            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="ButtonTopWhite" Storyboard.TargetProperty="(Panel.Background).(Brush.RelativeTransform).(TransformGroup.Children)[3].(TranslateTransform.X)">
                                <SplineDoubleKeyFrame KeyTime="00:00:00.1000000" Value="0.054" />
                            </DoubleAnimationUsingKeyFrames>
                            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="ButtonTopWhite" Storyboard.TargetProperty="(Panel.Background).(Brush.RelativeTransform).(TransformGroup.Children)[3].(TranslateTransform.Y)">
                                <SplineDoubleKeyFrame KeyTime="00:00:00.1000000" Value="0.192" />
                            </DoubleAnimationUsingKeyFrames>
                        </Storyboard>
                        <Storyboard x:Key="PresssedOff">
                            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="ButtonTopWhite" Storyboard.TargetProperty="(Panel.Background).(Brush.RelativeTransform).(TransformGroup.Children)[3].(TranslateTransform.X)">
                                <SplineDoubleKeyFrame KeyTime="00:00:00.1000000" Value="0" />
                            </DoubleAnimationUsingKeyFrames>
                            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="ButtonTopWhite" Storyboard.TargetProperty="(Panel.Background).(Brush.RelativeTransform).(TransformGroup.Children)[3].(TranslateTransform.Y)">
                                <SplineDoubleKeyFrame KeyTime="00:00:00.1000000" Value="0" />
                            </DoubleAnimationUsingKeyFrames>
                        </Storyboard>
                    </ControlTemplate.Resources>
                    <Border Background="{x:Null}" BorderBrush="{x:Null}" BorderThickness="1,1,1,1" CornerRadius="2,2,2,2">
                        <Grid SnapsToDevicePixels="False" Background="Transparent">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition />
                                <ColumnDefinition Width="19" />
                            </Grid.ColumnDefinitions>
                            <Grid.LayoutTransform>
                                <TransformGroup>
                                    <ScaleTransform ScaleX="1" ScaleY="1" />
                                    <SkewTransform AngleX="0" AngleY="0" />
                                    <RotateTransform Angle="-90" />
                                    <TranslateTransform X="0" Y="0" />
                                </TransformGroup>
                            </Grid.LayoutTransform>
                            <Border CornerRadius="7,7,7,7" Opacity="0.25" x:Name="Shadow" Effect="{StaticResource EffectBlur}">
                                <Border.Background>
                                    <SolidColorBrush Color="{StaticResource BlackColor}" />
                                </Border.Background>
                            </Border>
                            <Border CornerRadius="4,8,8,4" BorderThickness="1,1,1,1" RenderTransformOrigin="0.5,0.5" VerticalAlignment="Stretch" Grid.ColumnSpan="2" x:Name="LeftBorder">
                                <Border.RenderTransform>
                                    <TransformGroup>
                                        <ScaleTransform ScaleX="1" ScaleY="1" />
                                        <SkewTransform AngleX="0" AngleY="0" />
                                        <RotateTransform />
                                        <TranslateTransform X="0" Y="0" />
                                    </TransformGroup>
                                </Border.RenderTransform>
                                <Border.BorderBrush>
                                    <LinearGradientBrush EndPoint="1.475,0.5" StartPoint="0.02,0.5">
                                        <GradientStop Color="{StaticResource MainColor}" Offset="0" />
                                        <GradientStop Color="#00FFFFFF" Offset="0.556" />
                                    </LinearGradientBrush>
                                </Border.BorderBrush>
                                <Border.Background>
                                    <SolidColorBrush Color="{StaticResource ControlColor}" />
                                </Border.Background>
                                <Border BorderThickness="1,1,0,1" CornerRadius="3,3,3,3">
                                    <Border.BorderBrush>
                                        <LinearGradientBrush EndPoint="0.859,0.5" StartPoint="0.02,0.5">
                                            <GradientStop Color="{StaticResource MainColor}" Offset="0" />
                                            <GradientStop Color="#00FFFFFF" Offset="0.682" />
                                        </LinearGradientBrush>
                                    </Border.BorderBrush>
                                </Border>
                            </Border>
                            <Rectangle OpacityMask="#FF000000" HorizontalAlignment="Stretch" VerticalAlignment="Center" Width="Auto" Fill="#FFFFFFFF" StrokeThickness="1" x:Name="DownLine" Grid.Column="1" Margin="5,-3,5,0">
                                <Rectangle.Stroke>
                                    <SolidColorBrush Color="{StaticResource MainColor}" />
                                </Rectangle.Stroke>
                            </Rectangle>
                            <Border HorizontalAlignment="Stretch" Width="Auto" CornerRadius="8,8,8,8" BorderThickness="1,1,1,1" Opacity="0.75" BorderBrush="{StaticResource SmallOuterBorderBrush}" RenderTransformOrigin="0.5,0.5" Grid.RowSpan="2" Grid.Column="1" Margin="0,1,0,1" x:Name="ToggleButtonBorder">
                                <Border.RenderTransform>
                                    <TransformGroup>
                                        <ScaleTransform ScaleX="1" ScaleY="1" />
                                        <SkewTransform AngleX="0" AngleY="0" />
                                        <RotateTransform />
                                        <TranslateTransform X="0" Y="0" />
                                    </TransformGroup>
                                </Border.RenderTransform>
                                <Grid Width="Auto" Height="Auto">
                                    <Border CornerRadius="6,6,6,6" BorderThickness="2,2,2,2" Opacity="0" Margin="0,1,0,1">
                                        <Border.BorderBrush>
                                            <SolidColorBrush Color="{StaticResource MainColor}" />
                                        </Border.BorderBrush>
                                    </Border>
                                </Grid>
                            </Border>
                            <Rectangle OpacityMask="#FF000000" HorizontalAlignment="Stretch" VerticalAlignment="Center" Width="Auto" Fill="#FFFFFFFF" StrokeThickness="1" Grid.Column="1" x:Name="UpLine" Margin="5,3,5,0" Visibility="Hidden">
                                <Rectangle.Stroke>
                                    <SolidColorBrush Color="{StaticResource MainColor}" />
                                </Rectangle.Stroke>
                            </Rectangle>
                            <Path HorizontalAlignment="Center" x:Name="Up_Arrow" VerticalAlignment="Center" Data="M 0 0 L 4 4 L 8 0 Z" Margin="0,3,0,0" Grid.Column="1">
                                <Path.Fill>
                                    <SolidColorBrush Color="{StaticResource MainColor}" />
                                </Path.Fill>
                            </Path>
                            <Path Visibility="Collapsed" HorizontalAlignment="Center" x:Name="Down_Arrow" VerticalAlignment="Center" Fill="{StaticResource GlyphBrush}" Data="M 0 4 L 4 0 L 8 4 Z" Grid.Column="1" Margin="0,0,0,3" />
                            <Border HorizontalAlignment="Stretch" Width="Auto" CornerRadius="8,8,8,8" BorderThickness="1,1,1,1" Opacity="0.75" BorderBrush="{StaticResource SmallOuterBorderBrush}" RenderTransformOrigin="0.5,0.5" x:Name="ButtonShine" Grid.RowSpan="1" Grid.Row="0" Grid.Column="1" Margin="1,1,0,1">
                                <Border.RenderTransform>
                                    <TransformGroup>
                                        <ScaleTransform ScaleX="1" ScaleY="1" />
                                        <SkewTransform AngleX="0" AngleY="0" />
                                        <RotateTransform />
                                        <TranslateTransform X="0" Y="0" />
                                    </TransformGroup>
                                </Border.RenderTransform>
                                <Grid Width="Auto" Height="Auto">
                                    <Border CornerRadius="8,8,8,8" BorderThickness="2,2,2,2" Margin="-2,-1,-2,-1" x:Name="Hover" Opacity="0">
                                        <Border.BorderBrush>
                                            <SolidColorBrush Color="{StaticResource MainColor}" />
                                        </Border.BorderBrush>
                                    </Border>

                                </Grid>
                            </Border>
                            <Border CornerRadius="8,8,8,8" x:Name="ButtonTopWhite" Width="Auto" Height="Auto" Margin="1,2,0,2" RenderTransformOrigin="0.5,0.5" Grid.RowSpan="2" Grid.Column="1">
                                <Border.RenderTransform>
                                    <TransformGroup>
                                        <ScaleTransform ScaleX="1" ScaleY="1" />
                                        <SkewTransform AngleX="0" AngleY="0" />
                                        <RotateTransform Angle="0" />
                                        <TranslateTransform X="0" Y="0" />
                                    </TransformGroup>
                                </Border.RenderTransform>

                                <Border.Background>
                                    <RadialGradientBrush>
                                        <RadialGradientBrush.RelativeTransform>
                                            <TransformGroup>
                                                <ScaleTransform CenterX="0.5" CenterY="0.5" ScaleX="1.465" ScaleY="1.269" />
                                                <SkewTransform AngleX="0" AngleY="0" CenterX="0.5" CenterY="0.5" />
                                                <RotateTransform Angle="0" CenterX="0.5" CenterY="0.5" />
                                                <TranslateTransform X="-0.297" Y="-0.285" />
                                            </TransformGroup>
                                        </RadialGradientBrush.RelativeTransform>
                                        <GradientStop Color="#63FDFDFD" Offset="0" />
                                        <GradientStop Color="#00FFFFFF" Offset="0.789" />
                                    </RadialGradientBrush>
                                </Border.Background>
                            </Border>
                            <ContentPresenter SnapsToDevicePixels="True" HorizontalAlignment="Left" VerticalAlignment="Center" RecognizesAccessKey="True" d:LayoutOverrides="Width, Height, GridBox" Margin="10,4,0,4" />
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked" Value="true">
                            <Setter Property="Visibility" TargetName="Down_Arrow" Value="Visible" />
                            <Setter Property="Visibility" TargetName="Up_Arrow" Value="Collapsed" />
                            <Setter Property="Visibility" TargetName="DownLine" Value="Collapsed" />
                            <Setter Property="Visibility" TargetName="UpLine" Value="Visible" />

                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Trigger.ExitActions>
                                <BeginStoryboard Storyboard="{StaticResource HoverOff}" x:Name="HoverOff_BeginStoryboard" />
                            </Trigger.ExitActions>
                            <Trigger.EnterActions>
                                <BeginStoryboard Storyboard="{StaticResource HoverOn}" />
                            </Trigger.EnterActions>

                        </Trigger>
                        <Trigger Property="IsPressed" Value="true">
                            <Trigger.ExitActions>
                                <BeginStoryboard Storyboard="{StaticResource PresssedOff}" x:Name="PresssedOff_BeginStoryboard" />
                            </Trigger.ExitActions>
                            <Trigger.EnterActions>
                                <BeginStoryboard Storyboard="{StaticResource PressedOn}" x:Name="PressedOn_BeginStoryboard" />
                            </Trigger.EnterActions>

                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="Foreground">
            <Setter.Value>
                <SolidColorBrush Color="{StaticResource WhiteColor}" />
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="ExpanderUpHeaderStyle" TargetType="{x:Type ToggleButton}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <ControlTemplate.Resources>
                        <Storyboard x:Key="HoverOn">
                            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="Hover" Storyboard.TargetProperty="(UIElement.Opacity)">
                                <SplineDoubleKeyFrame KeyTime="00:00:00.1000000" Value="1" />
                            </DoubleAnimationUsingKeyFrames>
                        </Storyboard>
                        <Storyboard x:Key="HoverOff">
                            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="Hover" Storyboard.TargetProperty="(UIElement.Opacity)">
                                <SplineDoubleKeyFrame KeyTime="00:00:00.3000000" Value="0" />
                            </DoubleAnimationUsingKeyFrames>
                        </Storyboard>
                        <Storyboard x:Key="PressedOn">
                            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="ButtonTopWhite" Storyboard.TargetProperty="(Panel.Background).(Brush.RelativeTransform).(TransformGroup.Children)[3].(TranslateTransform.X)">
                                <SplineDoubleKeyFrame KeyTime="00:00:00.1000000" Value="0.054" />
                            </DoubleAnimationUsingKeyFrames>
                            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="ButtonTopWhite" Storyboard.TargetProperty="(Panel.Background).(Brush.RelativeTransform).(TransformGroup.Children)[3].(TranslateTransform.Y)">
                                <SplineDoubleKeyFrame KeyTime="00:00:00.1000000" Value="0.192" />
                            </DoubleAnimationUsingKeyFrames>
                        </Storyboard>
                        <Storyboard x:Key="PresssedOff">
                            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="ButtonTopWhite" Storyboard.TargetProperty="(Panel.Background).(Brush.RelativeTransform).(TransformGroup.Children)[3].(TranslateTransform.X)">
                                <SplineDoubleKeyFrame KeyTime="00:00:00.1000000" Value="0" />
                            </DoubleAnimationUsingKeyFrames>
                            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="ButtonTopWhite" Storyboard.TargetProperty="(Panel.Background).(Brush.RelativeTransform).(TransformGroup.Children)[3].(TranslateTransform.Y)">
                                <SplineDoubleKeyFrame KeyTime="00:00:00.1000000" Value="0" />
                            </DoubleAnimationUsingKeyFrames>
                        </Storyboard>
                    </ControlTemplate.Resources>
                    <Border Background="{x:Null}" BorderBrush="{x:Null}" BorderThickness="1,1,1,1" CornerRadius="2,2,2,2">
                        <Grid SnapsToDevicePixels="False" Background="Transparent">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="19" />
                                <ColumnDefinition Width="*" />
                            </Grid.ColumnDefinitions>
                            <Border CornerRadius="7,7,7,7" Opacity="0.25" Margin="0,0,-2,-2" x:Name="Shadow" Effect="{StaticResource EffectBlur}" d:LayoutOverrides="GridBox">
                                <Border.Background>
                                    <SolidColorBrush Color="{StaticResource BlackColor}" />
                                </Border.Background>
                            </Border>
                            <Border CornerRadius="4,8,8,4" BorderThickness="1,1,1,1" RenderTransformOrigin="0.5,0.5" d:LayoutOverrides="GridBox" Grid.Column="0" Grid.ColumnSpan="2">
                                <Border.RenderTransform>
                                    <TransformGroup>
                                        <ScaleTransform ScaleX="1" ScaleY="1" />
                                        <SkewTransform AngleX="0" AngleY="0" />
                                        <RotateTransform Angle="180" />
                                        <TranslateTransform X="0" Y="0" />
                                    </TransformGroup>
                                </Border.RenderTransform>
                                <Border.BorderBrush>
                                    <LinearGradientBrush EndPoint="1.475,0.5" StartPoint="0.02,0.5">
                                        <GradientStop Color="{StaticResource MainColor}" Offset="0" />
                                        <GradientStop Color="#00FFFFFF" Offset="0.556" />
                                    </LinearGradientBrush>
                                </Border.BorderBrush>
                                <Border.Background>
                                    <SolidColorBrush Color="{StaticResource ControlColor}" />
                                </Border.Background>
                                <Border BorderThickness="1,1,0,1" CornerRadius="3,3,3,3">
                                    <Border.BorderBrush>
                                        <LinearGradientBrush EndPoint="0.859,0.5" StartPoint="0.02,0.5">
                                            <GradientStop Color="{StaticResource MainColor}" Offset="0" />
                                            <GradientStop Color="#00FFFFFF" Offset="0.682" />
                                        </LinearGradientBrush>
                                    </Border.BorderBrush>
                                </Border>
                            </Border>
                            <Rectangle OpacityMask="#FF000000" HorizontalAlignment="Center" VerticalAlignment="Center" Width="9" Fill="#FFFFFFFF" StrokeThickness="1" Margin="0,2,0,0" x:Name="UnPressedLine" Visibility="Visible">
                                <Rectangle.Stroke>
                                    <SolidColorBrush Color="{StaticResource MainColor}" />
                                </Rectangle.Stroke>
                            </Rectangle>
                            <Border HorizontalAlignment="Stretch" Width="Auto" CornerRadius="8,8,8,8" BorderThickness="1,1,1,1" Margin="0,1,0,1" Opacity="0.75" BorderBrush="{StaticResource SmallOuterBorderBrush}" RenderTransformOrigin="0.5,0.5">
                                <Border.RenderTransform>
                                    <TransformGroup>
                                        <ScaleTransform ScaleX="1" ScaleY="1" />
                                        <SkewTransform AngleX="0" AngleY="0" />
                                        <RotateTransform Angle="180" />
                                        <TranslateTransform X="0" Y="0" />
                                    </TransformGroup>
                                </Border.RenderTransform>
                                <Grid Width="Auto" Height="Auto">
                                    <Border CornerRadius="6,6,6,6" BorderThickness="2,2,2,2" Margin="0,0,-0.3,0" Opacity="0">
                                        <Border.BorderBrush>
                                            <SolidColorBrush Color="{StaticResource MainColor}" />
                                        </Border.BorderBrush>
                                    </Border>
                                </Grid>
                            </Border>
                            <Rectangle OpacityMask="#FF000000" HorizontalAlignment="Center" VerticalAlignment="Center" Width="9" Fill="#FFFFFFFF" StrokeThickness="1" Margin="0,2,0,4" x:Name="PressedLine" Visibility="Collapsed">
                                <Rectangle.Stroke>
                                    <SolidColorBrush Color="{StaticResource MainColor}" />
                                </Rectangle.Stroke>
                            </Rectangle>
                            <Path HorizontalAlignment="Center" x:Name="Up_Arrow" VerticalAlignment="Center" Data="M 0 0 L 4 4 L 8 0 Z" Margin="0,6,0,0" Visibility="Collapsed">
                                <Path.Fill>
                                    <SolidColorBrush Color="{StaticResource MainColor}" />
                                </Path.Fill>
                            </Path>
                            <Path Visibility="Visible" HorizontalAlignment="Center" x:Name="Down_Arrow" VerticalAlignment="Center" Fill="{StaticResource GlyphBrush}" Data="M 0 4 L 4 0 L 8 4 Z" Margin="0,0,0,6" />
                            <Border HorizontalAlignment="Stretch" Width="Auto" CornerRadius="8,8,8,8" BorderThickness="1,1,1,1" Margin="0,1,0,1" Opacity="0.75" BorderBrush="{StaticResource SmallOuterBorderBrush}" RenderTransformOrigin="0.5,0.5" x:Name="ButtonShine">
                                <Border.RenderTransform>
                                    <TransformGroup>
                                        <ScaleTransform ScaleX="1" ScaleY="1" />
                                        <SkewTransform AngleX="0" AngleY="0" />
                                        <RotateTransform Angle="180" />
                                        <TranslateTransform X="0" Y="0" />
                                    </TransformGroup>
                                </Border.RenderTransform>
                                <Grid Width="Auto" Height="Auto">
                                    <Border CornerRadius="6,6,6,6" BorderThickness="2,2,2,2" Margin="-1,-1,-1,-1" Opacity="0" x:Name="Hover">
                                        <Border.BorderBrush>
                                            <SolidColorBrush Color="{StaticResource MainColor}" />
                                        </Border.BorderBrush>
                                    </Border>

                                </Grid>
                            </Border>
                            <Border CornerRadius="8,8,8,8" x:Name="ButtonTopWhite" Width="Auto" Height="Auto" Margin="0,0,2,2" RenderTransformOrigin="0.5,0.5">
                                <Border.RenderTransform>
                                    <TransformGroup>
                                        <ScaleTransform ScaleX="1" ScaleY="1" />
                                        <SkewTransform AngleX="0" AngleY="0" />
                                        <RotateTransform Angle="0" />
                                        <TranslateTransform X="0" Y="0" />
                                    </TransformGroup>
                                </Border.RenderTransform>

                                <Border.Background>
                                    <RadialGradientBrush>
                                        <RadialGradientBrush.RelativeTransform>
                                            <TransformGroup>
                                                <ScaleTransform CenterX="0.5" CenterY="0.5" ScaleX="1.465" ScaleY="1.269" />
                                                <SkewTransform AngleX="0" AngleY="0" CenterX="0.5" CenterY="0.5" />
                                                <RotateTransform Angle="0" CenterX="0.5" CenterY="0.5" />
                                                <TranslateTransform X="-0.297" Y="-0.285" />
                                            </TransformGroup>
                                        </RadialGradientBrush.RelativeTransform>
                                        <GradientStop Color="#63FDFDFD" Offset="0" />
                                        <GradientStop Color="#00FFFFFF" Offset="0.789" />
                                    </RadialGradientBrush>
                                </Border.Background>
                            </Border>
                            <ContentPresenter SnapsToDevicePixels="True" HorizontalAlignment="Stretch" Margin="10,4,4,4" VerticalAlignment="Center" RecognizesAccessKey="True" d:LayoutOverrides="Width, GridBox" Grid.Column="1" />
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked" Value="true">
                            <Setter Property="Visibility" TargetName="Down_Arrow" Value="Collapsed" />
                            <Setter Property="Visibility" TargetName="Up_Arrow" Value="Visible" />
                            <Setter Property="Visibility" TargetName="PressedLine" Value="Visible" />
                            <Setter Property="Visibility" TargetName="UnPressedLine" Value="Collapsed" />
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Trigger.ExitActions>
                                <BeginStoryboard Storyboard="{StaticResource HoverOff}" x:Name="HoverOff_BeginStoryboard" />
                            </Trigger.ExitActions>
                            <Trigger.EnterActions>
                                <BeginStoryboard Storyboard="{StaticResource HoverOn}" />
                            </Trigger.EnterActions>

                        </Trigger>
                        <Trigger Property="IsPressed" Value="true">
                            <Trigger.ExitActions>
                                <BeginStoryboard Storyboard="{StaticResource PresssedOff}" x:Name="PresssedOff_BeginStoryboard" />
                            </Trigger.ExitActions>
                            <Trigger.EnterActions>
                                <BeginStoryboard Storyboard="{StaticResource PressedOn}" x:Name="PressedOn_BeginStoryboard" />
                            </Trigger.EnterActions>

                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="Foreground">
            <Setter.Value>
                <SolidColorBrush Color="{StaticResource WhiteColor}" />
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="ExpanderLeftHeaderStyle" TargetType="{x:Type ToggleButton}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <ControlTemplate.Resources>
                        <Storyboard x:Key="HoverOn">
                            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="Hover" Storyboard.TargetProperty="(UIElement.Opacity)">
                                <SplineDoubleKeyFrame KeyTime="00:00:00.1000000" Value="1" />
                            </DoubleAnimationUsingKeyFrames>
                        </Storyboard>
                        <Storyboard x:Key="HoverOff">
                            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="Hover" Storyboard.TargetProperty="(UIElement.Opacity)">
                                <SplineDoubleKeyFrame KeyTime="00:00:00.3000000" Value="0" />
                            </DoubleAnimationUsingKeyFrames>
                        </Storyboard>
                        <Storyboard x:Key="PressedOn">
                            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="ButtonTopWhite" Storyboard.TargetProperty="(Panel.Background).(Brush.RelativeTransform).(TransformGroup.Children)[3].(TranslateTransform.X)">
                                <SplineDoubleKeyFrame KeyTime="00:00:00.1000000" Value="0.054" />
                            </DoubleAnimationUsingKeyFrames>
                            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="ButtonTopWhite" Storyboard.TargetProperty="(Panel.Background).(Brush.RelativeTransform).(TransformGroup.Children)[3].(TranslateTransform.Y)">
                                <SplineDoubleKeyFrame KeyTime="00:00:00.1000000" Value="0.192" />
                            </DoubleAnimationUsingKeyFrames>
                        </Storyboard>
                        <Storyboard x:Key="PresssedOff">
                            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="ButtonTopWhite" Storyboard.TargetProperty="(Panel.Background).(Brush.RelativeTransform).(TransformGroup.Children)[3].(TranslateTransform.X)">
                                <SplineDoubleKeyFrame KeyTime="00:00:00.1000000" Value="0" />
                            </DoubleAnimationUsingKeyFrames>
                            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="ButtonTopWhite" Storyboard.TargetProperty="(Panel.Background).(Brush.RelativeTransform).(TransformGroup.Children)[3].(TranslateTransform.Y)">
                                <SplineDoubleKeyFrame KeyTime="00:00:00.1000000" Value="0" />
                            </DoubleAnimationUsingKeyFrames>
                        </Storyboard>
                    </ControlTemplate.Resources>
                    <Border Background="{x:Null}" BorderBrush="{x:Null}" BorderThickness="1,1,1,1" CornerRadius="2,2,2,2">
                        <Grid SnapsToDevicePixels="False" Background="Transparent">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*" />
                                <ColumnDefinition Width="19" />
                            </Grid.ColumnDefinitions>
                            <Grid.LayoutTransform>
                                <TransformGroup>
                                    <ScaleTransform ScaleX="1" ScaleY="1" />
                                    <SkewTransform AngleX="0" AngleY="0" />
                                    <RotateTransform Angle="-90" />
                                    <TranslateTransform X="0" Y="0" />
                                </TransformGroup>
                            </Grid.LayoutTransform>
                            <Border CornerRadius="7,7,7,7" Opacity="0.25" x:Name="Shadow" Effect="{StaticResource EffectBlur}" HorizontalAlignment="Left" Width="19">
                                <Border.Background>
                                    <SolidColorBrush Color="{StaticResource BlackColor}" />
                                </Border.Background>
                            </Border>
                            <Border CornerRadius="4,8,8,4" BorderThickness="1,1,1,1" RenderTransformOrigin="0.5,0.5" VerticalAlignment="Stretch" x:Name="LeftBorder" HorizontalAlignment="Stretch" Width="Auto" Grid.ColumnSpan="2">
                                <Border.RenderTransform>
                                    <TransformGroup>
                                        <ScaleTransform ScaleX="1" ScaleY="1" />
                                        <SkewTransform AngleX="0" AngleY="0" />
                                        <RotateTransform />
                                        <TranslateTransform X="0" Y="0" />
                                    </TransformGroup>
                                </Border.RenderTransform>
                                <Border.BorderBrush>
                                    <LinearGradientBrush EndPoint="1.475,0.5" StartPoint="0.02,0.5">
                                        <GradientStop Color="{StaticResource MainColor}" Offset="0" />
                                        <GradientStop Color="#00FFFFFF" Offset="0.556" />
                                    </LinearGradientBrush>
                                </Border.BorderBrush>
                                <Border.Background>
                                    <SolidColorBrush Color="{StaticResource ControlColor}" />
                                </Border.Background>
                                <Border BorderThickness="1,1,0,1" CornerRadius="3,3,3,3">
                                    <Border.BorderBrush>
                                        <LinearGradientBrush EndPoint="0.859,0.5" StartPoint="0.02,0.5">
                                            <GradientStop Color="{StaticResource MainColor}" Offset="0" />
                                            <GradientStop Color="#00FFFFFF" Offset="0.682" />
                                        </LinearGradientBrush>
                                    </Border.BorderBrush>
                                </Border>
                            </Border>
                            <Rectangle OpacityMask="#FF000000" HorizontalAlignment="Center" VerticalAlignment="Center" Width="9" Fill="#FFFFFFFF" StrokeThickness="1" x:Name="PressedLine" Margin="0,0,0,2" d:LayoutOverrides="GridBox" Grid.Column="1" Visibility="Collapsed">
                                <Rectangle.Stroke>
                                    <SolidColorBrush Color="{StaticResource MainColor}" />
                                </Rectangle.Stroke>
                            </Rectangle>
                            <Border HorizontalAlignment="Right" Width="19" CornerRadius="8,8,8,8" BorderThickness="1,1,1,1" Opacity="0.75" BorderBrush="{StaticResource SmallOuterBorderBrush}" RenderTransformOrigin="0.5,0.5" x:Name="ToggleButtonBorder" Grid.Column="1">
                                <Border.RenderTransform>
                                    <TransformGroup>
                                        <ScaleTransform ScaleX="1" ScaleY="1" />
                                        <SkewTransform AngleX="0" AngleY="0" />
                                        <RotateTransform />
                                        <TranslateTransform X="0" Y="0" />
                                    </TransformGroup>
                                </Border.RenderTransform>
                                <Grid Width="Auto" Height="Auto">
                                    <Border CornerRadius="6,6,6,6" BorderThickness="2,2,2,2" Opacity="0" Margin="0,1,0,1">
                                        <Border.BorderBrush>
                                            <SolidColorBrush Color="{StaticResource MainColor}" />
                                        </Border.BorderBrush>
                                    </Border>
                                </Grid>
                            </Border>
                            <Rectangle OpacityMask="#FF000000" HorizontalAlignment="Center" VerticalAlignment="Center" Width="9" Fill="#FFFFFFFF" StrokeThickness="1" x:Name="UnPressedLine" Margin="5,2,5,0" Visibility="Visible" d:LayoutOverrides="GridBox" Grid.Column="1">
                                <Rectangle.Stroke>
                                    <SolidColorBrush Color="{StaticResource MainColor}" />
                                </Rectangle.Stroke>
                            </Rectangle>
                            <Path HorizontalAlignment="Center" x:Name="Up_Arrow" VerticalAlignment="Center" Data="M 0 0 L 4 4 L 8 0 Z" Margin="0,6,0,0" d:LayoutOverrides="GridBox" Grid.Column="1" Visibility="Collapsed">
                                <Path.Fill>
                                    <SolidColorBrush Color="{StaticResource MainColor}" />
                                </Path.Fill>
                            </Path>
                            <Path Visibility="Visible" HorizontalAlignment="Center" x:Name="Down_Arrow" VerticalAlignment="Center" Fill="{StaticResource GlyphBrush}" Data="M 0 4 L 4 0 L 8 4 Z" Margin="0,0,0,6" d:LayoutOverrides="GridBox" Grid.Column="1" />
                            <Border HorizontalAlignment="Right" Width="18" CornerRadius="8,8,8,8" BorderThickness="1,1,1,1" Opacity="0.75" BorderBrush="{StaticResource SmallOuterBorderBrush}" RenderTransformOrigin="0.5,0.5" x:Name="ButtonShine" Grid.RowSpan="1" Grid.Column="1">
                                <Border.RenderTransform>
                                    <TransformGroup>
                                        <ScaleTransform ScaleX="1" ScaleY="1" />
                                        <SkewTransform AngleX="0" AngleY="0" />
                                        <RotateTransform />
                                        <TranslateTransform X="0" Y="0" />
                                    </TransformGroup>
                                </Border.RenderTransform>
                                <Grid Width="Auto" Height="Auto">
                                    <Border CornerRadius="8,8,8,8" BorderThickness="2,2,2,2" Margin="-2,-1,-2,-1" x:Name="Hover" Opacity="0">
                                        <Border.BorderBrush>
                                            <SolidColorBrush Color="{StaticResource MainColor}" />
                                        </Border.BorderBrush>
                                    </Border>

                                </Grid>
                            </Border>
                            <Border CornerRadius="8,8,8,8" x:Name="ButtonTopWhite" Width="18" Height="Auto" RenderTransformOrigin="0.5,0.5" HorizontalAlignment="Left" Grid.Column="1">
                                <Border.RenderTransform>
                                    <TransformGroup>
                                        <ScaleTransform ScaleX="1" ScaleY="1" />
                                        <SkewTransform AngleX="0" AngleY="0" />
                                        <RotateTransform Angle="0" />
                                        <TranslateTransform X="0" Y="0" />
                                    </TransformGroup>
                                </Border.RenderTransform>

                                <Border.Background>
                                    <RadialGradientBrush>
                                        <RadialGradientBrush.RelativeTransform>
                                            <TransformGroup>
                                                <ScaleTransform CenterX="0.5" CenterY="0.5" ScaleX="1.465" ScaleY="1.269" />
                                                <SkewTransform AngleX="0" AngleY="0" CenterX="0.5" CenterY="0.5" />
                                                <RotateTransform Angle="0" CenterX="0.5" CenterY="0.5" />
                                                <TranslateTransform X="-0.297" Y="-0.285" />
                                            </TransformGroup>
                                        </RadialGradientBrush.RelativeTransform>
                                        <GradientStop Color="#63FDFDFD" Offset="0" />
                                        <GradientStop Color="#00FFFFFF" Offset="0.789" />
                                    </RadialGradientBrush>
                                </Border.Background>
                            </Border>
                            <ContentPresenter SnapsToDevicePixels="True" HorizontalAlignment="Center" VerticalAlignment="Top" Grid.Row="0" RecognizesAccessKey="True" Margin="5,4,0,4">
                                <ContentPresenter.LayoutTransform>
                                    <TransformGroup>
                                        <ScaleTransform ScaleX="1" ScaleY="1" />
                                        <SkewTransform AngleX="0" AngleY="0" />
                                        <RotateTransform Angle="180" />
                                        <TranslateTransform X="0" Y="0" />
                                    </TransformGroup>
                                </ContentPresenter.LayoutTransform>
                            </ContentPresenter>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked" Value="true">
                            <Setter Property="Visibility" TargetName="Up_Arrow" Value="Visible" />
                            <Setter Property="Visibility" TargetName="Down_Arrow" Value="Collapsed" />
                            <Setter Property="Visibility" TargetName="UnPressedLine" Value="Collapsed" />
                            <Setter Property="Visibility" TargetName="PressedLine" Value="Visible" />
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Trigger.ExitActions>
                                <BeginStoryboard Storyboard="{StaticResource HoverOff}" x:Name="HoverOff_BeginStoryboard" />
                            </Trigger.ExitActions>
                            <Trigger.EnterActions>
                                <BeginStoryboard Storyboard="{StaticResource HoverOn}" />
                            </Trigger.EnterActions>

                        </Trigger>
                        <Trigger Property="IsPressed" Value="true">
                            <Trigger.ExitActions>
                                <BeginStoryboard Storyboard="{StaticResource PresssedOff}" x:Name="PresssedOff_BeginStoryboard" />
                            </Trigger.ExitActions>
                            <Trigger.EnterActions>
                                <BeginStoryboard Storyboard="{StaticResource PressedOn}" x:Name="PressedOn_BeginStoryboard" />
                            </Trigger.EnterActions>

                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="Foreground">
            <Setter.Value>
                <SolidColorBrush Color="{StaticResource WhiteColor}" />
            </Setter.Value>
        </Setter>
    </Style>
    
    <Style x:Key="nuclearScrollViewer" TargetType="{x:Type ScrollViewer}" BasedOn="{x:Null}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ScrollViewer}">
                    <Grid Background="{TemplateBinding Background}">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*" />
                            <ColumnDefinition Width="Auto" />
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="*" />
                            <RowDefinition Height="Auto" />
                        </Grid.RowDefinitions>
                        <ScrollContentPresenter Grid.Column="0" Grid.Row="0" Margin="{TemplateBinding Padding}" Content="{TemplateBinding Content}" ContentTemplate="{TemplateBinding ContentTemplate}" CanContentScroll="{TemplateBinding CanContentScroll}" />

                        <ScrollBar Visibility="{TemplateBinding ComputedHorizontalScrollBarVisibility}" Grid.Column="0" Grid.Row="1" x:Name="PART_HorizontalScrollBar" Orientation="Horizontal" Value="{Binding Path=HorizontalOffset, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" ViewportSize="{TemplateBinding ViewportWidth}" Minimum="0" Maximum="{TemplateBinding ScrollableWidth}" AutomationProperties.AutomationId="HorizontalScrollBar" />
                        <ScrollBar Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}" Grid.Column="1" Grid.Row="0" x:Name="PART_VerticalScrollBar" Orientation="Vertical" Value="{Binding Path=VerticalOffset, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" ViewportSize="{TemplateBinding ViewportHeight}" Minimum="0" Maximum="{TemplateBinding ScrollableHeight}" AutomationProperties.AutomationId="VerticalScrollBar" />
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>


    <ControlTemplate x:Key="ComboBoxToggleButton" TargetType="{x:Type ToggleButton}">
        <ControlTemplate.Resources>
            <Storyboard x:Key="HoverOn">
                <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="HoverShineBorder" Storyboard.TargetProperty="(UIElement.Opacity)">
                    <SplineDoubleKeyFrame KeyTime="00:00:00.3000000" Value=".7"/>
                </DoubleAnimationUsingKeyFrames>
                <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="HoverBorder" Storyboard.TargetProperty="(UIElement.Opacity)">
                    <SplineDoubleKeyFrame KeyTime="00:00:00.3000000" Value=".7"/>
                </DoubleAnimationUsingKeyFrames>
            </Storyboard>
            <Storyboard x:Key="HoverOff">
                <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="HoverBorder" Storyboard.TargetProperty="(UIElement.Opacity)">
                    <SplineDoubleKeyFrame KeyTime="00:00:00.1000000" Value="1"/>
                </DoubleAnimationUsingKeyFrames>
                <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="HoverShineBorder" Storyboard.TargetProperty="(UIElement.Opacity)">
                    <SplineDoubleKeyFrame KeyTime="00:00:00.1000000" Value="1"/>
                </DoubleAnimationUsingKeyFrames>
            </Storyboard>
        </ControlTemplate.Resources>
        <Grid x:Name="grid">
            <Grid.ColumnDefinitions>
                <ColumnDefinition />
                <ColumnDefinition Width="20" />
            </Grid.ColumnDefinitions>
            <Rectangle Grid.ColumnSpan="2" HorizontalAlignment="Stretch" x:Name="Rectangle" VerticalAlignment="Stretch" Width="Auto" Height="Auto" RadiusX="3" RadiusY="3" Fill="{StaticResource LightBrush}" Stroke="{StaticResource NormalBorderBrush}" />
            <Rectangle Grid.Column="0" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Width="Auto" Height="Auto" RadiusX="3" RadiusY="3" Fill="{StaticResource LightBrush}" Stroke="{StaticResource NormalBorderBrush}" />
            <Border Margin="2,2,2,2" Grid.Column="1" Background="{StaticResource NormalBrush}" CornerRadius="3,3,3,3" x:Name="border" />
            <Border Margin="2,2,2,2" Background="{StaticResource HoverBrush}" CornerRadius="3,3,3,3" x:Name="HoverBorder" Grid.Column="1" Opacity="1" />
            <Border Margin="2,2,2,2" Background="{StaticResource HoverShineBrush}" CornerRadius="3,3,3,3" x:Name="HoverShineBorder" Grid.Column="1" Opacity="0" />
            <Path Grid.Column="1" HorizontalAlignment="Center" x:Name="Arrow" VerticalAlignment="Center" Fill="{x:Null}" Data="M0.5,0.5 L3,6.5 5.5,0.5" Stroke="{StaticResource GlyphBrush}" Margin="5,0,5,0" Height="7" StrokeThickness="2" Stretch="Fill" />
            <Border Margin="2,2,2,2" Background="{StaticResource ShineBrush}" CornerRadius="3,3,3,3" x:Name="ShineBorder" Grid.Column="1" />
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="IsMouseOver" Value="true">
                <Trigger.ExitActions>
                    <BeginStoryboard Storyboard="{StaticResource HoverOff}" x:Name="HoverOff_BeginStoryboard"/>
                </Trigger.ExitActions>
                <Trigger.EnterActions>
                    <BeginStoryboard Storyboard="{StaticResource HoverOn}"/>
                </Trigger.EnterActions>
            </Trigger>
            <Trigger Property="IsChecked" Value="true" />
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Foreground" Value="{StaticResource DisabledForegroundBrush}" />
                <Setter Property="Stroke" TargetName="Arrow" Value="{StaticResource DisabledForegroundBrush}"/>
                <Setter Property="Background" TargetName="border" Value="{StaticResource DisabledBorderBrush}"/>
                <Setter Property="Opacity" TargetName="grid" Value="0.8"/>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>


    <Style x:Key="CBStyle" TargetType="{x:Type TextBox}">
        <Setter Property="Foreground" Value="{StaticResource TextBrush}"/>
    </Style>

    <ControlTemplate x:Key="ComboBoxTextBox" TargetType="{x:Type TextBox}">
        <Border x:Name="PART_ContentHost" Focusable="False" Background="{TemplateBinding Background}" />
    </ControlTemplate>

    
    <DropShadowEffect x:Key="PopupDropShadow" ShadowDepth="0" />

    <Style x:Key="nuclearTreeViewItemToggleButton" d:IsControlPart="True" TargetType="{x:Type ToggleButton}">
        <Setter Property="Focusable" Value="False" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <Grid Width="15" Height="13" Background="Transparent">
                        <Path Visibility="Collapsed" HorizontalAlignment="Left" Margin="1,1,1,1" x:Name="IsExpandedPath" VerticalAlignment="Center" Fill="{StaticResource GlyphBrush}" Data="M 0 4 L 8 4 L 4 8 Z" />
                        <Path HorizontalAlignment="Left" Margin="1,1,1,1" x:Name="ExpandPath" VerticalAlignment="Center" Fill="{StaticResource GlyphBrush}" Data="M 4 0 L 8 4 L 4 8 Z" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter Property="Visibility" Value="Visible" TargetName="IsExpandedPath" />
                            <Setter Property="Visibility" Value="Collapsed" TargetName="ExpandPath" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    
    <Storyboard x:Key="SelectedOn">
        <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="ContentSite" Storyboard.TargetProperty="(UIElement.Effect).(DropShadowEffect.BlurRadius)">
            <SplineDoubleKeyFrame KeyTime="00:00:00.1000000" Value="1" KeySpline="0,0,0,1" />
            <SplineDoubleKeyFrame KeyTime="00:00:00.2000000" Value="5" />
        </DoubleAnimationUsingKeyFrames>
    </Storyboard>
    <Storyboard x:Key="SelectedOff">
        <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="ContentSite" Storyboard.TargetProperty="(UIElement.Effect).(DropShadowEffect.BlurRadius)">
            <SplineDoubleKeyFrame KeyTime="00:00:00" Value="1" />
            <SplineDoubleKeyFrame KeyTime="00:00:00.3000000" Value="1" />
        </DoubleAnimationUsingKeyFrames>
    </Storyboard>
    <Storyboard x:Key="HoverOn">
        <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="ContentSite" Storyboard.TargetProperty="(UIElement.Effect).(DropShadowEffect.BlurRadius)">
            <SplineDoubleKeyFrame KeyTime="00:00:00.1000000" Value="3" />
        </DoubleAnimationUsingKeyFrames>
    </Storyboard>
    <Storyboard x:Key="HoverOff">
        <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="ContentSite" Storyboard.TargetProperty="(UIElement.Effect).(DropShadowEffect.BlurRadius)">
            <SplineDoubleKeyFrame KeyTime="00:00:00.3000000" Value="1" />
        </DoubleAnimationUsingKeyFrames>
    </Storyboard>
    <Storyboard x:Key="PressedOn">
        <ColorAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="TopWhite" Storyboard.TargetProperty="(Panel.Background).(GradientBrush.GradientStops)[0].(GradientStop.Color)">
            <SplineColorKeyFrame KeyTime="00:00:00.1000000" Value="#19FDFDFD" />
        </ColorAnimationUsingKeyFrames>
    </Storyboard>
    <Storyboard x:Key="PressedOff">
        <ColorAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="TopWhite" Storyboard.TargetProperty="(Panel.Background).(GradientBrush.GradientStops)[0].(GradientStop.Color)">
            <SplineColorKeyFrame KeyTime="00:00:00.3000000" Value="#99FDFDFD" />
        </ColorAnimationUsingKeyFrames>
    </Storyboard>

    <SolidColorBrush x:Key="LightBLack" Color="#7F191818" />

    <Style x:Key="{x:Static ToolBar.ButtonStyleKey}" TargetType="{x:Type Button}">

        <Setter Property="Foreground" >
            <Setter.Value>
                <SolidColorBrush Color="{StaticResource MainColor}"/>
            </Setter.Value>
        </Setter>
        <Setter Property="FontSize" Value="14" />

        <Setter Property="HorizontalAlignment" Value="Center" />

        <Setter Property="VerticalAlignment" Value="Center" />

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ButtonBase}">
                    <ControlTemplate.Resources>
                        <Storyboard x:Key="HoverOn">
                            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="HoverLayer" Storyboard.TargetProperty="(UIElement.Opacity)">
                                <SplineDoubleKeyFrame KeyTime="00:00:00.1000000" Value="1" />
                            </DoubleAnimationUsingKeyFrames>
                            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="Grid" Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.Y)">
                                <SplineDoubleKeyFrame KeyTime="00:00:00.1000000" Value="-4" />
                            </DoubleAnimationUsingKeyFrames>
                        </Storyboard>
                        <Storyboard x:Key="HoverOff">
                            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="HoverLayer" Storyboard.TargetProperty="(UIElement.Opacity)">
                                <SplineDoubleKeyFrame KeyTime="00:00:00.3000000" Value="0" />
                            </DoubleAnimationUsingKeyFrames>
                            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="Grid" Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.Y)">
                                <SplineDoubleKeyFrame KeyTime="00:00:00.3000000" Value="-2" />
                            </DoubleAnimationUsingKeyFrames>
                        </Storyboard>
                        <Storyboard x:Key="PressedOn">
                            <ColorAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="BottomWhite" Storyboard.TargetProperty="(Panel.Background).(GradientBrush.GradientStops)[1].(GradientStop.Color)">
                                <SplineColorKeyFrame KeyTime="00:00:00.1000000" Value="#7FFFFFFF" />
                            </ColorAnimationUsingKeyFrames>
                            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="Grid" Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.Y)">
                                <SplineDoubleKeyFrame KeyTime="00:00:00.1000000" Value="2" />
                            </DoubleAnimationUsingKeyFrames>
                            <ThicknessAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="Shadow" Storyboard.TargetProperty="(FrameworkElement.Margin)">
                                <SplineThicknessKeyFrame KeyTime="00:00:00.1000000" Value="0,2,0,0" />
                            </ThicknessAnimationUsingKeyFrames>
                            <ColorAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="TopWhite" Storyboard.TargetProperty="(Panel.Background).(GradientBrush.GradientStops)[0].(GradientStop.Color)">
                                <SplineColorKeyFrame KeyTime="00:00:00.1000000" Value="#19FDFDFD" />
                            </ColorAnimationUsingKeyFrames>
                        </Storyboard>
                        <Storyboard x:Key="PressedOff">
                            <ColorAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="BottomWhite" Storyboard.TargetProperty="(Panel.Background).(GradientBrush.GradientStops)[1].(GradientStop.Color)">
                                <SplineColorKeyFrame KeyTime="00:00:00.3000000" Value="#19FFFFFF" />
                            </ColorAnimationUsingKeyFrames>
                            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="Grid" Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.Y)">
                                <SplineDoubleKeyFrame KeyTime="00:00:00.3000000" Value="-2" />
                            </DoubleAnimationUsingKeyFrames>
                            <ThicknessAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="Shadow" Storyboard.TargetProperty="(FrameworkElement.Margin)">
                                <SplineThicknessKeyFrame KeyTime="00:00:00.3000000" Value="0,2,0,-2" />
                            </ThicknessAnimationUsingKeyFrames>
                            <ColorAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="TopWhite" Storyboard.TargetProperty="(Panel.Background).(GradientBrush.GradientStops)[0].(GradientStop.Color)">
                                <SplineColorKeyFrame KeyTime="00:00:00.3000000" Value="#99FDFDFD" />
                            </ColorAnimationUsingKeyFrames>
                        </Storyboard>
                    </ControlTemplate.Resources>
                    <Grid x:Name="Grid" RenderTransformOrigin="0.5,0.5" Margin="4,4,4,4">
                        <Grid.RenderTransform>
                            <TransformGroup>
                                <ScaleTransform ScaleX="1" ScaleY="1" />
                                <SkewTransform AngleX="0" AngleY="0" />
                                <RotateTransform Angle="0" />
                                <TranslateTransform X="0" Y="-2" />
                            </TransformGroup>
                        </Grid.RenderTransform>

                        <Border CornerRadius="4,4,4,4" x:Name="Shadow" Opacity="0.5" Margin="0,2,0,-2" Effect="{StaticResource EffectBlur}">
                            <Border.Background>
                                <SolidColorBrush Color="{StaticResource BlackColor}" />
                            </Border.Background>
                        </Border>

                        <Border CornerRadius="4,4,4,4" x:Name="BaseLayer">
                            <Border.Background>
                                <SolidColorBrush Color="{StaticResource ControlColor}" />
                            </Border.Background>
                        </Border>
                        <Border CornerRadius="4,4,4,4" x:Name="EdgeCurveLayer">
                            <Border.Background>
                                <LinearGradientBrush EndPoint="0.994,0.5" StartPoint="0.01,0.5">
                                    <GradientStop Color="#00000000" Offset="0" />
                                    <GradientStop Color="#00000000" Offset="1" />
                                    <GradientStop Color="#19000000" Offset="0.203" />
                                    <GradientStop Color="#19000000" Offset="0.81" />
                                    <GradientStop Color="#33000000" Offset="0.5" />
                                </LinearGradientBrush>
                            </Border.Background>
                        </Border>
                        <Border CornerRadius="4,4,4,4" x:Name="BottomWhite">
                            <Border.OpacityMask>
                                <LinearGradientBrush EndPoint="0.995,0.5" StartPoint="0.01,0.5">
                                    <GradientStop Color="#00000000" Offset="0" />
                                    <GradientStop Color="#00000000" Offset="1" />
                                    <GradientStop Color="#FF000000" Offset="0.548" />
                                </LinearGradientBrush>
                            </Border.OpacityMask>
                            <Border.Background>
                                <LinearGradientBrush EndPoint="0.5,0.971" StartPoint="0.5,0.036">
                                    <GradientStop Color="#00000000" Offset="0" />
                                    <GradientStop Color="#19FFFFFF" Offset="1" />
                                    <GradientStop Color="#0C808080" Offset="0.49" />
                                </LinearGradientBrush>
                            </Border.Background>
                        </Border>
                        <Border CornerRadius="4,4,4,4" x:Name="TopWhite">
                            <Border.OpacityMask>
                                <LinearGradientBrush EndPoint="0.991,0.5" StartPoint="0.01,0.5">
                                    <GradientStop Color="#00000000" Offset="0" />
                                    <GradientStop Color="#00060606" Offset="1" />
                                    <GradientStop Color="#D8020202" Offset="0.49" />
                                </LinearGradientBrush>
                            </Border.OpacityMask>
                            <Border.Background>
                                <LinearGradientBrush EndPoint="0.5,0.971" StartPoint="0.5,0.029">
                                    <GradientStop Color="#99FDFDFD" Offset="0" />
                                    <GradientStop Color="#00FFFFFF" Offset="1" />
                                    <GradientStop Color="#4CFDFDFD" Offset="0.513" />
                                </LinearGradientBrush>
                            </Border.Background>
                        </Border>
                        <Border CornerRadius="4,4,4,4" x:Name="HoverLayer" Opacity="0" BorderThickness="1,1,1,1" Background="{x:Null}">
                            <Border.BorderBrush>
                                <SolidColorBrush Color="{StaticResource MainColor}" />
                            </Border.BorderBrush>
                            <Border CornerRadius="3,3,3,3" BorderThickness="1,1,1,1" x:Name="HoverInner">
                                <Border.BorderBrush>
                                    <SolidColorBrush Color="{StaticResource MainColor}" />
                                </Border.BorderBrush>
                            </Border>
                        </Border>
                        <Border x:Name="DefaultLayer" BorderThickness="1,1,1,1" CornerRadius="4,4,4,4" Opacity="0">
                            <Border.Effect>
                                <DropShadowEffect Color="{StaticResource MainColor}" Opacity="0.65" ShadowDepth="0" BlurRadius="8" />
                            </Border.Effect>
                            <Border.BorderBrush>
                                <SolidColorBrush Color="{StaticResource MainColor}" />
                            </Border.BorderBrush>
                        </Border>

                        <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" RecognizesAccessKey="True" Margin="4,-2,4,2" x:Name="contentPresenter">
                            <ContentPresenter.Effect>
                                <DropShadowEffect  Color="{StaticResource MainColor}" Opacity="0" />
                            </ContentPresenter.Effect>
                        </ContentPresenter>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsKeyboardFocused" Value="true" />
                        <Trigger Property="IsMouseOver" Value="true">
                            <Trigger.ExitActions>
                                <BeginStoryboard Storyboard="{StaticResource HoverOff}" x:Name="HoverOff_BeginStoryboard" />
                            </Trigger.ExitActions>
                            <Trigger.EnterActions>
                                <BeginStoryboard Storyboard="{StaticResource HoverOn}" x:Name="HoverOn_BeginStoryboard" />
                            </Trigger.EnterActions>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="true">
                            <Trigger.ExitActions>
                                <BeginStoryboard Storyboard="{StaticResource PressedOff}" x:Name="PressedOff_BeginStoryboard" />
                            </Trigger.ExitActions>
                            <Trigger.EnterActions>
                                <BeginStoryboard Storyboard="{StaticResource PressedOn}" x:Name="PressedOn_BeginStoryboard" />
                            </Trigger.EnterActions>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="true" />
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Foreground" Value="{StaticResource DisabledForegroundBrush}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>

    </Style>

    <Style x:Key="{x:Static ToolBar.RadioButtonStyleKey}" TargetType="{x:Type RadioButton}">
        <Setter Property="SnapsToDevicePixels" Value="true" />
        <Setter Property="FocusVisualStyle" Value="{StaticResource RadioButtonFocusVisual}" />
        <Setter Property="Background" Value="{StaticResource NormalBrush}" />
        <Setter Property="BorderBrush" Value="{StaticResource NormalBorderBrush}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RadioButton}">
                    <ControlTemplate.Resources>
                        <Storyboard x:Key="HoverOn">
                            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="contentPresenter" Storyboard.TargetProperty="(UIElement.Effect).(DropShadowEffect.Opacity)">
                                <SplineDoubleKeyFrame KeyTime="00:00:00.1000000" Value="0.8" />
                            </DoubleAnimationUsingKeyFrames>
                            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="Hover" Storyboard.TargetProperty="(UIElement.Opacity)">
                                <SplineDoubleKeyFrame KeyTime="00:00:00.1000000" Value="0.8" />
                            </DoubleAnimationUsingKeyFrames>
                        </Storyboard>
                        <Storyboard x:Key="HoverOff">
                            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="Hover" Storyboard.TargetProperty="(UIElement.Opacity)">
                                <SplineDoubleKeyFrame KeyTime="00:00:00.3000000" Value="0" />
                            </DoubleAnimationUsingKeyFrames>
                            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="contentPresenter" Storyboard.TargetProperty="(UIElement.Effect).(DropShadowEffect.Opacity)">
                                <SplineDoubleKeyFrame KeyTime="00:00:00.3000000" Value="0" />
                            </DoubleAnimationUsingKeyFrames>
                        </Storyboard>
                        <Storyboard x:Key="CheckedOn">
                            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="CheckMark" Storyboard.TargetProperty="(FrameworkElement.Width)">
                                <SplineDoubleKeyFrame KeyTime="00:00:00.1000000" Value="8" />
                            </DoubleAnimationUsingKeyFrames>
                            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="CheckMark" Storyboard.TargetProperty="(FrameworkElement.Height)">
                                <SplineDoubleKeyFrame KeyTime="00:00:00.1000000" Value="8" />
                            </DoubleAnimationUsingKeyFrames>
                        </Storyboard>
                        <Storyboard x:Key="CheckedOff">
                            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="CheckMark" Storyboard.TargetProperty="(FrameworkElement.Width)">
                                <SplineDoubleKeyFrame KeyTime="00:00:00.3000000" Value="0" />
                            </DoubleAnimationUsingKeyFrames>
                            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="CheckMark" Storyboard.TargetProperty="(FrameworkElement.Height)">
                                <SplineDoubleKeyFrame KeyTime="00:00:00.3000000" Value="0" />
                            </DoubleAnimationUsingKeyFrames>
                        </Storyboard>
                    </ControlTemplate.Resources>

                    <BulletDecorator Background="Transparent">
                        <BulletDecorator.Bullet>
                            <Grid Width="16" Height="16">
                                <Ellipse x:Name="Shadow" StrokeThickness="2" Stroke="{x:Null}" Opacity="0.25" Effect="{StaticResource EffectBlur}">

                                    <Ellipse.Fill>
                                        <SolidColorBrush Color="{StaticResource BlackColor}" />
                                    </Ellipse.Fill>
                                </Ellipse>
                                <Ellipse x:Name="MainLayer" StrokeThickness="2" Stroke="#72000000">
                                    <Ellipse.Fill>
                                        <SolidColorBrush Color="{StaticResource ControlColor}" />
                                    </Ellipse.Fill>
                                </Ellipse>
                                <Ellipse x:Name="Shade" StrokeThickness="2" Stroke="{x:Null}" Opacity="0.1">
                                    <Ellipse.Fill>
                                        <LinearGradientBrush EndPoint="1.343,0.5" StartPoint="-0.399,0.5">
                                            <GradientStop Color="#FF000000" Offset="1" />
                                            <GradientStop Color="#FFFFFFFF" Offset="0.005" />
                                        </LinearGradientBrush>
                                    </Ellipse.Fill>
                                </Ellipse>
                                <Ellipse x:Name="Hover" StrokeThickness="2" Fill="{x:Null}" Opacity="0">
                                    <Ellipse.Stroke>
                                        <SolidColorBrush Color="{StaticResource MainColor}" />
                                    </Ellipse.Stroke>
                                </Ellipse>
                                <Ellipse Margin="4" x:Name="CheckMark" Fill="{StaticResource GlyphBrush}" HorizontalAlignment="Center" VerticalAlignment="Center" Width="8" Height="8" />
                            </Grid>
                        </BulletDecorator.Bullet>
                        <ContentPresenter RecognizesAccessKey="True" Margin="5,0,0,0" x:Name="contentPresenter">
                            <ContentPresenter.Effect>
                                <DropShadowEffect Color="{StaticResource MainColor}" Opacity="0" />
                            </ContentPresenter.Effect>
                        </ContentPresenter>
                    </BulletDecorator>

                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked" Value="false">
                            <Trigger.ExitActions>
                                <BeginStoryboard Storyboard="{StaticResource CheckedOn}" x:Name="CheckedOn_BeginStoryboard" />
                            </Trigger.ExitActions>
                            <Trigger.EnterActions>
                                <BeginStoryboard Storyboard="{StaticResource CheckedOff}" x:Name="CheckedOff_BeginStoryboard" />
                            </Trigger.EnterActions>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Trigger.ExitActions>
                                <BeginStoryboard Storyboard="{StaticResource HoverOff}" x:Name="HoverOff_BeginStoryboard" />
                            </Trigger.ExitActions>
                            <Trigger.EnterActions>
                                <BeginStoryboard Storyboard="{StaticResource HoverOn}" />
                            </Trigger.EnterActions>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="true" />
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Fill" Value="{StaticResource DisabledBackgroundBrush}" TargetName="MainLayer" />
                            <Setter Property="Stroke" Value="#40000000" TargetName="MainLayer" />
                            <Setter Property="Foreground" Value="#80000000" />
                        </Trigger>

                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="{x:Static ToolBar.CheckBoxStyleKey}" TargetType="{x:Type CheckBox}">
        <Setter Property="SnapsToDevicePixels" Value="true" />
        <Setter Property="FocusVisualStyle" Value="{StaticResource CheckBoxFocusVisual}" />
        <Setter Property="Background" Value="{StaticResource NormalBrush}" />
        <Setter Property="BorderBrush" Value="{StaticResource NormalBorderBrush}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type CheckBox}">

                    <ControlTemplate.Resources>
                        <Storyboard x:Key="HoverOn">
                            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="contentPresenter" Storyboard.TargetProperty="(UIElement.Effect).(DropShadowEffect.Opacity)">
                                <SplineDoubleKeyFrame KeyTime="00:00:00.1000000" Value="1" />
                            </DoubleAnimationUsingKeyFrames>
                            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="Hover" Storyboard.TargetProperty="(UIElement.Opacity)">
                                <SplineDoubleKeyFrame KeyTime="00:00:00.1000000" Value="0.8" />
                            </DoubleAnimationUsingKeyFrames>
                        </Storyboard>
                        <Storyboard x:Key="HoverOff">
                            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="contentPresenter" Storyboard.TargetProperty="(UIElement.Effect).(DropShadowEffect.Opacity)">
                                <SplineDoubleKeyFrame KeyTime="00:00:00.3000000" Value="0" />
                            </DoubleAnimationUsingKeyFrames>
                            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="Hover" Storyboard.TargetProperty="(UIElement.Opacity)">
                                <SplineDoubleKeyFrame KeyTime="00:00:00.3000000" Value="0" />
                            </DoubleAnimationUsingKeyFrames>
                        </Storyboard>
                        <Storyboard x:Key="PressedOn" />
                        <Storyboard x:Key="PressedOff" />
                        <Storyboard x:Key="CheckedOn">
                            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="path" Storyboard.TargetProperty="(FrameworkElement.Width)">
                                <SplineDoubleKeyFrame KeyTime="00:00:00.1000000" Value="11" />
                            </DoubleAnimationUsingKeyFrames>
                            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="path" Storyboard.TargetProperty="(FrameworkElement.Height)">
                                <SplineDoubleKeyFrame KeyTime="00:00:00.1000000" Value="10" />
                            </DoubleAnimationUsingKeyFrames>
                        </Storyboard>
                        <Storyboard x:Key="CheckedOff">
                            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="path" Storyboard.TargetProperty="(FrameworkElement.Width)">
                                <SplineDoubleKeyFrame KeyTime="00:00:00.2000000" Value="0" />
                            </DoubleAnimationUsingKeyFrames>
                            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="path" Storyboard.TargetProperty="(FrameworkElement.Height)">
                                <SplineDoubleKeyFrame KeyTime="00:00:00.2000000" Value="0" />
                            </DoubleAnimationUsingKeyFrames>
                        </Storyboard>
                        <Storyboard x:Key="ThreeStateOn">
                            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="ThreeState" Storyboard.TargetProperty="(FrameworkElement.Width)">
                                <SplineDoubleKeyFrame KeyTime="00:00:00.1000000" Value="9" />
                            </DoubleAnimationUsingKeyFrames>
                            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="ThreeState" Storyboard.TargetProperty="(FrameworkElement.Height)">
                                <SplineDoubleKeyFrame KeyTime="00:00:00.1000000" Value="9" />
                            </DoubleAnimationUsingKeyFrames>
                            <ObjectAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="path" Storyboard.TargetProperty="(UIElement.Visibility)">
                                <DiscreteObjectKeyFrame KeyTime="00:00:00.1000000" Value="{x:Static Visibility.Hidden}" />
                            </ObjectAnimationUsingKeyFrames>
                        </Storyboard>
                        <Storyboard x:Key="ThreeStateOff">
                            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="ThreeState" Storyboard.TargetProperty="(FrameworkElement.Width)">
                                <SplineDoubleKeyFrame KeyTime="00:00:00.3000000" Value="0" />
                            </DoubleAnimationUsingKeyFrames>
                            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="ThreeState" Storyboard.TargetProperty="(FrameworkElement.Height)">
                                <SplineDoubleKeyFrame KeyTime="00:00:00.3000000" Value="0" />
                            </DoubleAnimationUsingKeyFrames>
                            <ObjectAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="path" Storyboard.TargetProperty="(UIElement.Visibility)">
                                <DiscreteObjectKeyFrame KeyTime="00:00:00.3000000" Value="{x:Static Visibility.Visible}" />
                            </ObjectAnimationUsingKeyFrames>
                        </Storyboard>
                    </ControlTemplate.Resources>

                    <BulletDecorator Background="Transparent">
                        <BulletDecorator.Bullet>
                            <Grid Width="13" Height="13">
                                <Border x:Name="Shadow" Margin="0,0,-2,-2" Opacity="0.25" Effect="{StaticResource EffectBlur}">

                                    <Border.Background>
                                        <SolidColorBrush Color="{StaticResource BlackColor}" />
                                    </Border.Background>
                                </Border>
                                <Border x:Name="MainBorder" BorderThickness="2,2,2,2" CornerRadius="2,2,2,2" BorderBrush="#72000000">
                                    <Border.Background>
                                        <SolidColorBrush Color="{StaticResource ControlColor}" />
                                    </Border.Background>
                                    <Rectangle Visibility="Visible" Fill="{StaticResource GlyphBrush}" x:Name="ThreeState" Margin="1,1,1,1" Width="0" Height="0" />
                                </Border>
                                <Border x:Name="Shade" CornerRadius="2,2,2,2" Opacity="0.1" Margin="1,1,1,1">
                                    <Border.Background>
                                        <LinearGradientBrush EndPoint="1.292,0.5" StartPoint="-0.545,0.5">
                                            <GradientStop Color="#FF000000" Offset="1" />
                                            <GradientStop Color="#FFFFFFFF" Offset="0.006" />
                                        </LinearGradientBrush>
                                    </Border.Background>
                                </Border>
                                <Path Stretch="Fill" Stroke="{StaticResource GlyphBrush}" StrokeThickness="2" x:Name="path" Width="11" Data="M1.0924787,5.372821 L3.1785986,10.519821 10.528543,2.5198207" Margin="1.577,0.134,-0.013,2.866" Height="10" />
                                <Border Opacity="0" x:Name="Hover" BorderThickness="2,2,2,2" CornerRadius="2,2,2,2">
                                    <Border.BorderBrush>
                                        <SolidColorBrush Color="{StaticResource MainColor}" />
                                    </Border.BorderBrush>
                                </Border>
                            </Grid>
                        </BulletDecorator.Bullet>
                        <ContentPresenter RecognizesAccessKey="True" Margin="5,0,0,0" x:Name="contentPresenter">
                            <ContentPresenter.Effect>
                                <DropShadowEffect Color="{StaticResource MainColor}" Opacity="0" />
                            </ContentPresenter.Effect>
                        </ContentPresenter>
                    </BulletDecorator>

                    <ControlTemplate.Triggers>
                        <MultiTrigger>
                            <MultiTrigger.ExitActions>
                                <BeginStoryboard Storyboard="{StaticResource ThreeStateOff}" x:Name="ThreeStateOff_BeginStoryboard" />
                            </MultiTrigger.ExitActions>
                            <MultiTrigger.EnterActions>
                                <BeginStoryboard Storyboard="{StaticResource ThreeStateOn}" x:Name="ThreeStateOn_BeginStoryboard" />
                            </MultiTrigger.EnterActions>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsThreeState" Value="True" />
                                <Condition Property="IsChecked" Value="True" />
                            </MultiTrigger.Conditions>

                        </MultiTrigger>

                        <Trigger Property="IsChecked" Value="false">
                            <Trigger.ExitActions>
                                <BeginStoryboard Storyboard="{StaticResource CheckedOn}" x:Name="CheckedOn_BeginStoryboard" />
                            </Trigger.ExitActions>
                            <Trigger.EnterActions>
                                <BeginStoryboard Storyboard="{StaticResource CheckedOff}" x:Name="CheckedOff_BeginStoryboard" />
                            </Trigger.EnterActions>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Trigger.ExitActions>
                                <BeginStoryboard x:Name="HoverOff_BeginStoryboard" Storyboard="{StaticResource HoverOff}" />
                            </Trigger.ExitActions>
                            <Trigger.EnterActions>
                                <BeginStoryboard Storyboard="{StaticResource HoverOn}" />
                            </Trigger.EnterActions>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="true">
                            <Trigger.ExitActions>
                                <BeginStoryboard x:Name="PressedOff_BeginStoryboard" Storyboard="{StaticResource PressedOff}" />
                            </Trigger.ExitActions>
                            <Trigger.EnterActions>
                                <BeginStoryboard x:Name="PressedOn_BeginStoryboard" Storyboard="{StaticResource PressedOn}" />
                            </Trigger.EnterActions>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Background" Value="{StaticResource DisabledBackgroundBrush}" TargetName="MainBorder" />
                            <Setter Property="BorderBrush" Value="{StaticResource DisabledBorderBrush}" TargetName="MainBorder" />
                        </Trigger>
                    </ControlTemplate.Triggers>

                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="Foreground">
            <Setter.Value>
                <SolidColorBrush Color="{StaticResource BlackColor}" />
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="{x:Static ToolBar.ComboBoxStyleKey}" TargetType="{x:Type ComboBox}">
        <Setter Property="SnapsToDevicePixels" Value="true" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ComboBox}">
                    <ControlTemplate.Resources>
                        <Storyboard x:Key="ContentHoverOn">
                            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="ContentSite" Storyboard.TargetProperty="(UIElement.Effect).(DropShadowEffect.Opacity)">
                                <SplineDoubleKeyFrame KeyTime="00:00:00.1000000" Value="0.55" />
                            </DoubleAnimationUsingKeyFrames>
                        </Storyboard>
                        <Storyboard x:Key="ContentHoverOff">
                            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="ContentSite" Storyboard.TargetProperty="(UIElement.Effect).(DropShadowEffect.Opacity)">
                                <SplineDoubleKeyFrame KeyTime="00:00:00.3000000" Value="0" />
                            </DoubleAnimationUsingKeyFrames>
                        </Storyboard>
                    </ControlTemplate.Resources>
                    <Grid>

                        <ToggleButton Grid.Column="2" Template="{StaticResource ComboBoxToggleButton}" x:Name="ToggleButton" Focusable="false" IsChecked="{Binding Path=IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" ClickMode="Press" />
                        <ContentPresenter HorizontalAlignment="Stretch" Margin="7,0,23,2" x:Name="ContentSite" VerticalAlignment="Center" Content="{TemplateBinding SelectionBoxItem}" ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}" ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}" IsHitTestVisible="False">
                            <ContentPresenter.Effect>
                                <DropShadowEffect Color="{StaticResource MainColor}" Opacity="0" BlurRadius="10" />
                            </ContentPresenter.Effect>
                        </ContentPresenter>

                        <TextBox Visibility="Hidden" Foreground="{StaticResource Foreground}" Template="{StaticResource ComboBoxTextBox}" HorizontalAlignment="Left" Margin="3,3,23,3" x:Name="PART_EditableTextBox" Style="{x:Null}" VerticalAlignment="Center" Focusable="True" Background="Transparent" IsReadOnly="{TemplateBinding IsReadOnly}" />

                        <Popup IsOpen="{TemplateBinding IsDropDownOpen}" Placement="Bottom" x:Name="Popup" Focusable="False" AllowsTransparency="True" PopupAnimation="Fade">
                            <Grid MaxHeight="{TemplateBinding MaxDropDownHeight}" MinWidth="{TemplateBinding ActualWidth}" x:Name="DropDown" SnapsToDevicePixels="True" Margin="0,10,0,0">
                                <Border x:Name="DropDownBorder" BorderThickness="1" Background="{StaticResource PopupBackgroundBrush}" CornerRadius="4,4,4,4" Effect="{StaticResource EffectBlur}">
                                    <Border.BorderBrush>
                                        <SolidColorBrush Color="{StaticResource BlackColor}" />
                                    </Border.BorderBrush>
                                </Border>
                                <ScrollViewer Margin="4,6,10,6" Style="{StaticResource nuclearScrollViewer}" SnapsToDevicePixels="True" HorizontalScrollBarVisibility="Auto" VerticalScrollBarVisibility="Auto" CanContentScroll="True">
                                    <VirtualizingStackPanel IsItemsHost="True" KeyboardNavigation.DirectionalNavigation="Contained" />
                                </ScrollViewer>
                            </Grid>
                        </Popup>
                    </Grid>
                    <ControlTemplate.Triggers>

                        <Trigger Property="IsMouseOver" Value="True">
                            <Trigger.ExitActions>
                                <BeginStoryboard Storyboard="{StaticResource ContentHoverOff}" x:Name="ContentHoverOff_BeginStoryboard" />
                            </Trigger.ExitActions>
                            <Trigger.EnterActions>
                                <BeginStoryboard Storyboard="{StaticResource ContentHoverOn}" />
                            </Trigger.EnterActions>
                        </Trigger>

                        <Trigger Property="HasItems" Value="false">
                            <Setter Property="MinHeight" Value="95" TargetName="DropDownBorder" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Foreground" Value="{StaticResource DisabledForegroundBrush}" />
                        </Trigger>
                        <Trigger Property="IsGrouping" Value="true">
                            <Setter Property="ScrollViewer.CanContentScroll" Value="false" />
                        </Trigger>
                        <Trigger Property="AllowsTransparency" SourceName="Popup" Value="true">
                            <Setter Property="CornerRadius" Value="4" TargetName="DropDownBorder" />
                            <Setter Property="Margin" Value="0,2,0,0" TargetName="DropDownBorder" />
                        </Trigger>
                        <Trigger Property="IsEditable" Value="true">
                            <Setter Property="IsTabStop" Value="false" />
                            <Setter Property="Visibility" Value="Visible" TargetName="PART_EditableTextBox" />
                            <Setter Property="Visibility" Value="Hidden" TargetName="ContentSite" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="Foreground">
            <Setter.Value>
                <SolidColorBrush Color="{StaticResource WhiteColor}" />
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Foreground">
                    <Setter.Value>
                        <SolidColorBrush Color="{StaticResource MainColor}" />
                    </Setter.Value>
                </Setter>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="{x:Static ToolBar.TextBoxStyleKey}" TargetType="{x:Type TextBox}">
        <Setter Property="KeyboardNavigation.TabNavigation" Value="None" />
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="AllowDrop" Value="true" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TextBox}">
                    <ControlTemplate.Resources>

                        <Storyboard x:Key="HoverOn">
                            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="HoverTopEffect" Storyboard.TargetProperty="(UIElement.Opacity)">
                                <SplineDoubleKeyFrame KeyTime="00:00:00.1000000" Value="1" />
                            </DoubleAnimationUsingKeyFrames>
                            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="HoverBottomEffect" Storyboard.TargetProperty="(UIElement.Opacity)">
                                <SplineDoubleKeyFrame KeyTime="00:00:00.1000000" Value="1" />
                            </DoubleAnimationUsingKeyFrames>
                        </Storyboard>
                        <Storyboard x:Key="HoverOff">
                            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="HoverTopEffect" Storyboard.TargetProperty="(UIElement.Opacity)">
                                <SplineDoubleKeyFrame KeyTime="00:00:00.3000000" Value="0" />
                            </DoubleAnimationUsingKeyFrames>
                            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="HoverBottomEffect" Storyboard.TargetProperty="(UIElement.Opacity)">
                                <SplineDoubleKeyFrame KeyTime="00:00:00.3000000" Value="0" />
                            </DoubleAnimationUsingKeyFrames>
                        </Storyboard>

                        <Storyboard x:Key="FocusedOn">
                            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="FocusedTopEffect" Storyboard.TargetProperty="(UIElement.Opacity)">
                                <SplineDoubleKeyFrame KeyTime="00:00:00.1000000" Value="1" />
                            </DoubleAnimationUsingKeyFrames>
                            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="FocusedBottomEffect" Storyboard.TargetProperty="(UIElement.Opacity)">
                                <SplineDoubleKeyFrame KeyTime="00:00:00.1000000" Value="1" />
                            </DoubleAnimationUsingKeyFrames>
                        </Storyboard>
                        <Storyboard x:Key="FocusedOff">
                            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="FocusedTopEffect" Storyboard.TargetProperty="(UIElement.Opacity)">
                                <SplineDoubleKeyFrame KeyTime="00:00:00.3000000" Value="0" />
                            </DoubleAnimationUsingKeyFrames>
                            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="FocusedBottomEffect" Storyboard.TargetProperty="(UIElement.Opacity)">
                                <SplineDoubleKeyFrame KeyTime="00:00:00.3000000" Value="0" />
                            </DoubleAnimationUsingKeyFrames>
                        </Storyboard>
                    </ControlTemplate.Resources>
                    <Grid>
                        <Border x:Name="Shadow" Margin="2,2,-2,-2" Opacity="0.25" Effect="{StaticResource EffectBlur}">
                            <Border.Background>
                                <SolidColorBrush Color="{StaticResource BlackColor}" />
                            </Border.Background>

                        </Border>
                        <Border x:Name="Border" BorderThickness="2,2,2,2" Padding="2" CornerRadius="2,2,2,2" Effect="{StaticResource EffectBlur}">
                            <Border.Background>
                                <SolidColorBrush Color="{StaticResource WhiteColor}" />
                            </Border.Background>

                            <Border.BorderBrush>
                                <SolidColorBrush Color="{StaticResource BlackColor}" />
                            </Border.BorderBrush>

                        </Border>
                        <Grid Width="Auto" Height="Auto" Margin="4,3,3,3">

                            <Border Opacity="0" Margin="-4,-3,-3,-3" x:Name="HoverTopEffect" BorderThickness="2,2,2,2" CornerRadius="2,2,2,2">
                                <Border.BorderBrush>
                                    <LinearGradientBrush EndPoint="0.5,0.964" StartPoint="0.5,0.058">
                                        <GradientStop Color="{StaticResource MainColor}" Offset="0" />
                                        <GradientStop Color="#2CFFFFFF" Offset="1" />
                                    </LinearGradientBrush>
                                </Border.BorderBrush>
                            </Border>
                            <Border Opacity="0" Margin="-2,-2,-2,-2" x:Name="HoverBottomEffect" BorderThickness="2,2,2,2" CornerRadius="2,2,2,2">
                                <Border.BorderBrush>
                                    <LinearGradientBrush EndPoint="0.5,0.964" StartPoint="0.5,0.058">
                                        <GradientStop Color="{StaticResource MainColor}" Offset="1" />
                                        <GradientStop Color="#2CFFFFFF" Offset="0.005" />
                                    </LinearGradientBrush>
                                </Border.BorderBrush>
                            </Border>

                            <Border Opacity="0" Margin="-4,-3,-3,-3" x:Name="FocusedTopEffect" BorderThickness="2,2,2,2" CornerRadius="2,2,2,2">
                                <Border.BorderBrush>
                                    <LinearGradientBrush EndPoint="0.5,0.964" StartPoint="0.5,0.058">
                                        <GradientStop Color="{StaticResource MainColor}" Offset="0" />
                                        <GradientStop Color="#2CFFFFFF" Offset="1" />
                                    </LinearGradientBrush>
                                </Border.BorderBrush>
                            </Border>
                            <Border Opacity="0" Margin="-2,-2,-2,-2" x:Name="FocusedBottomEffect" BorderThickness="2,2,2,2" CornerRadius="2,2,2,2">
                                <Border.BorderBrush>
                                    <LinearGradientBrush EndPoint="0.5,0.964" StartPoint="0.5,0.058">
                                        <GradientStop Color="{StaticResource MainColor}" Offset="1" />
                                        <GradientStop Color="#2CFFFFFF" Offset="0.005" />
                                    </LinearGradientBrush>
                                </Border.BorderBrush>
                            </Border>
                            <Border Margin="-3,-3,-2,-2" x:Name="TopGradient" CornerRadius="1,1,1,1">
                                <Border.Background>
                                    <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                        <GradientStop Color="#8D000000" Offset="0" />
                                        <GradientStop Color="#00FFFFFF" Offset="1" />
                                        <GradientStop Color="#34A0A0A0" Offset="0.228" />
                                    </LinearGradientBrush>
                                </Border.Background>
                            </Border>

                            <ScrollViewer Margin="0" x:Name="PART_ContentHost" Style="{StaticResource nuclearScrollViewer}" />

                        </Grid>
                    </Grid>
                    <ControlTemplate.Triggers>

                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsMouseOver" Value="True" />
                                <Condition Property="IsFocused" Value="False" />
                            </MultiTrigger.Conditions>
                            <MultiTrigger.ExitActions>
                                <BeginStoryboard Storyboard="{StaticResource HoverOff}" x:Name="HoverOff_BeginStoryboard" />
                            </MultiTrigger.ExitActions>
                            <MultiTrigger.EnterActions>
                                <BeginStoryboard Storyboard="{StaticResource HoverOn}" />
                            </MultiTrigger.EnterActions>
                        </MultiTrigger>
                        <Trigger Property="IsFocused" Value="True">
                            <Trigger.ExitActions>
                                <BeginStoryboard Storyboard="{StaticResource FocusedOff}" x:Name="FocusedOff_BeginStoryboard" />
                            </Trigger.ExitActions>
                            <Trigger.EnterActions>
                                <BeginStoryboard Storyboard="{StaticResource FocusedOn}" x:Name="FocusedOn_BeginStoryboard" />
                            </Trigger.EnterActions>
                        </Trigger>

                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <LinearGradientBrush x:Key="ToolBarHorizontalBackground" EndPoint="0,1" StartPoint="0,0">
        <GradientStop Color="#FFFFFF" Offset="0" />
        <GradientStop Color="#FFFBFF" Offset="0.5" />
        <GradientStop Color="#F7F7F7" Offset="1" />
    </LinearGradientBrush>
    <LinearGradientBrush x:Key="ToolBarToggleButtonHorizontalBackground" EndPoint="0,1" StartPoint="0,0">
        <GradientStop Color="#ECECEC" Offset="0" />
        <GradientStop Color="#DDDDDD" Offset="0.5" />
        <GradientStop Color="#A0A0A0" Offset="1" />
    </LinearGradientBrush>

    <SolidColorBrush x:Key="ToolBarButtonHover" Color="{StaticResource MainColor}" />
    <SolidColorBrush x:Key="ToolBarGripper" Color="#C6C3C6" />
    <Style x:Key="ToolBarHorizontalOverflowButtonStyle" TargetType="{x:Type ToggleButton}">
        <Setter Property="Background" Value="{StaticResource ToolBarToggleButtonHorizontalBackground}" />
        <Setter Property="MinHeight" Value="0" />
        <Setter Property="MinWidth" Value="0" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <ControlTemplate.Resources>
                        <Storyboard x:Key="HoverOn">
                            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="BdHover" Storyboard.TargetProperty="(UIElement.Opacity)">
                                <SplineDoubleKeyFrame KeyTime="00:00:00.1000000" Value="1" />
                            </DoubleAnimationUsingKeyFrames>
                        </Storyboard>
                        <Storyboard x:Key="HoverOff">
                            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="BdHover" Storyboard.TargetProperty="(UIElement.Opacity)">
                                <SplineDoubleKeyFrame KeyTime="00:00:00.3000000" Value="0" />
                            </DoubleAnimationUsingKeyFrames>
                        </Storyboard>
                    </ControlTemplate.Resources>
                    <Grid>

                        <Border HorizontalAlignment="Stretch" Width="Auto" CornerRadius="8,8,8,8" BorderThickness="1,1,1,1" Margin="0,1,0,1" Opacity="0.75" x:Name="Bd" BorderBrush="{StaticResource SmallOuterBorderBrush}">
                            <Grid Width="Auto" Height="Auto">
                                <Border CornerRadius="6,6,6,6" BorderThickness="2,2,2,2" Margin="0,0,-0.3,0" x:Name="BdHover" Opacity="0">
                                    <Border.BorderBrush>
                                        <SolidColorBrush Color="{StaticResource MainColor}" />
                                    </Border.BorderBrush>
                                </Border>
                                <Border CornerRadius="7,7,7,7" BorderThickness="1,1,1,1" Margin="0,0,-0.3,0" Opacity="0.5" x:Name="ButtonInBorder" BorderBrush="{StaticResource SmallInnerBorderBrush}" />
                                <Border CornerRadius="4,4,4,4" x:Name="ButtonTopWhitel" Width="Auto" Height="Auto">
                                    <Border.RenderTransform>
                                        <TransformGroup>
                                            <ScaleTransform ScaleX="1" ScaleY="1" />
                                            <SkewTransform AngleX="0" AngleY="0" />
                                            <RotateTransform Angle="0" />
                                            <TranslateTransform X="0" Y="0" />
                                        </TransformGroup>
                                    </Border.RenderTransform>
                                    <Border.Background>
                                        <RadialGradientBrush>
                                            <RadialGradientBrush.RelativeTransform>
                                                <TransformGroup>
                                                    <ScaleTransform CenterX="0.5" CenterY="0.5" ScaleX="1.465" ScaleY="1.269" />
                                                    <SkewTransform AngleX="0" AngleY="0" CenterX="0.5" CenterY="0.5" />
                                                    <RotateTransform Angle="0" CenterX="0.5" CenterY="0.5" />
                                                    <TranslateTransform X="-0.297" Y="-0.285" />
                                                </TransformGroup>
                                            </RadialGradientBrush.RelativeTransform>
                                            <GradientStop Color="#63FDFDFD" Offset="0" />
                                            <GradientStop Color="#00FFFFFF" Offset="0.789" />
                                        </RadialGradientBrush>
                                    </Border.Background>
                                </Border>
                            </Grid>
                        </Border>

                        <Canvas SnapsToDevicePixels="true" HorizontalAlignment="Right" Margin="7,2,2,2" VerticalAlignment="Bottom" Width="6" Height="7">
                            <Path Stroke="White" Data="M 1 1.5 L 6 1.5" />
                            <Path Stroke="{TemplateBinding Foreground}" Data="M 0 0.5 L 5 0.5" />
                            <Path Fill="White" Data="M 0.5 4 L 6.5 4 L 3.5 7 Z" />
                            <Path Fill="{TemplateBinding Foreground}" Data="M -0.5 3 L 5.5 3 L 2.5 6 Z" />
                        </Canvas>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter Property="Background" TargetName="Bd">
                                <Setter.Value>
                                    <SolidColorBrush Color="{StaticResource MainColor}" />
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Trigger.ExitActions>
                                <BeginStoryboard Storyboard="{StaticResource HoverOff}" x:Name="HoverOff_BeginStoryboard" />
                            </Trigger.ExitActions>
                            <Trigger.EnterActions>
                                <BeginStoryboard Storyboard="{StaticResource HoverOn}" />
                            </Trigger.EnterActions>
                        </Trigger>
                        <Trigger Property="IsKeyboardFocused" Value="true">
                            <Setter Property="Background" TargetName="Bd" Value="{StaticResource ToolBarButtonHover}" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Foreground" Value="{StaticResource ToolBarGripper}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <SolidColorBrush x:Key="ToolBarSubMenuBackground" Color="{StaticResource GrayColor}" />

    <SolidColorBrush x:Key="ToolBarMenuBorder" Color="#000000" />
    <Style x:Key="ToolBarThumbStyle" TargetType="{x:Type Thumb}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Thumb}">
                    <Border SnapsToDevicePixels="True" Background="Transparent" Padding="{TemplateBinding Padding}">
                        <Rectangle>
                            <Rectangle.Fill>
                                <DrawingBrush TileMode="Tile" Viewbox="0,0,4,4" ViewboxUnits="Absolute" Viewport="0,0,4,4" ViewportUnits="Absolute">
                                    <DrawingBrush.Drawing>
                                        <DrawingGroup>
                                            <GeometryDrawing Brush="White" Geometry="M 1 1 L 1 3 L 3 3 L 3 1 z" />
                                            <GeometryDrawing Brush="{StaticResource ToolBarGripper}" Geometry="M 0 0 L 0 2 L 2 2 L 2 0 z" />
                                        </DrawingGroup>
                                    </DrawingBrush.Drawing>
                                </DrawingBrush>
                            </Rectangle.Fill>
                        </Rectangle>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="Cursor" Value="SizeAll" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <LinearGradientBrush x:Key="ToolBarToggleButtonVerticalBackground" EndPoint="1,0" StartPoint="0,0">
        <GradientStop Color="#ECECEC" Offset="0" />
        <GradientStop Color="#DDDDDD" Offset="0.5" />
        <GradientStop Color="#A0A0A0" Offset="1" />
    </LinearGradientBrush>
    <Style x:Key="ToolBarVerticalOverflowButtonStyle" TargetType="{x:Type ToggleButton}">
        <Setter Property="Background" Value="{StaticResource ToolBarToggleButtonVerticalBackground}" />
        <Setter Property="MinHeight" Value="0" />
        <Setter Property="MinWidth" Value="0" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <Border SnapsToDevicePixels="true" x:Name="Bd" Background="{TemplateBinding Background}" CornerRadius="0,0,3,3">
                        <Canvas SnapsToDevicePixels="true" HorizontalAlignment="Right" Margin="2,7,2,2" VerticalAlignment="Bottom" Width="7" Height="6">
                            <Path Stroke="White" Data="M 1.5 1 L 1.5 6" />
                            <Path Stroke="{TemplateBinding Foreground}" Data="M 0.5 0 L 0.5 5" />
                            <Path Fill="White" Data="M 3.5 0.5 L 7 3.5 L 4 6.5 Z" />
                            <Path Fill="{TemplateBinding Foreground}" Data="M 3 -0.5 L 6 2.5 L 3 5.5 Z" />
                        </Canvas>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="Background" TargetName="Bd" Value="{StaticResource ToolBarButtonHover}" />
                        </Trigger>
                        <Trigger Property="IsKeyboardFocused" Value="true">
                            <Setter Property="Background" TargetName="Bd" Value="{StaticResource ToolBarButtonHover}" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Foreground" Value="{StaticResource ToolBarGripper}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <LinearGradientBrush x:Key="ToolBarVerticalBackground" EndPoint="1,0" StartPoint="0,0">
        <GradientStop Color="#FFFFFF" Offset="0" />
        <GradientStop Color="#FFFBFF" Offset="0.5" />
        <GradientStop Color="#F7F7F7" Offset="1" />
    </LinearGradientBrush>

    <LinearGradientBrush x:Key="ButtonNormalBackground" EndPoint="0,1" StartPoint="0,0">
        <GradientStop Color="#F3F3F3" Offset="0" />
        <GradientStop Color="#EBEBEB" Offset="0.5" />
        <GradientStop Color="#DDDDDD" Offset="0.5" />
        <GradientStop Color="#CDCDCD" Offset="1" />
    </LinearGradientBrush>
    <SolidColorBrush x:Key="ButtonNormalBorder" Color="#FF707070" />

    <BorderGapMaskConverter x:Key="BorderGapMaskConverter" />
    

    <SolidColorBrush x:Key="ListBorder" Color="#828790" />
    
    <Style x:Key="{x:Static GridView.GridViewScrollViewerStyleKey}" TargetType="{x:Type ScrollViewer}">
        <Setter Property="Focusable" Value="false" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ScrollViewer}">
                    <Grid SnapsToDevicePixels="true" Background="{TemplateBinding Background}">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*" />
                            <ColumnDefinition Width="Auto" />
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="*" />
                            <RowDefinition Height="Auto" />
                        </Grid.RowDefinitions>
                        <DockPanel Margin="{TemplateBinding Padding}">
                            <ScrollViewer Focusable="false" DockPanel.Dock="Top" HorizontalScrollBarVisibility="Hidden" VerticalScrollBarVisibility="Hidden">
                                <GridViewHeaderRowPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" Margin="2,0,2,0" AllowsColumnReorder="{Binding Path=TemplatedParent.View.AllowsColumnReorder, RelativeSource={RelativeSource TemplatedParent}}" ColumnHeaderContainerStyle="{Binding Path=TemplatedParent.View.ColumnHeaderContainerStyle, RelativeSource={RelativeSource TemplatedParent}}" ColumnHeaderContextMenu="{Binding Path=TemplatedParent.View.ColumnHeaderContextMenu, RelativeSource={RelativeSource TemplatedParent}}" ColumnHeaderTemplate="{Binding Path=TemplatedParent.View.ColumnHeaderTemplate, RelativeSource={RelativeSource TemplatedParent}}" ColumnHeaderTemplateSelector="{Binding Path=TemplatedParent.View.ColumnHeaderTemplateSelector, RelativeSource={RelativeSource TemplatedParent}}" ColumnHeaderToolTip="{Binding Path=TemplatedParent.View.ColumnHeaderToolTip, RelativeSource={RelativeSource TemplatedParent}}" Columns="{Binding Path=TemplatedParent.View.Columns, RelativeSource={RelativeSource TemplatedParent}}" />

                            </ScrollViewer>
                            <ScrollContentPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" x:Name="PART_ScrollContentPresenter" Content="{TemplateBinding Content}" ContentTemplate="{TemplateBinding ContentTemplate}" CanContentScroll="{TemplateBinding CanContentScroll}" KeyboardNavigation.DirectionalNavigation="Local" />
                        </DockPanel>
                        <ScrollBar Visibility="{TemplateBinding ComputedHorizontalScrollBarVisibility}" Cursor="Arrow" x:Name="PART_HorizontalScrollBar" Grid.Row="1" Orientation="Horizontal" ViewportSize="{TemplateBinding ViewportWidth}" Maximum="{TemplateBinding ScrollableWidth}" Minimum="0.0" Value="{Binding Path=HorizontalOffset, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" />
                        <ScrollBar Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}" Cursor="Arrow" x:Name="PART_VerticalScrollBar" Grid.Column="1" Orientation="Vertical" ViewportSize="{TemplateBinding ViewportHeight}" Maximum="{TemplateBinding ScrollableHeight}" Minimum="0.0" Value="{Binding Path=VerticalOffset, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" />
                        <DockPanel Grid.Column="1" Grid.Row="1" Background="{Binding Path=Background, ElementName=PART_VerticalScrollBar}" LastChildFill="false">
                            <Rectangle Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}" Width="1" Fill="White" DockPanel.Dock="Left" />
                            <Rectangle Visibility="{TemplateBinding ComputedHorizontalScrollBarVisibility}" Height="1" Fill="White" DockPanel.Dock="Top" />
                        </DockPanel>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ListViewItemFocusVisual">
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate>
                    <Rectangle Stroke="#8E6EA6F5" StrokeThickness="1" RadiusX="2" RadiusY="2" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="GridViewColumnHeaderGripper" TargetType="{x:Type Thumb}">
        <Setter Property="Canvas.Right" Value="-8.5" />
        <Setter Property="Width" Value="18" />
        <Setter Property="Height" Value="{Binding Path=ActualHeight, RelativeSource={RelativeSource TemplatedParent}}" />
        <Setter Property="Padding" Value="0,3,0,4" />

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Thumb}">
                    <Border Padding="{TemplateBinding Padding}">
                        <Rectangle HorizontalAlignment="Center" Width="0.5" Fill="{TemplateBinding Background}" />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="{x:Type GridViewColumnHeader}" TargetType="{x:Type GridViewColumnHeader}">
        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Setter Property="VerticalContentAlignment" Value="Center" />

        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="Padding" Value="2,0,2,0" />
        <Setter Property="Foreground">
            <Setter.Value>
                <SolidColorBrush Color="{StaticResource WhiteColor}" />
            </Setter.Value>
        </Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type GridViewColumnHeader}">
                    <ControlTemplate.Resources>
                        <Storyboard x:Key="HoverOn">
                            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="Hover" Storyboard.TargetProperty="(UIElement.Opacity)">
                                <SplineDoubleKeyFrame KeyTime="00:00:00.1000000" Value="1" />
                            </DoubleAnimationUsingKeyFrames>
                        </Storyboard>
                        <Storyboard x:Key="HoverOff">
                            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="Hover" Storyboard.TargetProperty="(UIElement.Opacity)">
                                <SplineDoubleKeyFrame KeyTime="00:00:00.3000000" Value="0" />
                            </DoubleAnimationUsingKeyFrames>
                        </Storyboard>
                        <Storyboard x:Key="PressedOn">
                            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="Pressed" Storyboard.TargetProperty="(UIElement.Opacity)">
                                <SplineDoubleKeyFrame KeyTime="00:00:00.1000000" Value="1" KeySpline="0,1,1,1" />
                            </DoubleAnimationUsingKeyFrames>
                        </Storyboard>
                        <Storyboard x:Key="PressedOff">
                            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="Pressed" Storyboard.TargetProperty="(UIElement.Opacity)">
                                <SplineDoubleKeyFrame KeyTime="00:00:00.3000000" Value="0" />
                            </DoubleAnimationUsingKeyFrames>
                        </Storyboard>
                    </ControlTemplate.Resources>
                    <Grid Margin="0,1,0,1">
                        <Grid>

                            <Border CornerRadius="4,4,4,4" x:Name="BaseLayer" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Height="Auto">
                                <Border.Background>
                                    <LinearGradientBrush EndPoint="0.5,0.969" StartPoint="0.5,0.047">
                                        <GradientStop Color="{StaticResource ControlColor}" Offset="0" />
                                        <GradientStop Color="#00FFFFFF" Offset="1" />
                                        <GradientStop Color="#00D8D8D8" Offset="0.924" />
                                    </LinearGradientBrush>
                                </Border.Background>
                            </Border>
                            <Border CornerRadius="4,4,4,4" x:Name="EdgeCurveLayer" VerticalAlignment="Stretch" Height="Auto">
                                <Border.Background>
                                    <LinearGradientBrush EndPoint="0.994,0.5" StartPoint="0.01,0.5">
                                        <GradientStop Color="#00000000" Offset="0" />
                                        <GradientStop Color="#00000000" Offset="1" />
                                        <GradientStop Color="#0C000000" Offset="0.203" />
                                        <GradientStop Color="#0C000000" Offset="0.81" />
                                        <GradientStop Color="#19000000" Offset="0.5" />
                                    </LinearGradientBrush>
                                </Border.Background>
                            </Border>
                            <Border CornerRadius="4,4,4,4" x:Name="BottomWhite" VerticalAlignment="Stretch" Height="Auto">
                                <Border.OpacityMask>
                                    <LinearGradientBrush EndPoint="0.995,0.5" StartPoint="0.01,0.5">
                                        <GradientStop Color="#00000000" Offset="0" />
                                        <GradientStop Color="#00000000" Offset="1" />
                                        <GradientStop Color="#FF000000" Offset="0.548" />
                                    </LinearGradientBrush>
                                </Border.OpacityMask>
                                <Border.Background>
                                    <LinearGradientBrush EndPoint="0.5,0.971" StartPoint="0.5,0.036">
                                        <GradientStop Color="#00000000" Offset="0" />
                                        <GradientStop Color="#19FFFFFF" Offset="1" />
                                        <GradientStop Color="#0C808080" Offset="0.49" />
                                    </LinearGradientBrush>
                                </Border.Background>
                            </Border>
                            <Border CornerRadius="4,4,4,4" x:Name="TopWhite" VerticalAlignment="Stretch" Height="Auto">
                                <Border.OpacityMask>
                                    <LinearGradientBrush EndPoint="0.991,0.5" StartPoint="0.01,0.5">
                                        <GradientStop Color="#00000000" Offset="0" />
                                        <GradientStop Color="#00060606" Offset="1" />
                                        <GradientStop Color="#66020202" Offset="0.49" />
                                    </LinearGradientBrush>
                                </Border.OpacityMask>
                                <Border.Background>
                                    <LinearGradientBrush EndPoint="0.5,0.971" StartPoint="0.5,0.029">
                                        <GradientStop Color="#99FDFDFD" Offset="0" />
                                        <GradientStop Color="#00FFFFFF" Offset="1" />
                                        <GradientStop Color="#4CFDFDFD" Offset="0.513" />
                                    </LinearGradientBrush>
                                </Border.Background>
                            </Border>
                            <Border CornerRadius="4,4,4,4" x:Name="Hover" VerticalAlignment="Stretch" Height="Auto" Background="{x:Null}" BorderThickness="1,1,1,1" Opacity="0">
                                <Border.BorderBrush>
                                    <SolidColorBrush Color="{StaticResource MainColor}" />
                                </Border.BorderBrush>
                                <Border.OpacityMask>
                                    <LinearGradientBrush EndPoint="0.991,0.5" StartPoint="0.01,0.5">
                                        <GradientStop Color="#00000000" Offset="0" />
                                        <GradientStop Color="#00060606" Offset="1" />
                                        <GradientStop Color="#66020202" Offset="0.49" />
                                    </LinearGradientBrush>
                                </Border.OpacityMask>
                            </Border>

                            <Border BorderThickness="{TemplateBinding BorderThickness}" Padding="{TemplateBinding Padding}">
                                <ContentPresenter VerticalAlignment="{TemplateBinding VerticalContentAlignment}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" RecognizesAccessKey="True" Margin="2,2,2,2" />
                            </Border>
                            <Border CornerRadius="4,4,4,4" x:Name="Pressed" VerticalAlignment="Stretch" Height="Auto" Opacity="0">
                                <Border.Background>
                                    <SolidColorBrush Color="{StaticResource BlackColor}" />
                                </Border.Background>
                                <Border.OpacityMask>
                                    <LinearGradientBrush EndPoint="0.991,0.5" StartPoint="0.01,0.5">
                                        <GradientStop Color="#00000000" Offset="0" />
                                        <GradientStop Color="#00060606" Offset="1" />
                                        <GradientStop Color="#66020202" Offset="0.49" />
                                    </LinearGradientBrush>
                                </Border.OpacityMask>
                            </Border>
                        </Grid>
                        <Canvas>
                            <Thumb x:Name="PART_HeaderGripper" Style="{StaticResource GridViewColumnHeaderGripper}" Margin="0,0,7,0" Width="Auto" HorizontalAlignment="Stretch" />
                        </Canvas>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Trigger.ExitActions>
                                <BeginStoryboard Storyboard="{StaticResource HoverOff}" x:Name="HoverOff_BeginStoryboard" />
                            </Trigger.ExitActions>
                            <Trigger.EnterActions>
                                <BeginStoryboard Storyboard="{StaticResource HoverOn}" />
                            </Trigger.EnterActions>

                        </Trigger>
                        <Trigger Property="IsPressed" Value="true">
                            <Trigger.ExitActions>
                                <BeginStoryboard Storyboard="{StaticResource PressedOff}" x:Name="PressedOff_BeginStoryboard" />
                            </Trigger.ExitActions>
                            <Trigger.EnterActions>
                                <BeginStoryboard Storyboard="{StaticResource PressedOn}" x:Name="PressedOn_BeginStoryboard" />
                            </Trigger.EnterActions>

                        </Trigger>
                        <Trigger Property="Height" Value="Auto">
                            <Setter Property="MinHeight" Value="20" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Foreground" Value="{StaticResource {x:Static SystemColors.GrayTextBrushKey}}" />
                        </Trigger>
                        <Trigger Property="Role" Value="Padding">
                            <Setter TargetName="PART_HeaderGripper" Property="Visibility" Value="Collapsed" />
                        </Trigger>
                        <Trigger Property="Role" Value="Floating">
                            <Setter TargetName="PART_HeaderGripper" Property="Visibility" Value="Collapsed" />
                            <Setter Property="Background" Value="Yellow" />
                            <Setter Property="Foreground" Value="SkyBlue" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>


    <ItemsPanelTemplate x:Key="ItemsTemplate">
        <VirtualizingStackPanel/>
    </ItemsPanelTemplate>

    <LinearGradientBrush x:Key="DarkBrush" StartPoint="0,0" EndPoint="0,1">
        <GradientBrush.GradientStops>
            <GradientStopCollection>
                <GradientStop Color="#FF474444" Offset="0.0"/>
                <GradientStop Color="#FF000000" Offset="1.0"/>
            </GradientStopCollection>
        </GradientBrush.GradientStops>
    </LinearGradientBrush>

    <SolidColorBrush x:Key="ComboBackgroundBrush" Color="#FFF" />

    <LinearGradientBrush x:Key="HorizontalNormalBorderBrush" StartPoint="0,0" EndPoint="1,0">
        <GradientBrush.GradientStops>
            <GradientStopCollection>
                <GradientStop Color="#CCC" Offset="0.0"/>
                <GradientStop Color="#444" Offset="1.0"/>
            </GradientStopCollection>
        </GradientBrush.GradientStops>
    </LinearGradientBrush>

    <Style x:Key="TBStyle" TargetType="{x:Type TextBox}">
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="OverridesDefaultStyle" Value="True"/>
        <Setter Property="Foreground" Value="{StaticResource Foreground}"/>
        <Setter Property="KeyboardNavigation.TabNavigation" Value="None"/>
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="MinWidth" Value="100"/>
        <Setter Property="MinHeight" Value="18"/>
        <Setter Property="AllowDrop" Value="true"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TextBoxBase}">
                    <Grid>
                        <Border x:Name="Bg" Background="{StaticResource SunkenBackground}" CornerRadius="2" />
                        <Border x:Name="Hl" BorderBrush="{StaticResource Highlight}" BorderThickness="0,0,0,1" CornerRadius="2" />
                        <Border x:Name="Sh" BorderBrush="{StaticResource Shadow}" BorderThickness="0,1,0,0" CornerRadius="2" />
                        <ScrollViewer Margin="0,2,0,0" x:Name="PART_ContentHost" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Foreground" Value="{StaticResource DisabledForeground}"/>
                            <Setter Property="Opacity" Value="0.75"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="Office2007" TargetType="{x:Type MenuItem}">
        <Style.Triggers>
            <Trigger Property="MenuItem.IsMouseOver" Value="true">
                <Setter Property = "Foreground" Value="Black"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <ControlTemplate x:Key="ContextTemplate" TargetType="{x:Type ContextMenu}">
        <Themes:SystemDropShadowChrome SnapsToDevicePixels="True" Color="#00FFFFFF">
            <Border BorderBrush="#868686" CornerRadius="3,3,3,3" BorderThickness="1" Background="#FAFAFA">
                <Grid>
                    <Rectangle Margin="1,1,1,1" Width="25" RadiusY="2" HorizontalAlignment="Left" Fill="#E9EEEE" RadiusX="2" />
                    <Rectangle Margin="26,1,0,1" Width="1" HorizontalAlignment="Left" Fill="#C5C5C5" />
                    <Rectangle Margin="27,1,0,1" Width="1" HorizontalAlignment="Left" Fill="#FAFAFA" />
                    <ScrollViewer Margin="1,0,1,0" Style="{StaticResource {ComponentResourceKey ResourceId=MenuScrollViewer, TypeInTargetAssembly=FrameworkElement}}" CanContentScroll="True" Grid.ColumnSpan="2">
                        <ItemsPresenter KeyboardNavigation.DirectionalNavigation="Cycle" />
                    </ScrollViewer>
                </Grid>
            </Border>
        </Themes:SystemDropShadowChrome>
    </ControlTemplate>

    <ContextMenu x:Key="DesignerCanvasContextMenu" Template="{StaticResource ContextTemplate}">
        <MenuItem Header="Paste" Command="{x:Static Commands:InspireCommands.PasteCommand}"  Style="{StaticResource Office2007}">
            <MenuItem.Icon>
                <Image Source="Resources\Images\Paste16.png" Width="16"/>
            </MenuItem.Icon>
        </MenuItem>
        <MenuItem Header="Select All" Command="{x:Static Commands:InspireCommands.SelectAllCommand}" Style="{StaticResource Office2007}"/>
    </ContextMenu>

    <Style x:Key="FontComboBox" TargetType="ComboBox">
        <Setter Property="SnapsToDevicePixels" Value="true"/>
        <Setter Property="OverridesDefaultStyle" Value="true"/>
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto"/>
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
        <Setter Property="ScrollViewer.CanContentScroll" Value="true"/>
        <Setter Property="MinWidth" Value="25"/>
        <Setter Property="MinHeight" Value="25"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ComboBox">
                    <Grid>
                        <ToggleButton 
            Name="ToggleButton" 
            Template="{StaticResource ComboBoxToggleButton}" 
            Grid.Column="2" 
            Focusable="false"            
            IsChecked="{Binding Path=IsDropDownOpen,Mode=TwoWay,RelativeSource={RelativeSource TemplatedParent}}"
            ClickMode="Press">
                        </ToggleButton>
                        <ContentPresenter
            Name="ContentSite"
            IsHitTestVisible="False" 
            Content="{TemplateBinding SelectionBoxItem}"
            ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}"
            ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}"
            Margin="3,3,23,3"
            VerticalAlignment="Center"
            HorizontalAlignment="Left" />
                        <TextBox x:Name="PART_EditableTextBox"
            Style="{x:Null}" 
            Template="{StaticResource ComboBoxTextBox}"
            Foreground="{StaticResource Foreground}"
            HorizontalAlignment="Left" 
            VerticalAlignment="Center" 
            Margin="3,3,23,3"
            Focusable="True" 
            Background="Transparent"
            Visibility="Hidden"
            IsReadOnly="{TemplateBinding IsReadOnly}"/>
                        <Popup 
            Name="Popup"
            Placement="Bottom"
            IsOpen="{TemplateBinding IsDropDownOpen}"
            AllowsTransparency="True" 
            Focusable="False"
            PopupAnimation="Slide">
                            <Grid 
              Name="DropDown"
              SnapsToDevicePixels="True"                
              MinWidth="{TemplateBinding ActualWidth}"
              MaxHeight="{TemplateBinding MaxDropDownHeight}">
                                <Border 
                x:Name="DropDownBorder"
                Background="{StaticResource WindowBackgroundBrush}"
                BorderThickness="1"
                BorderBrush="{StaticResource SolidBorderBrush}"/>
                                <ScrollViewer Margin="4,6,4,6" SnapsToDevicePixels="True">
                                    <VirtualizingStackPanel IsItemsHost="True" KeyboardNavigation.DirectionalNavigation="Contained" />
                                </ScrollViewer>
                            </Grid>
                        </Popup>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="HasItems" Value="false">
                            <Setter TargetName="DropDownBorder" Property="MinHeight" Value="95"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Foreground" Value="{StaticResource DisabledForegroundBrush}"/>
                        </Trigger>
                        <Trigger Property="IsGrouping" Value="true">
                            <Setter Property="ScrollViewer.CanContentScroll" Value="false"/>
                        </Trigger>
                        <Trigger SourceName="Popup" Property="Popup.AllowsTransparency" Value="true">
                            <Setter TargetName="DropDownBorder" Property="CornerRadius" Value="4"/>
                            <Setter TargetName="DropDownBorder" Property="Margin" Value="0,2,0,0"/>
                        </Trigger>
                        <Trigger Property="IsEditable"
               Value="true">
                            <Setter Property="IsTabStop" Value="false"/>
                            <Setter TargetName="PART_EditableTextBox" Property="Visibility"    Value="Visible"/>
                            <Setter TargetName="ContentSite" Property="Visibility" Value="Hidden"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
        </Style.Triggers>
    </Style>

    <Style x:Key="SlideTransitionButtonStyle" TargetType="{x:Type Button}">
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="BorderBrush" Value="Transparent"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Foreground" Value="Transparent"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border SnapsToDevicePixels="true" x:Name="Border">
                        <ContentPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" RecognizesAccessKey="True"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter TargetName="Border" Property="Background" Value="{StaticResource DarkBrush}" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="true">
                            <Setter TargetName="Border" Property="Background" Value="{StaticResource PressedBrush}" />
                            <Setter TargetName="Border" Property="BorderBrush" Value="{StaticResource PressedBorderBrush}" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter TargetName="Border" Property="Background" Value="{StaticResource DisabledBackgroundBrush}" />
                            <Setter TargetName="Border" Property="BorderBrush" Value="{StaticResource DisabledBorderBrush}" />
                            <Setter Property="Foreground" Value="{StaticResource DisabledForegroundBrush}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="{x:Type local:InfoTextBox}" TargetType="{x:Type local:InfoTextBox}" BasedOn="{StaticResource {x:Type TextBox}}">
        <Setter Property="Foreground" Value="{StaticResource Foreground}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type local:InfoTextBox}">
                    <ControlTemplate.Resources>
                        <Storyboard x:Key="enterGotFocus" >
                            <DoubleAnimation Duration="0:0:0.2" To=".33"
			  	Storyboard.TargetProperty="Opacity" Storyboard.TargetName="Message"/>
                        </Storyboard>
                        <Storyboard x:Key="exitGotFocus" >
                            <DoubleAnimation Duration="0:0:0.4"
			  	Storyboard.TargetProperty="Opacity" Storyboard.TargetName="Message"/>
                        </Storyboard>

                        <Storyboard x:Key="enterHasText" >
                            <DoubleAnimation Duration="0:0:0.2" From=".33" To="0"
			  	Storyboard.TargetProperty="Opacity" Storyboard.TargetName="Message"/>
                        </Storyboard>
                        <Storyboard x:Key="exitHasText" >
                            <DoubleAnimation Duration="0:0:0.4"
			  	Storyboard.TargetProperty="Opacity" Storyboard.TargetName="Message"/>
                        </Storyboard>

                    </ControlTemplate.Resources>
                    <Border Name="Bd"
							Background="{StaticResource SunkenBackground}" CornerRadius="2">
                        <Grid>
                            <Border x:Name="Hl" BorderBrush="{StaticResource Highlight}" BorderThickness="0,0,0,1" CornerRadius="2" />
                            <Border x:Name="Sh" BorderBrush="{StaticResource Shadow}" BorderThickness="0,1,0,0" CornerRadius="2" />
                            <Decorator x:Name="PART_ContentHost" VerticalAlignment="Center" Margin="3"/>
                            <TextBlock Text="{TemplateBinding TextBoxInfo}" x:Name="Message"
								Foreground="{StaticResource Foreground}" IsHitTestVisible="False"
								FontStyle="Italic" Opacity="0.67" HorizontalAlignment="Left" VerticalAlignment="Center"
								Margin="6,0,0,0"/>
                        </Grid>
                    </Border>

                    <ControlTemplate.Triggers>


                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="HasText" Value="False"/>
                                <Condition Property="IsFocused" Value="True"/>

                            </MultiTrigger.Conditions>
                            <MultiTrigger.EnterActions>
                                <BeginStoryboard Storyboard="{StaticResource enterGotFocus}"/>
                            </MultiTrigger.EnterActions>
                            <MultiTrigger.ExitActions>
                                <BeginStoryboard Storyboard="{StaticResource exitGotFocus}"/>
                            </MultiTrigger.ExitActions>
                        </MultiTrigger>

                        <Trigger Property="HasText" Value="True">
                            <Trigger.EnterActions>
                                <BeginStoryboard Storyboard="{StaticResource enterHasText}"/>
                            </Trigger.EnterActions>
                            <Trigger.ExitActions>
                                <BeginStoryboard Storyboard="{StaticResource exitHasText}"/>
                            </Trigger.ExitActions>
                        </Trigger>

                        <Trigger Property="IsEnabled"
								 Value="false">
                            <Setter TargetName="Bd"
									Property="Background"
									Value="{StaticResource {x:Static SystemColors.ControlBrushKey}}"/>
                            <Setter Property="Foreground"
									Value="{StaticResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                        </Trigger>
                        <Trigger Property="Width"
								 Value="Auto">
                            <Setter Property="MinWidth"
									Value="100"/>
                        </Trigger>
                        <Trigger Property="Height"
								 Value="Auto">
                            <Setter Property="MinHeight"
									Value="20"/>
                        </Trigger>

                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>


    <!-- Non-Keyed -->
    
    <Style TargetType="{x:Type GroupBox}">
        <Setter Property="BorderBrush" Value="#D5DFE5" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type GroupBox}">
                    <Grid SnapsToDevicePixels="true">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="6" />
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition Width="*" />
                            <ColumnDefinition Width="6" />
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="*" />
                            <RowDefinition Height="6" />
                        </Grid.RowDefinitions>
                        <Border Grid.ColumnSpan="4" Grid.RowSpan="4" Background="{x:Null}" CornerRadius="4,4,4,4" BorderThickness="1,1,1,1" Effect="{StaticResource EffectBlur}" >
                            <Border.BorderBrush>
                                <SolidColorBrush Color="{StaticResource BlackColor}"/>
                            </Border.BorderBrush>
                        </Border>
                        <Border Grid.ColumnSpan="4" Grid.Row="1" Grid.RowSpan="3" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="4">

                            <Border.OpacityMask>
                                <MultiBinding Converter="{StaticResource BorderGapMaskConverter}" ConverterParameter="7">
                                    <Binding Path="ActualWidth" ElementName="Header" />
                                    <Binding Path="ActualWidth" RelativeSource="{RelativeSource Self}" />
                                    <Binding Path="ActualHeight" RelativeSource="{RelativeSource Self}" />
                                </MultiBinding>
                            </Border.OpacityMask>
                            <Border BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="3">
                                <Border.BorderBrush>
                                    <SolidColorBrush Color="{StaticResource ControlColor}" />
                                </Border.BorderBrush>
                                <Border BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="2">
                                    <Border.BorderBrush>
                                        <SolidColorBrush Color="{StaticResource ControlColor}" />
                                    </Border.BorderBrush>
                                </Border>
                            </Border>
                        </Border>
                        <Border Grid.Column="0" Grid.ColumnSpan="4" Grid.Row="1" Grid.RowSpan="3" Background="{TemplateBinding Background}" BorderBrush="Transparent" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="4" />
                        <Border CornerRadius="4,4,4,4" x:Name="BaseLayer" Grid.ColumnSpan="4" Grid.RowSpan="2">
                            <Border.Background>
                                <SolidColorBrush Color="{StaticResource ControlColor}" />
                            </Border.Background>
                        </Border>
                        <Border CornerRadius="4,4,4,4" x:Name="EdgeCurveLayer" Grid.ColumnSpan="4" Grid.RowSpan="2">
                            <Border.Background>
                                <LinearGradientBrush EndPoint="0.994,0.5" StartPoint="0.01,0.5">
                                    <GradientStop Color="#00000000" Offset="0" />
                                    <GradientStop Color="#00000000" Offset="1" />
                                    <GradientStop Color="#19000000" Offset="0.203" />
                                    <GradientStop Color="#19000000" Offset="0.81" />
                                    <GradientStop Color="#33000000" Offset="0.5" />
                                </LinearGradientBrush>
                            </Border.Background>
                        </Border>
                        <Border CornerRadius="4,4,4,4" x:Name="BottomWhite" Grid.ColumnSpan="4" Grid.RowSpan="2">
                            <Border.OpacityMask>
                                <LinearGradientBrush EndPoint="0.995,0.5" StartPoint="0.01,0.5">
                                    <GradientStop Color="#00000000" Offset="0" />
                                    <GradientStop Color="#00000000" Offset="1" />
                                    <GradientStop Color="#FF000000" Offset="0.548" />
                                </LinearGradientBrush>
                            </Border.OpacityMask>
                            <Border.Background>
                                <LinearGradientBrush EndPoint="0.5,0.971" StartPoint="0.5,0.036">
                                    <GradientStop Color="#00000000" Offset="0" />
                                    <GradientStop Color="#19FFFFFF" Offset="1" />
                                    <GradientStop Color="#0C808080" Offset="0.49" />
                                </LinearGradientBrush>
                            </Border.Background>
                        </Border>
                        <Border CornerRadius="4,4,4,4" x:Name="TopWhite" Grid.ColumnSpan="4" Grid.RowSpan="2">
                            <Border.OpacityMask>
                                <LinearGradientBrush EndPoint="0.991,0.5" StartPoint="0.01,0.5">
                                    <GradientStop Color="#00000000" Offset="0" />
                                    <GradientStop Color="#00060606" Offset="1" />
                                    <GradientStop Color="#72020202" Offset="0.49" />
                                </LinearGradientBrush>
                            </Border.OpacityMask>
                            <Border.Background>
                                <LinearGradientBrush EndPoint="0.5,0.971" StartPoint="0.5,0.029">
                                    <GradientStop Color="#99FDFDFD" Offset="0" />
                                    <GradientStop Color="#00FFFFFF" Offset="1" />
                                    <GradientStop Color="#4CFDFDFD" Offset="0.513" />
                                </LinearGradientBrush>
                            </Border.Background>
                        </Border>
                        <Border x:Name="Header" Grid.Column="1" Grid.Row="0" Grid.RowSpan="2" Padding="3,1,3,0">
                            <ContentPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" ContentSource="Header" RecognizesAccessKey="True" Margin="0,4,0,4" />
                        </Border>

                        <ContentPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" Margin="{TemplateBinding Padding}" Grid.Column="1" Grid.ColumnSpan="2" Grid.Row="2" />
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="Foreground">
            <Setter.Value>
                <SolidColorBrush Color="{StaticResource WhiteColor}" />
            </Setter.Value>
        </Setter>
    </Style>
    
    <Style TargetType="{x:Type CheckBox}">
        <Setter Property="SnapsToDevicePixels" Value="true" />
        <Setter Property="FocusVisualStyle" Value="{StaticResource CheckBoxFocusVisual}" />
        <Setter Property="Background" Value="{StaticResource NormalBrush}" />
        <Setter Property="BorderBrush" Value="{StaticResource NormalBorderBrush}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type CheckBox}">

                    <ControlTemplate.Resources>
                        <Storyboard x:Key="HoverOn">
                            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="contentPresenter" Storyboard.TargetProperty="(UIElement.Effect).(DropShadowEffect.Opacity)">
                                <SplineDoubleKeyFrame KeyTime="00:00:00.1000000" Value="1" />
                            </DoubleAnimationUsingKeyFrames>
                            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="Hover" Storyboard.TargetProperty="(UIElement.Opacity)">
                                <SplineDoubleKeyFrame KeyTime="00:00:00.1000000" Value="0.8" />
                            </DoubleAnimationUsingKeyFrames>
                        </Storyboard>
                        <Storyboard x:Key="HoverOff">
                            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="contentPresenter" Storyboard.TargetProperty="(UIElement.Effect).(DropShadowEffect.Opacity)">
                                <SplineDoubleKeyFrame KeyTime="00:00:00.3000000" Value="0" />
                            </DoubleAnimationUsingKeyFrames>
                            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="Hover" Storyboard.TargetProperty="(UIElement.Opacity)">
                                <SplineDoubleKeyFrame KeyTime="00:00:00.3000000" Value="0" />
                            </DoubleAnimationUsingKeyFrames>
                        </Storyboard>
                        <Storyboard x:Key="PressedOn" />
                        <Storyboard x:Key="PressedOff" />
                        <Storyboard x:Key="CheckedOn">
                            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="path" Storyboard.TargetProperty="(FrameworkElement.Width)">
                                <SplineDoubleKeyFrame KeyTime="00:00:00.1000000" Value="11" />
                            </DoubleAnimationUsingKeyFrames>
                            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="path" Storyboard.TargetProperty="(FrameworkElement.Height)">
                                <SplineDoubleKeyFrame KeyTime="00:00:00.1000000" Value="10" />
                            </DoubleAnimationUsingKeyFrames>
                        </Storyboard>
                        <Storyboard x:Key="CheckedOff">
                            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="path" Storyboard.TargetProperty="(FrameworkElement.Width)">
                                <SplineDoubleKeyFrame KeyTime="00:00:00.2000000" Value="0" />
                            </DoubleAnimationUsingKeyFrames>
                            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="path" Storyboard.TargetProperty="(FrameworkElement.Height)">
                                <SplineDoubleKeyFrame KeyTime="00:00:00.2000000" Value="0" />
                            </DoubleAnimationUsingKeyFrames>
                        </Storyboard>
                        <Storyboard x:Key="ThreeStateOn">
                            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="ThreeState" Storyboard.TargetProperty="(FrameworkElement.Width)">
                                <SplineDoubleKeyFrame KeyTime="00:00:00.1000000" Value="9" />
                            </DoubleAnimationUsingKeyFrames>
                            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="ThreeState" Storyboard.TargetProperty="(FrameworkElement.Height)">
                                <SplineDoubleKeyFrame KeyTime="00:00:00.1000000" Value="9" />
                            </DoubleAnimationUsingKeyFrames>
                            <ObjectAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="path" Storyboard.TargetProperty="(UIElement.Visibility)">
                                <DiscreteObjectKeyFrame KeyTime="00:00:00.1000000" Value="{x:Static Visibility.Hidden}" />
                            </ObjectAnimationUsingKeyFrames>
                        </Storyboard>
                        <Storyboard x:Key="ThreeStateOff">
                            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="ThreeState" Storyboard.TargetProperty="(FrameworkElement.Width)">
                                <SplineDoubleKeyFrame KeyTime="00:00:00.3000000" Value="0" />
                            </DoubleAnimationUsingKeyFrames>
                            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="ThreeState" Storyboard.TargetProperty="(FrameworkElement.Height)">
                                <SplineDoubleKeyFrame KeyTime="00:00:00.3000000" Value="0" />
                            </DoubleAnimationUsingKeyFrames>
                            <ObjectAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="path" Storyboard.TargetProperty="(UIElement.Visibility)">
                                <DiscreteObjectKeyFrame KeyTime="00:00:00.3000000" Value="{x:Static Visibility.Visible}" />
                            </ObjectAnimationUsingKeyFrames>
                        </Storyboard>
                    </ControlTemplate.Resources>

                    <BulletDecorator Background="Transparent">
                        <BulletDecorator.Bullet>
                            <Grid Width="13" Height="13">
                                <Border x:Name="Shadow" Margin="0,0,-2,-2" Opacity="0.25" Effect="{StaticResource EffectBlur}">

                                    <Border.Background>
                                        <SolidColorBrush Color="{StaticResource BlackColor}" />
                                    </Border.Background>
                                </Border>
                                <Border x:Name="MainBorder" BorderThickness="2,2,2,2" CornerRadius="2,2,2,2" BorderBrush="#72000000">
                                    <Border.Background>
                                        <SolidColorBrush Color="{StaticResource ControlColor}" />
                                    </Border.Background>
                                    <Rectangle Visibility="Visible" Fill="{StaticResource GlyphBrush}" x:Name="ThreeState" Margin="1,1,1,1" Width="0" Height="0" />
                                </Border>
                                <Border x:Name="Shade" CornerRadius="2,2,2,2" Opacity="0.1" Margin="1,1,1,1">
                                    <Border.Background>
                                        <LinearGradientBrush EndPoint="1.292,0.5" StartPoint="-0.545,0.5">
                                            <GradientStop Color="#FF000000" Offset="1" />
                                            <GradientStop Color="#FFFFFFFF" Offset="0.006" />
                                        </LinearGradientBrush>
                                    </Border.Background>
                                </Border>
                                <Path Stretch="Fill" Stroke="{StaticResource GlyphBrush}" StrokeThickness="2" x:Name="path" Width="11" Data="M1.0924787,5.372821 L3.1785986,10.519821 10.528543,2.5198207" Margin="1.577,0.134,-0.013,2.866" Height="10" />
                                <Border Opacity="0" x:Name="Hover" BorderThickness="2,2,2,2" CornerRadius="2,2,2,2">
                                    <Border.BorderBrush>
                                        <SolidColorBrush Color="{StaticResource MainColor}" />
                                    </Border.BorderBrush>
                                </Border>
                            </Grid>
                        </BulletDecorator.Bullet>
                        <ContentPresenter RecognizesAccessKey="True" Margin="5,0,0,0" x:Name="contentPresenter">
                            <ContentPresenter.Effect>
                                <DropShadowEffect Color="{StaticResource MainColor}" Opacity="0" ShadowDepth="0"/>
                            </ContentPresenter.Effect>
                        </ContentPresenter>
                    </BulletDecorator>

                    <ControlTemplate.Triggers>
                        <MultiTrigger>
                            <MultiTrigger.ExitActions>
                                <BeginStoryboard Storyboard="{StaticResource ThreeStateOff}" x:Name="ThreeStateOff_BeginStoryboard" />
                            </MultiTrigger.ExitActions>
                            <MultiTrigger.EnterActions>
                                <BeginStoryboard Storyboard="{StaticResource ThreeStateOn}" x:Name="ThreeStateOn_BeginStoryboard" />
                            </MultiTrigger.EnterActions>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsThreeState" Value="True" />
                                <Condition Property="IsChecked" Value="True" />
                            </MultiTrigger.Conditions>

                        </MultiTrigger>

                        <Trigger Property="IsChecked" Value="false">
                            <Trigger.ExitActions>
                                <BeginStoryboard Storyboard="{StaticResource CheckedOn}" x:Name="CheckedOn_BeginStoryboard" />
                            </Trigger.ExitActions>
                            <Trigger.EnterActions>
                                <BeginStoryboard Storyboard="{StaticResource CheckedOff}" x:Name="CheckedOff_BeginStoryboard" />
                            </Trigger.EnterActions>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Trigger.ExitActions>
                                <BeginStoryboard x:Name="HoverOff_BeginStoryboard" Storyboard="{StaticResource HoverOff}" />
                            </Trigger.ExitActions>
                            <Trigger.EnterActions>
                                <BeginStoryboard Storyboard="{StaticResource HoverOn}" />
                            </Trigger.EnterActions>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="true">
                            <Trigger.ExitActions>
                                <BeginStoryboard x:Name="PressedOff_BeginStoryboard" Storyboard="{StaticResource PressedOff}" />
                            </Trigger.ExitActions>
                            <Trigger.EnterActions>
                                <BeginStoryboard x:Name="PressedOn_BeginStoryboard" Storyboard="{StaticResource PressedOn}" />
                            </Trigger.EnterActions>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Background" Value="{StaticResource DisabledBackgroundBrush}" TargetName="MainBorder" />
                            <Setter Property="BorderBrush" Value="{StaticResource DisabledBorderBrush}" TargetName="MainBorder" />
                        </Trigger>
                    </ControlTemplate.Triggers>

                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="Foreground">
            <Setter.Value>
                <SolidColorBrush Color="{StaticResource BlackColor}" />
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type RadioButton}">
        <Setter Property="SnapsToDevicePixels" Value="true" />
        <Setter Property="FocusVisualStyle" Value="{StaticResource RadioButtonFocusVisual}" />
        <Setter Property="Background" Value="{StaticResource NormalBrush}" />
        <Setter Property="BorderBrush" Value="{StaticResource NormalBorderBrush}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RadioButton}">
                    <ControlTemplate.Resources>
                        <Storyboard x:Key="HoverOn">
                            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="contentPresenter" Storyboard.TargetProperty="(UIElement.Effect).(DropShadowEffect.Opacity)">
                                <SplineDoubleKeyFrame KeyTime="00:00:00.1000000" Value="0.8" />
                            </DoubleAnimationUsingKeyFrames>
                            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="Hover" Storyboard.TargetProperty="(UIElement.Opacity)">
                                <SplineDoubleKeyFrame KeyTime="00:00:00.1000000" Value="0.8" />
                            </DoubleAnimationUsingKeyFrames>
                        </Storyboard>
                        <Storyboard x:Key="HoverOff">
                            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="Hover" Storyboard.TargetProperty="(UIElement.Opacity)">
                                <SplineDoubleKeyFrame KeyTime="00:00:00.3000000" Value="0" />
                            </DoubleAnimationUsingKeyFrames>
                            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="contentPresenter" Storyboard.TargetProperty="(UIElement.Effect).(DropShadowEffect.Opacity)">
                                <SplineDoubleKeyFrame KeyTime="00:00:00.3000000" Value="0" />
                            </DoubleAnimationUsingKeyFrames>
                        </Storyboard>
                        <Storyboard x:Key="CheckedOn">
                            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="CheckMark" Storyboard.TargetProperty="(FrameworkElement.Width)">
                                <SplineDoubleKeyFrame KeyTime="00:00:00.1000000" Value="8" />
                            </DoubleAnimationUsingKeyFrames>
                            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="CheckMark" Storyboard.TargetProperty="(FrameworkElement.Height)">
                                <SplineDoubleKeyFrame KeyTime="00:00:00.1000000" Value="8" />
                            </DoubleAnimationUsingKeyFrames>
                        </Storyboard>
                        <Storyboard x:Key="CheckedOff">
                            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="CheckMark" Storyboard.TargetProperty="(FrameworkElement.Width)">
                                <SplineDoubleKeyFrame KeyTime="00:00:00.3000000" Value="0" />
                            </DoubleAnimationUsingKeyFrames>
                            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="CheckMark" Storyboard.TargetProperty="(FrameworkElement.Height)">
                                <SplineDoubleKeyFrame KeyTime="00:00:00.3000000" Value="0" />
                            </DoubleAnimationUsingKeyFrames>
                        </Storyboard>
                    </ControlTemplate.Resources>

                    <BulletDecorator Background="Transparent">
                        <BulletDecorator.Bullet>
                            <Grid Width="16" Height="16">
                                <Ellipse x:Name="Shadow" StrokeThickness="2" Stroke="{x:Null}" Opacity="0.25" Effect="{StaticResource EffectBlur}">

                                    <Ellipse.Fill>
                                        <SolidColorBrush Color="{StaticResource BlackColor}" />
                                    </Ellipse.Fill>
                                </Ellipse>
                                <Ellipse x:Name="MainLayer" StrokeThickness="2" Stroke="#72000000">
                                    <Ellipse.Fill>
                                        <SolidColorBrush Color="{StaticResource ControlColor}" />
                                    </Ellipse.Fill>
                                </Ellipse>
                                <Ellipse x:Name="Shade" StrokeThickness="2" Stroke="{x:Null}" Opacity="0.1">
                                    <Ellipse.Fill>
                                        <LinearGradientBrush EndPoint="1.343,0.5" StartPoint="-0.399,0.5">
                                            <GradientStop Color="#FF000000" Offset="1" />
                                            <GradientStop Color="#FFFFFFFF" Offset="0.005" />
                                        </LinearGradientBrush>
                                    </Ellipse.Fill>
                                </Ellipse>
                                <Ellipse x:Name="Hover" StrokeThickness="2" Fill="{x:Null}" Opacity="0">
                                    <Ellipse.Stroke>
                                        <SolidColorBrush Color="{StaticResource MainColor}" />
                                    </Ellipse.Stroke>
                                </Ellipse>
                                <Ellipse Margin="4" x:Name="CheckMark" Fill="{StaticResource GlyphBrush}" HorizontalAlignment="Center" VerticalAlignment="Center" Width="8" Height="8" />
                            </Grid>
                        </BulletDecorator.Bullet>
                        <ContentPresenter RecognizesAccessKey="True" Margin="5,0,0,0" x:Name="contentPresenter">
                            <ContentPresenter.Effect>
                                <DropShadowEffect Color="{StaticResource MainColor}" Opacity="0" ShadowDepth="0"/>
                            </ContentPresenter.Effect>
                        </ContentPresenter>
                    </BulletDecorator>

                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked" Value="false">
                            <Trigger.ExitActions>
                                <BeginStoryboard Storyboard="{StaticResource CheckedOn}" x:Name="CheckedOn_BeginStoryboard" />
                            </Trigger.ExitActions>
                            <Trigger.EnterActions>
                                <BeginStoryboard Storyboard="{StaticResource CheckedOff}" x:Name="CheckedOff_BeginStoryboard" />
                            </Trigger.EnterActions>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Trigger.ExitActions>
                                <BeginStoryboard Storyboard="{StaticResource HoverOff}" x:Name="HoverOff_BeginStoryboard" />
                            </Trigger.ExitActions>
                            <Trigger.EnterActions>
                                <BeginStoryboard Storyboard="{StaticResource HoverOn}" />
                            </Trigger.EnterActions>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="true" />
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Fill" Value="{StaticResource DisabledBackgroundBrush}" TargetName="MainLayer" />
                            <Setter Property="Stroke" Value="#40000000" TargetName="MainLayer" />
                            <Setter Property="Foreground" Value="#80000000" />
                        </Trigger>

                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type ScrollBar}">
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="OverridesDefaultStyle" Value="true"/>
        <Setter Property="Template" Value="{StaticResource VerticalScrollBar}"/>
        <Style.Triggers>
            <Trigger Property="Orientation" Value="Horizontal">
                <Setter Property="Template" Value="{StaticResource HorizontalScrollBar}"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style TargetType="{x:Type ListBox}">
        <Setter Property="SnapsToDevicePixels" Value="true" />
        <Setter Property="Background" Value="{StaticResource WindowBackgroundBrush}" />
        <Setter Property="BorderBrush" Value="{StaticResource SolidBorderBrush}" />
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto" />
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto" />
        <Setter Property="ScrollViewer.CanContentScroll" Value="True" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ListBox}">
                    <Grid>
                        <Border x:Name="Border" CornerRadius="4,4,4,4" BorderThickness="1,1,1,1" Margin="0,0,0,0" Background="{StaticResource ListBackgroundBrush}" Effect="{StaticResource EffectBlur}">
                            <Border.BorderBrush>
                                <SolidColorBrush Color="{StaticResource BlackColor}" />
                            </Border.BorderBrush>
                        </Border>
                        <ScrollViewer Margin="0,8,0,8" Style="{StaticResource nuclearScrollViewer}" Focusable="false">

                            <ItemsPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                        </ScrollViewer>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Background" Value="{StaticResource DisabledBackgroundBrush}" TargetName="Border" />
                            <Setter Property="BorderBrush" Value="{StaticResource DisabledBorderBrush}" TargetName="Border" />
                        </Trigger>
                        <Trigger Property="IsGrouping" Value="true">
                            <Setter Property="ScrollViewer.CanContentScroll" Value="false" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style d:IsControlPart="True" TargetType="{x:Type ListBoxItem}">
        <Setter Property="SnapsToDevicePixels" Value="true" />
        <Setter Property="OverridesDefaultStyle" Value="true" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ListBoxItem}">
                    <ControlTemplate.Resources>
                        <Storyboard x:Key="HoverOn">
                            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="contentPresenterHover" Storyboard.TargetProperty="(UIElement.Opacity)">
                                <SplineDoubleKeyFrame KeyTime="00:00:00.2000000" Value="1" />
                            </DoubleAnimationUsingKeyFrames>
                            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="contentPresenterHover" Storyboard.TargetProperty="(UIElement.Effect).(DropShadowEffect.Opacity)">
                                <SplineDoubleKeyFrame KeyTime="00:00:00.2000000" Value="1" />
                            </DoubleAnimationUsingKeyFrames>
                        </Storyboard>
                        <Storyboard x:Key="HoverOff">
                            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="contentPresenterHover" Storyboard.TargetProperty="(UIElement.Opacity)">
                                <SplineDoubleKeyFrame KeyTime="00:00:00.3000000" Value="0" />
                            </DoubleAnimationUsingKeyFrames>
                        </Storyboard>
                        <Storyboard x:Key="SelectedOn">
                            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="contentPresenter" Storyboard.TargetProperty="(UIElement.Effect).(DropShadowEffect.Opacity)">
                                <SplineDoubleKeyFrame KeyTime="00:00:00.1000000" Value="1" />
                            </DoubleAnimationUsingKeyFrames>
                            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="Selected" Storyboard.TargetProperty="(UIElement.Opacity)">
                                <SplineDoubleKeyFrame KeyTime="00:00:00.1000000" Value="1" />
                            </DoubleAnimationUsingKeyFrames>
                        </Storyboard>
                        <Storyboard x:Key="SelectedOff">
                            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="Selected" Storyboard.TargetProperty="(UIElement.Opacity)">
                                <SplineDoubleKeyFrame KeyTime="00:00:00.3000000" Value="0" />
                            </DoubleAnimationUsingKeyFrames>
                            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="contentPresenter" Storyboard.TargetProperty="(UIElement.Effect).(DropShadowEffect.Opacity)">
                                <SplineDoubleKeyFrame KeyTime="00:00:00.3000000" Value="0" />
                            </DoubleAnimationUsingKeyFrames>
                        </Storyboard>
                        <Storyboard x:Key="HoverSelectedOn">
                            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="contentPresenterSelected" Storyboard.TargetProperty="(UIElement.Opacity)">
                                <SplineDoubleKeyFrame KeyTime="00:00:00.1000000" Value="1" />
                            </DoubleAnimationUsingKeyFrames>
                        </Storyboard>
                        <Storyboard x:Key="HoverSelectedOff">
                            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="contentPresenterSelected" Storyboard.TargetProperty="(UIElement.Opacity)">
                                <SplineDoubleKeyFrame KeyTime="00:00:00.3000000" Value="0" />
                            </DoubleAnimationUsingKeyFrames>
                        </Storyboard>
                    </ControlTemplate.Resources>
                    <Grid SnapsToDevicePixels="true" Margin="5,0,0,0">
                        <Border x:Name="Border" Background="{x:Null}" />
                        <Border x:Name="Selected" Opacity="0" Background="#4C000000" BorderThickness="1,1,1,1" CornerRadius="2,2,2,2" Visibility="Collapsed">
                            <Border.BorderBrush>
                                <SolidColorBrush Color="{StaticResource MainColor}" />
                            </Border.BorderBrush>
                            <Border BorderThickness="1,1,1,1" CornerRadius="1,1,1,1">
                                <Border.BorderBrush>
                                    <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                        <GradientStop Color="#FF000000" Offset="0" />
                                        <GradientStop Color="#FFFFFFFF" Offset="1" />
                                        <GradientStop Color="#FF616161" Offset="0.219" />
                                    </LinearGradientBrush>
                                </Border.BorderBrush>
                            </Border>
                        </Border>
                        <ContentPresenter Margin="5,2,1,2" x:Name="contentPresenterHover" VerticalAlignment="Center" d:LayoutOverrides="Height" Opacity="0">
                            <ContentPresenter.Effect>
                                <DropShadowEffect Color="{StaticResource MainColor}" Opacity="1" BlurRadius="10" ShadowDepth="0" />
                            </ContentPresenter.Effect>
                        </ContentPresenter>
                        <ContentPresenter Margin="5,2,1,2" x:Name="contentPresenterSelected" VerticalAlignment="Center" d:LayoutOverrides="Height" Opacity="0">
                            <ContentPresenter.Effect>
                                <DropShadowEffect Color="{StaticResource MainColor}" Opacity="1" BlurRadius="10" ShadowDepth="0"/>
                            </ContentPresenter.Effect>
                        </ContentPresenter>
                        <ContentPresenter Margin="5,2,1,2" x:Name="contentPresenter" VerticalAlignment="Center">
                            <ContentPresenter.Effect>
                                <DropShadowEffect Color="{StaticResource MainColor}" Opacity="0" BlurRadius="4" ShadowDepth="0" />
                            </ContentPresenter.Effect>
                        </ContentPresenter>
                    </Grid>
                    <ControlTemplate.Triggers>

                        <MultiTrigger>
                            <MultiTrigger.ExitActions>
                                <BeginStoryboard Storyboard="{StaticResource HoverSelectedOff}" x:Name="HoverSelectedOff_BeginStoryboard" />
                            </MultiTrigger.ExitActions>
                            <MultiTrigger.EnterActions>
                                <BeginStoryboard Storyboard="{StaticResource HoverSelectedOn}" x:Name="HoverSelectedOn_BeginStoryboard" />
                            </MultiTrigger.EnterActions>
                            <MultiTrigger.Conditions>
                                <Condition Property="Selector.IsSelected" Value="True" />
                                <Condition Property="IsMouseOver" Value="True" />
                            </MultiTrigger.Conditions>
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsMouseOver" Value="True" />
                                <Condition Property="Selector.IsSelected" Value="False" />
                            </MultiTrigger.Conditions>
                            <MultiTrigger.ExitActions>
                                <BeginStoryboard x:Name="HoverOff_BeginStoryboard" Storyboard="{StaticResource HoverOff}" />
                            </MultiTrigger.ExitActions>
                            <MultiTrigger.EnterActions>
                                <BeginStoryboard Storyboard="{StaticResource HoverOn}" />
                            </MultiTrigger.EnterActions>
                        </MultiTrigger>

                        <Trigger Property="IsSelected" Value="true">
                            <Trigger.ExitActions>
                                <BeginStoryboard x:Name="SelectedOff_BeginStoryboard" Storyboard="{StaticResource SelectedOff}" />
                            </Trigger.ExitActions>
                            <Trigger.EnterActions>
                                <BeginStoryboard x:Name="SelectedOn_BeginStoryboard" Storyboard="{StaticResource SelectedOn}" />
                            </Trigger.EnterActions>
                        </Trigger>

                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Foreground" Value="{StaticResource DisabledForegroundBrush}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="Foreground">
            <Setter.Value>
                <SolidColorBrush Color="{StaticResource WhiteColor}" />
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="Selector.IsSelected" Value="True">
                <Setter Property="Foreground">
                    <Setter.Value>
                        <SolidColorBrush Color="{StaticResource MainColor}" />
                    </Setter.Value>
                </Setter>
            </Trigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsMouseOver" Value="True" />
                    <Condition Property="Selector.IsSelected" Value="False" />
                </MultiTrigger.Conditions>
                <Setter Property="Foreground">
                    <Setter.Value>
                        <SolidColorBrush Color="{StaticResource WhiteColor}" />
                    </Setter.Value>
                </Setter>
            </MultiTrigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="Selector.IsSelected" Value="True" />
                    <Condition Property="IsMouseOver" Value="True" />
                </MultiTrigger.Conditions>
                <Setter Property="Foreground">
                    <Setter.Value>
                        <SolidColorBrush Color="{StaticResource WhiteColor}" />
                    </Setter.Value>
                </Setter>
            </MultiTrigger>
        </Style.Triggers>
    </Style>

    
    <Style TargetType="{x:Type Expander}">

        <Setter Property="Background" Value="Transparent" />
        <Setter Property="HorizontalContentAlignment" Value="Stretch" />
        <Setter Property="VerticalContentAlignment" Value="Stretch" />
        <Setter Property="BorderBrush" Value="Transparent" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Expander}">
                    <Border SnapsToDevicePixels="true" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="3">
                        <DockPanel>
                            <ToggleButton FontFamily="{TemplateBinding FontFamily}" FontSize="{TemplateBinding FontSize}" FontStretch="{TemplateBinding FontStretch}" FontStyle="{TemplateBinding FontStyle}" FontWeight="{TemplateBinding FontWeight}" HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" Padding="{TemplateBinding Padding}" VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}" FocusVisualStyle="{StaticResource ExpanderHeaderFocusVisual}" Margin="1" MinHeight="0" MinWidth="0" x:Name="HeaderSite" Style="{StaticResource ExpanderDownHeaderStyle}" Content="{TemplateBinding Header}" ContentTemplate="{TemplateBinding HeaderTemplate}" ContentTemplateSelector="{TemplateBinding HeaderTemplateSelector}" IsChecked="{Binding Path=IsExpanded, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" DockPanel.Dock="Top" />
                            <Border Visibility="Collapsed" Background="{StaticResource WindowBackgroundBrush}" BorderBrush="{StaticResource DefaultedBorderBrush}" BorderThickness="1,1,1,1" CornerRadius="4,4,4,4" x:Name="border">
                                <ContentPresenter Focusable="false" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="1,1,1,1" x:Name="ExpandSite" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" DockPanel.Dock="Bottom" />
                            </Border>
                        </DockPanel>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsExpanded" Value="true">
                            <Setter Property="Visibility" TargetName="border" Value="Visible" />
                            <Setter Property="Background" TargetName="border" Value="{StaticResource WindowBackgroundBrush}" />
                        </Trigger>
                        <Trigger Property="ExpandDirection" Value="Down" />
                        <Trigger Property="ExpandDirection" Value="Right">
                            <Setter Property="DockPanel.Dock" TargetName="ExpandSite" Value="Right" />
                            <Setter Property="DockPanel.Dock" TargetName="HeaderSite" Value="Left" />
                            <Setter Property="Style" TargetName="HeaderSite" Value="{StaticResource ExpanderRightHeaderStyle}" />
                        </Trigger>
                        <Trigger Property="ExpandDirection" Value="Up">
                            <Setter Property="DockPanel.Dock" TargetName="ExpandSite" Value="Top" />
                            <Setter Property="DockPanel.Dock" TargetName="HeaderSite" Value="Bottom" />
                            <Setter Property="Style" TargetName="HeaderSite" Value="{StaticResource ExpanderUpHeaderStyle}" />
                        </Trigger>
                        <Trigger Property="ExpandDirection" Value="Left">
                            <Setter Property="DockPanel.Dock" TargetName="ExpandSite" Value="Left" />
                            <Setter Property="DockPanel.Dock" TargetName="HeaderSite" Value="Right" />
                            <Setter Property="Style" TargetName="HeaderSite" Value="{StaticResource ExpanderLeftHeaderStyle}" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Foreground" Value="{StaticResource {x:Static SystemColors.GrayTextBrushKey}}" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Foreground" Value="#FFFFFFFF" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="Foreground" Value="#FFFFFFFF"/>
    </Style>

    <Style TargetType="{x:Type ComboBox}">
        <Setter Property="SnapsToDevicePixels" Value="true" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ComboBox}">
                    <Grid x:Name="grid">
                        <ToggleButton Grid.Column="2" Template="{StaticResource ComboBoxToggleButton}" x:Name="ToggleButton" Focusable="false" IsChecked="{Binding Path=IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" ClickMode="Press" />
                        <ContentPresenter HorizontalAlignment="Left" Margin="3,3,23,3" x:Name="ContentSite" VerticalAlignment="Center" Content="{TemplateBinding SelectionBoxItem}" ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}" ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}" IsHitTestVisible="False" />
                        <TextBox Visibility="Hidden" Template="{StaticResource ComboBoxTextBox}" HorizontalAlignment="Left" Margin="3,3,23,3" x:Name="PART_EditableTextBox" VerticalAlignment="Center" Focusable="True" Background="{StaticResource LightBrush}" IsReadOnly="{TemplateBinding IsReadOnly}" BorderBrush="{StaticResource NormalBorderBrush}" Foreground="#FFFFFFFF" />
                        <Popup IsOpen="{TemplateBinding IsDropDownOpen}" Placement="Bottom" x:Name="Popup" Focusable="False" AllowsTransparency="True" PopupAnimation="Slide">
                            <Grid MaxHeight="{TemplateBinding MaxDropDownHeight}" MinWidth="{TemplateBinding ActualWidth}" x:Name="DropDown" SnapsToDevicePixels="True">
                                <Border x:Name="DropDownBorder" Background="{StaticResource ControlBackgroundBrush}" CornerRadius="3,3,3,3" />
                                <ScrollViewer Margin="4,6,4,6" IsDeferredScrollingEnabled="True" Style="{StaticResource nuclearScrollViewer}" SnapsToDevicePixels="True" HorizontalScrollBarVisibility="Auto" VerticalScrollBarVisibility="Auto" CanContentScroll="True" Foreground="{StaticResource {x:Static SystemColors.ActiveCaptionTextBrushKey}}">
                                    <VirtualizingStackPanel VirtualizationMode="Recycling" IsItemsHost="True" KeyboardNavigation.DirectionalNavigation="Contained" />
                                </ScrollViewer>
                            </Grid>
                        </Popup>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="HasItems" Value="false">
                            <Setter Property="MinHeight" Value="95" TargetName="DropDownBorder" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Foreground" Value="{StaticResource DisabledForegroundBrush}" />
                            <Setter Property="Opacity" TargetName="grid" Value="0.5"/>
                        </Trigger>
                        <Trigger Property="IsGrouping" Value="true">
                            <Setter Property="ScrollViewer.CanContentScroll" Value="false" />
                        </Trigger>
                        <Trigger Property="AllowsTransparency" SourceName="Popup" Value="true">
                            <Setter Property="Margin" Value="0,2,0,0" TargetName="DropDownBorder" />
                        </Trigger>
                        <Trigger Property="IsEditable" Value="true">
                            <Setter Property="IsTabStop" Value="false" />
                            <Setter Property="Visibility" Value="Visible" TargetName="PART_EditableTextBox" />
                            <Setter Property="Visibility" Value="Hidden" TargetName="ContentSite" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="ItemsPanel">
            <Setter.Value>
                <ItemsPanelTemplate>
                    <VirtualizingStackPanel VirtualizationMode="Recycling"/>
                </ItemsPanelTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="ItemTemplate">
            <Setter.Value>
                <DataTemplate>
                    <TextBlock Text="{Binding}" Foreground="{StaticResource TextBrush}"/>
                </DataTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="Foreground" Value="{StaticResource TextBrush}" />
    </Style>

    <Style TargetType="{x:Type ProgressBar}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ProgressBar}">
                    <ControlTemplate.Resources>
                        <Storyboard x:Key="ValueChangedOn">
                            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="grid" Storyboard.TargetProperty="(UIElement.Effect).(DropShadowEffect.Opacity)">
                                <SplineDoubleKeyFrame KeyTime="00:00:00.1000000" Value="0.5" />
                                <SplineDoubleKeyFrame KeyTime="00:00:00.4000000" Value="1" />
                                <SplineDoubleKeyFrame KeyTime="00:00:02.1000000" Value="0" />
                            </DoubleAnimationUsingKeyFrames>
                        </Storyboard>
                        <Storyboard x:Key="IndeterminateOn">
                            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="grid" Storyboard.TargetProperty="(UIElement.Effect).(DropShadowEffect.Opacity)" RepeatBehavior="Forever">
                                <SplineDoubleKeyFrame KeyTime="00:00:00.1000000" Value="0.2" />
                                <SplineDoubleKeyFrame KeyTime="00:00:00.4000000" Value="0.4" />
                                <SplineDoubleKeyFrame KeyTime="00:00:00.7000000" Value="0.8" />
                                <SplineDoubleKeyFrame KeyTime="00:00:01.1000000" Value="1" />
                            </DoubleAnimationUsingKeyFrames>
                        </Storyboard>
                    </ControlTemplate.Resources>
                    <Grid x:Name="grid">
                        <Grid.Effect>
                            <DropShadowEffect Color="{StaticResource MainColor}" BlurRadius="5" Opacity="0" ShadowDepth="0"/>
                        </Grid.Effect>

                        <Border x:Name="PART_Track" BorderThickness="1" CornerRadius="5,5,5,5" Effect="{StaticResource EffectBlur}">

                            <Border.BorderBrush>
                                <SolidColorBrush Color="{StaticResource BlackColor}" />
                            </Border.BorderBrush>
                            <Border.Background>
                                <SolidColorBrush Color="{StaticResource ControlColor}" />
                            </Border.Background>
                        </Border>

                        <Border HorizontalAlignment="Left" x:Name="PART_Indicator" Background="{StaticResource SmallButtonTopWhite}" BorderThickness="2,2,2,2" CornerRadius="5,5,5,5" Padding="2,2,2,2" BorderBrush="{x:Null}">
                            <Rectangle Fill="#FFFFFFFF" Stroke="{x:Null}" RadiusX="4" RadiusY="4">
                                <Rectangle.Effect>
                                    <DropShadowEffect BlurRadius="5" Color="{StaticResource MainColor}" ShadowDepth="0" />
                                </Rectangle.Effect>
                            </Rectangle>
                        </Border>

                    </Grid>
                    <ControlTemplate.Triggers>
                        <EventTrigger RoutedEvent="RangeBase.ValueChanged">
                            <BeginStoryboard Storyboard="{StaticResource ValueChangedOn}" />
                        </EventTrigger>
                        <Trigger Property="IsIndeterminate" Value="True">
                            <Trigger.EnterActions>
                                <BeginStoryboard Storyboard="{StaticResource IndeterminateOn}" x:Name="IndeterminateOn_BeginStoryboard" />
                            </Trigger.EnterActions>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type TextBox}">
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="OverridesDefaultStyle" Value="True"/>
        <Setter Property="Foreground" Value="{StaticResource Foreground}"/>
        <Setter Property="KeyboardNavigation.TabNavigation" Value="None"/>
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="MinWidth" Value="100"/>
        <Setter Property="MinHeight" Value="18"/>
        <Setter Property="AllowDrop" Value="true"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TextBoxBase}">
                    <Grid>
                        <Border x:Name="Bg" Background="{StaticResource SunkenBackground}" CornerRadius="2" />
                        <Border x:Name="Hl" BorderBrush="{StaticResource Highlight}" BorderThickness="0,0,0,1" CornerRadius="2" />
                        <Border x:Name="Sh" BorderBrush="{StaticResource Shadow}" BorderThickness="0,1,0,0" CornerRadius="2" />
                        <ScrollViewer Margin="0,2,0,0" x:Name="PART_ContentHost" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Foreground" Value="{StaticResource DisabledForeground}"/>
                            <Setter Property="Opacity" Value="0.75"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>


    <Style TargetType="{x:Type PasswordBox}">
        <Setter Property="KeyboardNavigation.TabNavigation" Value="None" />
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="AllowDrop" Value="true" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type PasswordBox}">
                    <Grid>
                        <Border x:Name="Bg" Background="{StaticResource SunkenBackground}" CornerRadius="2" />
                        <Border x:Name="Hl" BorderBrush="{StaticResource Highlight}" BorderThickness="0,0,0,1" CornerRadius="2" />
                        <Border x:Name="Sh" BorderBrush="{StaticResource Shadow}" BorderThickness="0,1,0,0" CornerRadius="2" />
                        <ScrollViewer Margin="0,2,0,0" x:Name="PART_ContentHost" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Foreground" Value="{StaticResource DisabledForeground}"/>
                            <Setter Property="Opacity" Value="0.75"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>


    <Style TargetType="{x:Type Label}">
        <Setter Property="HorizontalContentAlignment" Value="Left" />
        <Setter Property="VerticalContentAlignment" Value="Top" />
        <Setter Property="Foreground" Value="{StaticResource TextBrush}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Label}">
                    <Grid>
                        <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" RecognizesAccessKey="True" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="false" />
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type Menu}">
        <Setter Property="Background" Value="{StaticResource LightBrush}" />
        <Setter Property="BorderBrush" Value="{StaticResource NormalBorderBrush}" />
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Menu}">
                    <Grid>
                        <Border Margin="1" x:Name="Border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{StaticResource LightBLack}" CornerRadius="4,4,4,4" />
                        <StackPanel IsItemsHost="True" ClipToBounds="True" Orientation="Horizontal" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Background" Value="{StaticResource DisabledBackgroundBrush}" TargetName="Border" />
                            <Setter Property="BorderBrush" Value="{StaticResource DisabledBorderBrush}" TargetName="Border" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type MenuItem}">
        <Setter Property="HorizontalContentAlignment" Value="{Binding Path=HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" />
        <Setter Property="VerticalContentAlignment" Value="{Binding Path=VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="Foreground">
            <Setter.Value>
                <SolidColorBrush Color="{StaticResource WhiteColor}" />
            </Setter.Value>
        </Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type MenuItem}">
                    <ControlTemplate.Resources>
                        <Storyboard x:Key="HoverOn">
                            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="HeaderHost" Storyboard.TargetProperty="(UIElement.Effect).(DropShadowEffect.Opacity)">
                                <SplineDoubleKeyFrame KeyTime="00:00:00.1000000" Value="1" />
                            </DoubleAnimationUsingKeyFrames>
                        </Storyboard>
                        <Storyboard x:Key="HoverOff">
                            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="HeaderHost" Storyboard.TargetProperty="(UIElement.Effect).(DropShadowEffect.Opacity)">
                                <SplineDoubleKeyFrame KeyTime="00:00:00.3000000" Value="0" />
                            </DoubleAnimationUsingKeyFrames>
                        </Storyboard>
                    </ControlTemplate.Resources>
                    <Border x:Name="Border" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}">
                        <Grid>

                            <Grid.ColumnDefinitions>
                                <ColumnDefinition MinWidth="17" Width="Auto" SharedSizeGroup="MenuItemIconColumnGroup" />
                                <ColumnDefinition Width="*" />
                                <ColumnDefinition Width="Auto" SharedSizeGroup="MenuItemIGTColumnGroup" />
                                <ColumnDefinition Width="14" />
                            </Grid.ColumnDefinitions>

                            <ContentPresenter Margin="4,0,6,0" x:Name="Icon" VerticalAlignment="Center" ContentSource="Icon" />

                            <Grid Visibility="Hidden" Margin="4,0,6,0" x:Name="GlyphPanel" VerticalAlignment="Center">
                                <Path x:Name="GlyphPanelpath" VerticalAlignment="Center" Fill="{TemplateBinding Foreground}" Data="M0,2 L0,4.8 L2.5,7.4 L7.1,2.8 L7.1,0 L2.5,4.6 z" FlowDirection="LeftToRight" />
                            </Grid>

                            <ContentPresenter Grid.Column="1" Margin="{TemplateBinding Padding}" x:Name="HeaderHost" RecognizesAccessKey="True" ContentSource="Header">
                                <ContentPresenter.Effect>
                                    <DropShadowEffect Color="{StaticResource MainColor}" Opacity="0" ShadowDepth="0" />
                                </ContentPresenter.Effect>
                            </ContentPresenter>

                            <Grid Grid.Column="3" Margin="4,0,6,0" x:Name="ArrowPanel" VerticalAlignment="Center">
                                <Path x:Name="ArrowPanelPath" VerticalAlignment="Center" Fill="{TemplateBinding Foreground}" Data="M0,0 L0,8 L4,4 z" />
                            </Grid>

                            <Popup IsOpen="{Binding Path=IsSubmenuOpen, RelativeSource={RelativeSource TemplatedParent}}" Placement="Right" x:Name="SubMenuPopup" Focusable="false" AllowsTransparency="true" PopupAnimation="Fade">
                                <Grid x:Name="SubMenu">
                                    <Border x:Name="SubMenuBorder_Copy" Background="{StaticResource PopupBackgroundBrush}" BorderThickness="1,0,1,1" CornerRadius="0,0,4,4" Opacity="1" Margin="4,0,0,0" BorderBrush="{x:Null}" />

                                    <Border x:Name="SubMenuBorder" Background="{x:Null}" BorderThickness="1,0,1,1" CornerRadius="0,0,4,4" Opacity="0.5" Margin="4,0,0,0" Effect="{StaticResource EffectBlur}">
                                        <Border.BorderBrush>
                                            <SolidColorBrush Color="{StaticResource BlackColor}" />
                                        </Border.BorderBrush>
                                    </Border>

                                    <StackPanel IsItemsHost="True" KeyboardNavigation.DirectionalNavigation="Cycle" />
                                </Grid>
                            </Popup>

                        </Grid>
                    </Border>

                    <ControlTemplate.Triggers>

                        <Trigger Property="Role" Value="TopLevelHeader">
                            <Setter Property="Margin" Value="0,1,0,1" />
                            <Setter Property="Padding" Value="6,3,6,3" />
                            <Setter Property="Grid.IsSharedSizeScope" Value="true" />
                            <Setter Property="Placement" Value="Bottom" TargetName="SubMenuPopup" />
                            <Setter Property="Visibility" Value="Collapsed" TargetName="ArrowPanel" />
                        </Trigger>

                        <Trigger Property="Role" Value="TopLevelItem">
                            <Setter Property="Margin" Value="0,1,0,1" />
                            <Setter Property="Padding" Value="6,3,6,3" />
                            <Setter Property="Visibility" Value="Collapsed" TargetName="ArrowPanel" />
                        </Trigger>

                        <Trigger Property="Role" Value="SubmenuHeader">
                            <Setter Property="DockPanel.Dock" Value="Top" />
                            <Setter Property="Padding" Value="0,2,0,2" />
                            <Setter Property="Grid.IsSharedSizeScope" Value="true" />
                        </Trigger>

                        <Trigger Property="Role" Value="SubmenuItem">
                            <Setter Property="DockPanel.Dock" Value="Top" />
                            <Setter Property="Padding" Value="0,2,0,2" />
                            <Setter Property="Visibility" Value="Collapsed" TargetName="ArrowPanel" />
                        </Trigger>
                        <Trigger Property="IsSuspendingPopupAnimation" Value="true">
                            <Setter Property="PopupAnimation" Value="None" TargetName="SubMenuPopup" />
                        </Trigger>

                        <Trigger Property="Icon" Value="{x:Null}">
                            <Setter Property="Visibility" Value="Collapsed" TargetName="Icon" />
                        </Trigger>

                        <Trigger Property="IsChecked" Value="true">
                            <Setter Property="Visibility" Value="Visible" TargetName="GlyphPanel" />
                            <Setter Property="Visibility" Value="Collapsed" TargetName="Icon" />
                        </Trigger>

                        <Trigger Property="AllowsTransparency" SourceName="SubMenuPopup" Value="true">
                            <Setter Property="Margin" Value="0,0,3,3" TargetName="SubMenu" />
                            <Setter Property="SnapsToDevicePixels" Value="true" TargetName="SubMenu" />
                            <Setter Property="Effect" Value="{StaticResource PopupDropShadow}" TargetName="SubMenuBorder" />
                        </Trigger>

                        <Trigger Property="IsHighlighted" Value="true">
                            <Trigger.ExitActions>
                                <BeginStoryboard x:Name="HoverOff_BeginStoryboard" Storyboard="{StaticResource HoverOff}" />
                            </Trigger.ExitActions>
                            <Trigger.EnterActions>
                                <BeginStoryboard Storyboard="{StaticResource HoverOn}" />
                            </Trigger.EnterActions>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Foreground" Value="{StaticResource {x:Static SystemColors.GrayTextBrushKey}}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type Separator}">
        <Setter Property="Height" Value="1" />
        <Setter Property="Margin" Value="0,2,0,2" />
        <Setter Property="Focusable" Value="false" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Separator}">
                    <Border BorderBrush="{StaticResource SolidBorderBrush}" BorderThickness="1" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type TabControl}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TabControl}">
                    <ControlTemplate.Resources>
                        <Storyboard x:Key="SelectionChanged">
                            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="PART_SelectedContentHost" Storyboard.TargetProperty="(UIElement.Opacity)">
                                <SplineDoubleKeyFrame KeyTime="00:00:00" Value="0" />
                                <SplineDoubleKeyFrame KeyTime="00:00:00.2000000" Value="0" />
                                <SplineDoubleKeyFrame KeyTime="00:00:00.3000000" Value="1" />
                            </DoubleAnimationUsingKeyFrames>
                            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="ContentPanel" Storyboard.TargetProperty="(UIElement.Opacity)">
                                <SplineDoubleKeyFrame KeyTime="00:00:00.2000000" Value="0.8" />
                            </DoubleAnimationUsingKeyFrames>
                        </Storyboard>
                        <Storyboard x:Key="TabChanged">
                            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="ContentPanel" Storyboard.TargetProperty="(UIElement.Opacity)">
                                <SplineDoubleKeyFrame KeyTime="00:00:00" Value="0" />
                                <SplineDoubleKeyFrame KeyTime="00:00:00.2000000" Value="1" />
                            </DoubleAnimationUsingKeyFrames>
                        </Storyboard>
                    </ControlTemplate.Resources>
                    <Grid KeyboardNavigation.TabNavigation="Local">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition x:Name="ColumnDefinition0" />
                            <ColumnDefinition x:Name="ColumnDefinition1" Width="0" />
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto" x:Name="RowDefinition0" />
                            <RowDefinition Height="*" x:Name="RowDefinition1" />
                        </Grid.RowDefinitions>

                        <Border Grid.Row="1" x:Name="ContentPanel" Background="{StaticResource WindowBackgroundBrush}" BorderBrush="{StaticResource DefaultedBorderBrush}" BorderThickness="1" CornerRadius="2" KeyboardNavigation.DirectionalNavigation="Contained" KeyboardNavigation.TabNavigation="Local" KeyboardNavigation.TabIndex="2" Margin="2,2,2,2">

                            <ContentPresenter Margin="4" x:Name="PART_SelectedContentHost" ContentSource="SelectedContent" />

                        </Border>
                        <Grid HorizontalAlignment="Stretch" VerticalAlignment="Top" Width="Auto" Height="Auto" Grid.Row="0" x:Name="HeaderPanel">
                            <Grid.LayoutTransform>
                                <TransformGroup>
                                    <ScaleTransform ScaleX="1" ScaleY="1" />
                                    <SkewTransform AngleX="0" AngleY="0" />
                                    <RotateTransform Angle="0" />
                                    <TranslateTransform X="0" Y="0" />
                                </TransformGroup>
                            </Grid.LayoutTransform>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="20" />
                                <ColumnDefinition Width="Auto" />
                                <ColumnDefinition Width="*" />
                                <ColumnDefinition Width="20" />
                            </Grid.ColumnDefinitions>
                            <Border Width="20" Height="Auto" BorderThickness="0,1,0,1" VerticalAlignment="Stretch" HorizontalAlignment="Left" x:Name="LeftBorder" Margin="0,0,0,0">
                                <Border.BorderBrush>
                                    <LinearGradientBrush EndPoint="0.069,0.5" StartPoint="0.888,0.5">
                                        <GradientStop Color="#33000000" Offset="0" />
                                        <GradientStop Color="#00000000" Offset="1" />
                                        <GradientStop Color="#26000000" Offset="0.491" />
                                    </LinearGradientBrush>
                                </Border.BorderBrush>
                                <Border BorderThickness="0,1,0,1">
                                    <Border.BorderBrush>
                                        <LinearGradientBrush EndPoint="0.06,0.5" StartPoint="0.897,0.5">
                                            <GradientStop Color="#33FFFFFF" Offset="0" />
                                            <GradientStop Color="#00FFFFFF" Offset="1" />
                                            <GradientStop Color="#26FFFFFF" Offset="0.42" />
                                        </LinearGradientBrush>
                                    </Border.BorderBrush>
                                    <Grid />
                                </Border>
                            </Border>
                            <Border BorderThickness="0,1,0,1" BorderBrush="#3F000000" Width="Auto" Height="Auto" x:Name="Middle" Grid.Column="1">
                                <Border.LayoutTransform>
                                    <TransformGroup>
                                        <ScaleTransform ScaleX="1" ScaleY="1" />
                                        <SkewTransform AngleX="0" AngleY="0" />
                                        <RotateTransform Angle="0" />
                                        <TranslateTransform X="0" Y="0" />
                                    </TransformGroup>
                                </Border.LayoutTransform>

                                <TabPanel Background="Transparent" IsItemsHost="True" Panel.ZIndex="1" KeyboardNavigation.TabIndex="1" Width="Auto" Height="Auto" Margin="0,-1,0,-1" x:Name="tabPanel">
                                    <TabPanel.LayoutTransform>
                                        <TransformGroup>
                                            <ScaleTransform ScaleX="1" ScaleY="1" />
                                            <SkewTransform AngleX="0" AngleY="0" />
                                            <RotateTransform Angle="0" />
                                            <TranslateTransform X="0" Y="0" />
                                        </TransformGroup>
                                    </TabPanel.LayoutTransform>
                                </TabPanel>

                            </Border>
                            <Border HorizontalAlignment="Stretch" Width="Auto" Grid.Column="2" x:Name="FillerBorder" BorderThickness="0,1,0,1" BorderBrush="#33000000">
                                <Border BorderThickness="0,1,0,1" BorderBrush="#33FFFFFF" x:Name="InnerBorder" />
                            </Border>
                            <Border Width="Auto" Height="Auto" BorderThickness="0,1,0,1" RenderTransformOrigin="0.5,0.5" HorizontalAlignment="Stretch" Margin="0,0,0,0" x:Name="RightBorder" Grid.Column="3">
                                <Border.RenderTransform>
                                    <TransformGroup>
                                        <ScaleTransform ScaleX="1" ScaleY="1" />
                                        <SkewTransform AngleX="0" AngleY="0" />
                                        <RotateTransform Angle="180" />
                                        <TranslateTransform X="0" Y="0" />
                                    </TransformGroup>
                                </Border.RenderTransform>
                                <Border.BorderBrush>
                                    <LinearGradientBrush EndPoint="0.069,0.5" StartPoint="0.888,0.5">
                                        <GradientStop Color="#33000000" Offset="0" />
                                        <GradientStop Color="#00000000" Offset="1" />
                                        <GradientStop Color="#26000000" Offset="0.491" />
                                    </LinearGradientBrush>
                                </Border.BorderBrush>
                                <Border BorderThickness="0,1,0,1">
                                    <Border.BorderBrush>
                                        <LinearGradientBrush EndPoint="0.06,0.5" StartPoint="0.897,0.5">
                                            <GradientStop Color="#33FFFFFF" Offset="0" />
                                            <GradientStop Color="#00FFFFFF" Offset="1" />
                                            <GradientStop Color="#26FFFFFF" Offset="0.42" />
                                        </LinearGradientBrush>
                                    </Border.BorderBrush>
                                </Border>
                            </Border>
                        </Grid>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="TabStripPlacement" Value="Bottom">
                            <Setter Property="Grid.Row" TargetName="HeaderPanel" Value="1" />
                            <Setter Property="Grid.Row" TargetName="ContentPanel" Value="0" />
                            <Setter Property="Height" TargetName="RowDefinition0" Value="*" />
                            <Setter Property="Height" TargetName="RowDefinition1" Value="Auto" />
                            <Setter Property="Margin" TargetName="HeaderPanel" Value="2,0,2,2" />
                        </Trigger>
                        <Trigger Property="TabStripPlacement" Value="Left">

                            <Setter Property="Grid.Row" TargetName="HeaderPanel" Value="0" />
                            <Setter Property="Grid.Row" TargetName="ContentPanel" Value="0" />
                            <Setter Property="Grid.Column" TargetName="HeaderPanel" Value="0" />
                            <Setter Property="Grid.Column" TargetName="ContentPanel" Value="1" />
                            <Setter Property="Width" TargetName="ColumnDefinition0" Value="Auto" />
                            <Setter Property="Width" TargetName="ColumnDefinition1" Value="*" />
                            <Setter Property="Height" TargetName="RowDefinition0" Value="*" />
                            <Setter Property="Height" TargetName="RowDefinition1" Value="0" />
                            <Setter Property="LayoutTransform" TargetName="HeaderPanel">
                                <Setter.Value>
                                    <TransformGroup>
                                        <ScaleTransform ScaleX="1" ScaleY="1" />
                                        <SkewTransform AngleX="0" AngleY="0" />
                                        <RotateTransform Angle="90" />
                                        <TranslateTransform X="0" Y="0" />
                                    </TransformGroup>
                                </Setter.Value>
                            </Setter>
                            <Setter Property="LayoutTransform" TargetName="tabPanel">
                                <Setter.Value>
                                    <TransformGroup>
                                        <ScaleTransform ScaleX="1" ScaleY="1" />
                                        <SkewTransform AngleX="0" AngleY="0" />
                                        <RotateTransform Angle="-90" />
                                        <TranslateTransform X="0" Y="0" />
                                    </TransformGroup>
                                </Setter.Value>
                            </Setter>
                            <Setter Property="Margin" TargetName="LeftBorder" Value="0,0,0,0" />
                            <Setter Property="Margin" TargetName="RightBorder" Value="0,0,0,0" />

                        </Trigger>
                        <Trigger Property="TabStripPlacement" Value="Right">
                            <Setter Property="Grid.Row" TargetName="HeaderPanel" Value="0" />
                            <Setter Property="Grid.Row" TargetName="ContentPanel" Value="0" />
                            <Setter Property="Grid.Column" TargetName="HeaderPanel" Value="1" />
                            <Setter Property="Grid.Column" TargetName="ContentPanel" Value="0" />
                            <Setter Property="Width" TargetName="ColumnDefinition0" Value="*" />
                            <Setter Property="Width" TargetName="ColumnDefinition1" Value="Auto" />
                            <Setter Property="Height" TargetName="RowDefinition0" Value="*" />
                            <Setter Property="Height" TargetName="RowDefinition1" Value="0" />
                            <Setter Property="Margin" TargetName="HeaderPanel" Value="0,2,2,2" />
                            <Setter Property="LayoutTransform" TargetName="HeaderPanel">
                                <Setter.Value>
                                    <TransformGroup>
                                        <ScaleTransform ScaleX="1" ScaleY="1" />
                                        <SkewTransform AngleX="0" AngleY="0" />
                                        <RotateTransform Angle="90" />
                                        <TranslateTransform X="0" Y="0" />
                                    </TransformGroup>
                                </Setter.Value>
                            </Setter>
                            <Setter Property="LayoutTransform" TargetName="tabPanel">
                                <Setter.Value>
                                    <TransformGroup>
                                        <ScaleTransform ScaleX="1" ScaleY="1" />
                                        <SkewTransform AngleX="0" AngleY="0" />
                                        <RotateTransform Angle="-90" />
                                        <TranslateTransform X="0" Y="0" />
                                    </TransformGroup>
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Foreground" Value="{StaticResource {x:Static SystemColors.GrayTextBrushKey}}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style d:IsControlPart="True" TargetType="{x:Type TabItem}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TabItem}">
                    <ControlTemplate.Resources>
                        <Storyboard x:Key="HoverOn">
                            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="ContentSiteHover" Storyboard.TargetProperty="(UIElement.Opacity)">
                                <SplineDoubleKeyFrame KeyTime="00:00:00.1000000" Value="1" />
                            </DoubleAnimationUsingKeyFrames>
                            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="ContentSiteHover" Storyboard.TargetProperty="(UIElement.Effect).(DropShadowEffect.Opacity)">
                                <SplineDoubleKeyFrame KeyTime="00:00:00.1000000" Value="1" />
                            </DoubleAnimationUsingKeyFrames>
                            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="ContentSite" Storyboard.TargetProperty="(UIElement.Opacity)">
                                <SplineDoubleKeyFrame KeyTime="00:00:00.1000000" Value="0" />
                            </DoubleAnimationUsingKeyFrames>
                            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="ContentSiteHover" Storyboard.TargetProperty="(UIElement.Effect).(DropShadowEffect.BlurRadius)">
                                <SplineDoubleKeyFrame KeyTime="00:00:00.1000000" Value="5" />
                            </DoubleAnimationUsingKeyFrames>
                        </Storyboard>
                        <Storyboard x:Key="HoverOff">
                            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="ContentSiteHover" Storyboard.TargetProperty="(UIElement.Effect).(DropShadowEffect.Opacity)">
                                <SplineDoubleKeyFrame KeyTime="00:00:00.3000000" Value="0" />
                            </DoubleAnimationUsingKeyFrames>
                            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="ContentSiteHover" Storyboard.TargetProperty="(UIElement.Opacity)">
                                <SplineDoubleKeyFrame KeyTime="00:00:00.3000000" Value="0" />
                            </DoubleAnimationUsingKeyFrames>
                            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="ContentSite" Storyboard.TargetProperty="(UIElement.Opacity)">
                                <SplineDoubleKeyFrame KeyTime="00:00:00.3000000" Value="1" />
                            </DoubleAnimationUsingKeyFrames>
                            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="ContentSiteHover" Storyboard.TargetProperty="(UIElement.Effect).(DropShadowEffect.BlurRadius)">
                                <SplineDoubleKeyFrame KeyTime="00:00:00.3000000" Value="1" />
                            </DoubleAnimationUsingKeyFrames>
                        </Storyboard>
                        <Storyboard x:Key="SelectedOn">
                            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="ContentSite" Storyboard.TargetProperty="(UIElement.Effect).(DropShadowEffect.Opacity)">
                                <SplineDoubleKeyFrame KeyTime="00:00:00.1000000" Value="0.8" />
                            </DoubleAnimationUsingKeyFrames>
                        </Storyboard>
                        <Storyboard x:Key="SelectedOff">
                            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="ContentSite" Storyboard.TargetProperty="(UIElement.Effect).(DropShadowEffect.Opacity)">
                                <SplineDoubleKeyFrame KeyTime="00:00:00.3000000" Value="0" />
                            </DoubleAnimationUsingKeyFrames>
                        </Storyboard>
                        <Storyboard x:Key="HoverSelectedOn">
                            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="ContentSiteSelectedHover" Storyboard.TargetProperty="(UIElement.Opacity)">
                                <SplineDoubleKeyFrame KeyTime="00:00:00.1000000" Value="1" />
                            </DoubleAnimationUsingKeyFrames>
                        </Storyboard>
                        <Storyboard x:Key="HoverSelectedOff">
                            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="ContentSiteSelectedHover" Storyboard.TargetProperty="(UIElement.Opacity)">
                                <SplineDoubleKeyFrame KeyTime="00:00:00.3000000" Value="0" />
                            </DoubleAnimationUsingKeyFrames>
                        </Storyboard>
                    </ControlTemplate.Resources>
                    <Grid Margin="-1,0,-1,0" x:Name="grid" Height="Auto">
                        <Border x:Name="Border" Background="{x:Null}" BorderBrush="{x:Null}" BorderThickness="1,1,1,1" CornerRadius="2,12,0,0">
                            <Grid Width="Auto" Height="Auto" HorizontalAlignment="Stretch" VerticalAlignment="Stretch">
                                <Grid.LayoutTransform>
                                    <TransformGroup>
                                        <ScaleTransform ScaleX="1" ScaleY="1" />
                                        <SkewTransform AngleX="0" AngleY="0" />
                                        <RotateTransform Angle="0" />
                                        <TranslateTransform X="0" Y="0" />
                                    </TransformGroup>
                                </Grid.LayoutTransform>
                                <Border BorderThickness="0,1,0,1" BorderBrush="#3FFFFFFF" x:Name="border" />
                                <ContentPresenter HorizontalAlignment="Center" x:Name="ContentSite" VerticalAlignment="Center" RecognizesAccessKey="True" ContentSource="Header" d:LayoutOverrides="Width, Height" Margin="2,0,2,0">
                                    <ContentPresenter.LayoutTransform>
                                        <TransformGroup>
                                            <ScaleTransform ScaleX="1" ScaleY="1" />
                                            <SkewTransform AngleX="0" AngleY="0" />
                                            <RotateTransform />
                                            <TranslateTransform X="0" Y="0" />
                                        </TransformGroup>
                                    </ContentPresenter.LayoutTransform>
                                    <ContentPresenter.Effect>
                                        <DropShadowEffect Color="{StaticResource MainColor}" Opacity="0" BlurRadius="10" ShadowDepth="0" />
                                    </ContentPresenter.Effect>
                                </ContentPresenter>
                                <ContentPresenter HorizontalAlignment="Center" x:Name="ContentSiteHover" VerticalAlignment="Center" RecognizesAccessKey="True" ContentSource="Header" d:LayoutOverrides="Width, Height" Opacity="0" Margin="16,6,16,6">
                                    <ContentPresenter.Effect>
                                        <DropShadowEffect Color="{StaticResource MainColor}" BlurRadius="2" ShadowDepth="0" />
                                    </ContentPresenter.Effect>
                                </ContentPresenter>
                                <ContentPresenter HorizontalAlignment="Center" x:Name="ContentSiteSelectedHover" VerticalAlignment="Center" RecognizesAccessKey="True" ContentSource="Header" d:LayoutOverrides="Width, Height" Opacity="0" Margin="16,6,16,6">
                                    <ContentPresenter.Effect>
                                        <DropShadowEffect Color="{StaticResource MainColor}" BlurRadius="10" ShadowDepth="0" />
                                    </ContentPresenter.Effect>
                                </ContentPresenter>
                                <Path HorizontalAlignment="Right" Margin="0,2.039,-1.606,2.038" Width="1" Fill="#FFFFFFFF" Stretch="Fill" Data="M119.29397,2.5394915 L119.29397,30.462639" Opacity="0.5" Height="28" VerticalAlignment="Center">
                                    <Path.OpacityMask>
                                        <LinearGradientBrush EndPoint="0.5,0.978" StartPoint="0.5,0.058">
                                            <GradientStop Color="#00000000" Offset="0" />
                                            <GradientStop Color="#00FFFFFF" Offset="1" />
                                            <GradientStop Color="#FF7D7D7D" Offset="0.495" />
                                        </LinearGradientBrush>
                                    </Path.OpacityMask>
                                    <Path.Stroke>
                                        <SolidColorBrush Color="{StaticResource WhiteColor}" />
                                    </Path.Stroke>
                                </Path>
                                <Path HorizontalAlignment="Right" Margin="0,2.039,-2.654,2.038" Width="1" Fill="#FFFFFFFF" Stretch="Fill" Data="M119.29397,2.5394915 L119.29397,30.462639" Opacity="0.5" Height="28" VerticalAlignment="Center">
                                    <Path.OpacityMask>
                                        <LinearGradientBrush EndPoint="0.5,0.96" StartPoint="0.5,0.054">
                                            <GradientStop Color="#00000000" Offset="0" />
                                            <GradientStop Color="#00FFFFFF" Offset="1" />
                                            <GradientStop Color="#FF858585" Offset="0.527" />
                                        </LinearGradientBrush>
                                    </Path.OpacityMask>
                                    <Path.Stroke>
                                        <SolidColorBrush Color="{StaticResource BlackColor}" />
                                    </Path.Stroke>
                                </Path>
                            </Grid>
                        </Border>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="TabStripPlacement" Value="Left">
                            <Setter Property="LayoutTransform" TargetName="grid">
                                <Setter.Value>
                                    <TransformGroup>
                                        <ScaleTransform ScaleX="1" ScaleY="1" />
                                        <SkewTransform AngleX="0" AngleY="0" />
                                        <RotateTransform Angle="-90" />
                                        <TranslateTransform X="0" Y="0" />
                                    </TransformGroup>
                                </Setter.Value>
                            </Setter>
                            <Setter Property="Margin" TargetName="border" Value="-1,1,-1,1" />
                        </Trigger>
                        <Trigger Property="TabStripPlacement" Value="Right">
                            <Setter Property="LayoutTransform" TargetName="grid">
                                <Setter.Value>
                                    <TransformGroup>
                                        <ScaleTransform ScaleX="1" ScaleY="1" />
                                        <SkewTransform AngleX="0" AngleY="0" />
                                        <RotateTransform Angle="90" />
                                        <TranslateTransform X="0" Y="0" />
                                    </TransformGroup>
                                </Setter.Value>
                            </Setter>
                            <Setter Property="Margin" TargetName="border" Value="-1,1,-1,1" />
                        </Trigger>
                        <Trigger Property="TabStripPlacement" Value="Bottom" />
                        <MultiTrigger>
                            <MultiTrigger.ExitActions>
                                <BeginStoryboard Storyboard="{StaticResource HoverSelectedOff}" x:Name="HoverSelectedOff_BeginStoryboard" />
                            </MultiTrigger.ExitActions>
                            <MultiTrigger.EnterActions>
                                <BeginStoryboard Storyboard="{StaticResource HoverSelectedOn}" x:Name="HoverSelectedOn_BeginStoryboard" />
                            </MultiTrigger.EnterActions>
                            <MultiTrigger.Conditions>
                                <Condition Property="Selector.IsSelected" Value="True" />
                                <Condition Property="IsMouseOver" Value="True" />
                            </MultiTrigger.Conditions>
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.ExitActions>
                                <BeginStoryboard Storyboard="{StaticResource HoverOff}" x:Name="HoverOff_BeginStoryboard" />
                            </MultiTrigger.ExitActions>
                            <MultiTrigger.EnterActions>
                                <BeginStoryboard Storyboard="{StaticResource HoverOn}" />
                            </MultiTrigger.EnterActions>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsMouseOver" Value="True" />
                                <Condition Property="Selector.IsSelected" Value="False" />
                            </MultiTrigger.Conditions>
                        </MultiTrigger>
                        <Trigger Property="IsSelected" Value="True">
                            <Trigger.ExitActions>
                                <BeginStoryboard Storyboard="{StaticResource SelectedOff}" x:Name="SelectedOff_BeginStoryboard" />
                            </Trigger.ExitActions>
                            <Trigger.EnterActions>
                                <BeginStoryboard Storyboard="{StaticResource SelectedOn}" x:Name="SelectedOn_BeginStoryboard" />
                            </Trigger.EnterActions>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Background" Value="{StaticResource DisabledBackgroundBrush}" TargetName="Border" />
                            <Setter Property="BorderBrush" Value="{StaticResource DisabledBorderBrush}" TargetName="Border" />
                            <Setter Property="Foreground" Value="{StaticResource DisabledForegroundBrush}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="Selector.IsSelected" Value="True">
                <Setter Property="Foreground" Value="#FFFFFFFF" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="nuclearSliderThumb" d:IsControlPart="True" TargetType="{x:Type Thumb}">
        <Setter Property="SnapsToDevicePixels" Value="true" />
        <Setter Property="Height" Value="14" />
        <Setter Property="Width" Value="14" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Thumb}">
                    <ControlTemplate.Resources>
                        <Storyboard x:Key="HoverOn">
                            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="Hover" Storyboard.TargetProperty="(UIElement.Opacity)">
                                <SplineDoubleKeyFrame KeyTime="00:00:00.1000000" Value="1" />
                            </DoubleAnimationUsingKeyFrames>
                        </Storyboard>
                        <Storyboard x:Key="HoverOff">
                            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="Hover" Storyboard.TargetProperty="(UIElement.Opacity)">
                                <SplineDoubleKeyFrame KeyTime="00:00:00.3000000" Value="0" />
                            </DoubleAnimationUsingKeyFrames>
                        </Storyboard>
                    </ControlTemplate.Resources>
                    <Grid>
                        <Border x:Name="Shadow" Width="Auto" BorderBrush="{x:Null}" BorderThickness="2,2,2,2" CornerRadius="7,7,7,7" Margin="0,0,0,-2" Effect="{StaticResource EffectBlur}">

                            <Border.Background>
                                <SolidColorBrush Color="{StaticResource BlackColor}" />
                            </Border.Background>
                        </Border>
                        <Border x:Name="Base" CornerRadius="8,8,8,8" Background="#FF000000" />
                        <Border x:Name="MainRect" Width="Auto" BorderBrush="#66FFFFFF" BorderThickness="2,2,2,2" CornerRadius="7,7,7,7">
                            <Border.Background>
                                <SolidColorBrush Color="{StaticResource ControlColor}" />
                            </Border.Background>
                            <Grid HorizontalAlignment="Center" Width="10" Margin="0,2,0,2">
                                <Rectangle Fill="#FFFFFFFF" HorizontalAlignment="Left" StrokeThickness="2">
                                    <Rectangle.Stroke>
                                        <SolidColorBrush Color="{StaticResource MainColor}" />
                                    </Rectangle.Stroke>
                                </Rectangle>
                                <Rectangle HorizontalAlignment="Right" Fill="#FFFFFFFF" StrokeThickness="2">
                                    <Rectangle.Stroke>
                                        <SolidColorBrush Color="{StaticResource MainColor}" />
                                    </Rectangle.Stroke>
                                </Rectangle>
                                <Rectangle HorizontalAlignment="Center" Fill="#FFFFFFFF" StrokeThickness="2">
                                    <Rectangle.Stroke>
                                        <SolidColorBrush Color="{StaticResource MainColor}" />
                                    </Rectangle.Stroke>
                                </Rectangle>
                            </Grid>
                        </Border>
                        <Border Width="Auto" BorderThickness="2,2,2,2" CornerRadius="7,7,7,7" Opacity="0.55" x:Name="Shine">
                            <Border.Background>
                                <LinearGradientBrush EndPoint="0.5,0.848" StartPoint="0.5,0.152">
                                    <GradientStop Color="#8CFFFFFF" Offset="0" />
                                    <GradientStop Color="#FF000000" Offset="1" />
                                </LinearGradientBrush>
                            </Border.Background>
                        </Border>
                        <Border x:Name="Hover" Width="Auto" BorderThickness="2,2,2,2" CornerRadius="7,7,7,7" Opacity="0">
                            <Border.BorderBrush>
                                <SolidColorBrush Color="{StaticResource MainColor}" />
                            </Border.BorderBrush>
                        </Border>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Trigger.ExitActions>
                                <BeginStoryboard Storyboard="{StaticResource HoverOff}" x:Name="HoverOff_BeginStoryboard" />
                            </Trigger.ExitActions>
                            <Trigger.EnterActions>
                                <BeginStoryboard Storyboard="{StaticResource HoverOn}" />
                            </Trigger.EnterActions>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false" />
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type Slider}">
        <Setter Property="Background" Value="{StaticResource LightBrush}" />
        <Setter Property="BorderBrush" Value="{StaticResource NormalBorderBrush}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Slider}">
                    <Grid x:Name="GridRoot">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="Auto" MinHeight="{TemplateBinding MinHeight}" />
                            <RowDefinition Height="Auto" />
                        </Grid.RowDefinitions>

                        <TickBar Visibility="Collapsed" x:Name="TopTick" Height="4" SnapsToDevicePixels="True" Placement="Top" Fill="{StaticResource GlyphBrush}" />
                        <Border Grid.Row="1" Margin="0,1,0,1" x:Name="Border" Height="8" CornerRadius="4,4,4,4" BorderThickness="1,1,1,1" Effect="{StaticResource EffectBlur}">
                            <Border.BorderBrush>
                                <SolidColorBrush Color="{StaticResource BlackColor}" />
                            </Border.BorderBrush>
                            <Border.Background>
                                <SolidColorBrush Color="{StaticResource ControlColor}" />
                            </Border.Background>
                        </Border>

                        <Track Grid.Row="1" x:Name="PART_Track">
                            <Track.Thumb>
                                <Thumb Style="{StaticResource nuclearSliderThumb}" Width="28" Height="17" />
                            </Track.Thumb>
                            <Track.IncreaseRepeatButton>
                                <RepeatButton Style="{StaticResource nuclearScrollRepeatButtonStyle}" Command="Slider.IncreaseLarge" />
                            </Track.IncreaseRepeatButton>
                            <Track.DecreaseRepeatButton>
                                <RepeatButton Style="{StaticResource nuclearScrollRepeatButtonStyle}" Command="Slider.DecreaseLarge" />
                            </Track.DecreaseRepeatButton>
                        </Track>

                        <TickBar Visibility="Collapsed" Grid.Row="2" x:Name="BottomTick" Height="4" SnapsToDevicePixels="True" Placement="Bottom" Fill="{TemplateBinding Foreground}" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="TickPlacement" Value="TopLeft">
                            <Setter Property="Visibility" Value="Visible" TargetName="TopTick" />
                        </Trigger>
                        <Trigger Property="TickPlacement" Value="BottomRight">
                            <Setter Property="Visibility" Value="Visible" TargetName="BottomTick" />
                        </Trigger>
                        <Trigger Property="TickPlacement" Value="Both">
                            <Setter Property="Visibility" Value="Visible" TargetName="TopTick" />
                            <Setter Property="Visibility" Value="Visible" TargetName="BottomTick" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Background" Value="{StaticResource DisabledBackgroundBrush}" TargetName="Border" />
                            <Setter Property="BorderBrush" Value="{StaticResource DisabledBorderBrush}" TargetName="Border" />
                        </Trigger>

                        <Trigger Property="Orientation" Value="Vertical">
                            <Setter Property="LayoutTransform" TargetName="GridRoot">
                                <Setter.Value>
                                    <RotateTransform Angle="-90" />
                                </Setter.Value>
                            </Setter>

                            <Setter TargetName="PART_Track" Property="Orientation" Value="Horizontal" />
                        </Trigger>

                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type TreeView}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TreeView}">
                    <Grid>
                        <Border x:Name="BlurBorder" CornerRadius="4,4,4,4" BorderThickness="2,2,2,2" Margin="0,0,0,0" Background="{StaticResource ListBackgroundBrush}" IsHitTestVisible="False" Effect="{StaticResource EffectBlur}">
                            <Border.BorderBrush>
                                <SolidColorBrush Color="{StaticResource BlackColor}" />
                            </Border.BorderBrush>

                        </Border>
                        <Border x:Name="Border" BorderThickness="1" CornerRadius="4,4,4,4" Background="{x:Null}" BorderBrush="{x:Null}">
                            <ScrollViewer Style="{StaticResource nuclearScrollViewer}" Focusable="False" Padding="4" HorizontalScrollBarVisibility="Auto" VerticalScrollBarVisibility="Auto" CanContentScroll="False" Background="{x:Null}" Opacity="0.8" Margin="0,7,0,-3">
                                <ItemsPresenter />
                            </ScrollViewer>
                        </Border>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style d:IsControlPart="True" TargetType="{x:Type TreeViewItem}">
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="HorizontalContentAlignment" Value="{Binding Path=HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" />
        <Setter Property="VerticalContentAlignment" Value="{Binding Path=VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" />
        <Setter Property="Padding" Value="1,0,0,0" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TreeViewItem}">
                    <ControlTemplate.Resources>
                        <Storyboard x:Key="HoverOn">
                            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="PART_HeaderHover" Storyboard.TargetProperty="(UIElement.Opacity)">
                                <SplineDoubleKeyFrame KeyTime="00:00:00.1000000" Value="1" />
                            </DoubleAnimationUsingKeyFrames>
                        </Storyboard>
                        <Storyboard x:Key="HoverOff">
                            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="PART_HeaderHover" Storyboard.TargetProperty="(UIElement.Opacity)">
                                <SplineDoubleKeyFrame KeyTime="00:00:00.3000000" Value="0" />
                            </DoubleAnimationUsingKeyFrames>
                        </Storyboard>
                        <Storyboard x:Key="SelectedOn">
                            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="PART_Header" Storyboard.TargetProperty="(UIElement.Effect).(DropShadowEffect.Opacity)">
                                <SplineDoubleKeyFrame KeyTime="00:00:00.1000000" Value="0.6" />
                            </DoubleAnimationUsingKeyFrames>
                        </Storyboard>
                        <Storyboard x:Key="SelectedOff">
                            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="PART_Header" Storyboard.TargetProperty="(UIElement.Effect).(DropShadowEffect.Opacity)">
                                <SplineDoubleKeyFrame KeyTime="00:00:00.3000000" Value="0" />
                            </DoubleAnimationUsingKeyFrames>
                        </Storyboard>
                        <Storyboard x:Key="SelectedHoverOn">
                            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="PART_HeaderSelectedHover" Storyboard.TargetProperty="(UIElement.Effect).(DropShadowEffect.Opacity)">
                                <SplineDoubleKeyFrame KeyTime="00:00:00.1000000" Value="0.6" />
                            </DoubleAnimationUsingKeyFrames>
                        </Storyboard>
                        <Storyboard x:Key="SelectedHoverOff">
                            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="PART_HeaderSelectedHover" Storyboard.TargetProperty="(UIElement.Effect).(DropShadowEffect.Opacity)">
                                <SplineDoubleKeyFrame KeyTime="00:00:00.3000000" Value="0" />
                            </DoubleAnimationUsingKeyFrames>
                        </Storyboard>
                    </ControlTemplate.Resources>
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition MinWidth="19" Width="Auto" />
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition Width="*" />
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto" />
                            <RowDefinition />
                        </Grid.RowDefinitions>
                        <ToggleButton x:Name="Expander" Style="{StaticResource nuclearTreeViewItemToggleButton}" IsChecked="{Binding Path=IsExpanded, RelativeSource={RelativeSource TemplatedParent}}" ClickMode="Press" />
                        <Border Grid.Column="1" x:Name="Selection_Border" BorderThickness="{TemplateBinding BorderThickness}" Padding="{TemplateBinding Padding}" CornerRadius="4,4,4,4">
                            <Grid Width="Auto" Height="Auto" Margin="2,0,2,0">
                                <ContentPresenter HorizontalAlignment="Stretch" x:Name="PART_Header" ContentSource="Header" d:LayoutOverrides="Width" Margin="0,1,0,1">
                                    <ContentPresenter.Effect>
                                        <DropShadowEffect Color="{StaticResource MainColor}" Opacity="0" ShadowDepth="0" />
                                    </ContentPresenter.Effect>
                                </ContentPresenter>
                                <ContentPresenter HorizontalAlignment="Stretch" x:Name="PART_HeaderHover" ContentSource="Header" d:LayoutOverrides="Width" Opacity="0" Margin="0,1,0,1">
                                    <ContentPresenter.Effect>
                                        <DropShadowEffect Color="{StaticResource MainColor}" ShadowDepth="0"/>
                                    </ContentPresenter.Effect>
                                </ContentPresenter>
                                <ContentPresenter HorizontalAlignment="Stretch" x:Name="PART_HeaderSelectedHover" ContentSource="Header" d:LayoutOverrides="Width" Margin="0,1,0,1">
                                    <ContentPresenter.Effect>
                                        <DropShadowEffect Color="{StaticResource MainColor}" Opacity="0" ShadowDepth="0" />
                                    </ContentPresenter.Effect>
                                </ContentPresenter>
                            </Grid>
                        </Border>
                        <Border Margin="0,0,-3.803,0" Grid.ColumnSpan="1" Grid.RowSpan="1" Grid.Column="1" x:Name="border" CornerRadius="4,4,4,4" />
                        <ItemsPresenter Grid.Column="1" Grid.ColumnSpan="2" Grid.Row="1" x:Name="ItemsHost" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <MultiTrigger>
                            <MultiTrigger.ExitActions>
                                <BeginStoryboard Storyboard="{StaticResource SelectedHoverOff}" x:Name="SelectedHoverOff_BeginStoryboard" />
                            </MultiTrigger.ExitActions>
                            <MultiTrigger.EnterActions>
                                <BeginStoryboard Storyboard="{StaticResource SelectedHoverOn}" x:Name="SelectedHoverOn_BeginStoryboard" />
                            </MultiTrigger.EnterActions>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsSelected" Value="True" />
                                <Condition Property="IsMouseOver" Value="True" />
                            </MultiTrigger.Conditions>
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsSelected" Value="False" />
                                <Condition Property="IsMouseOver" SourceName="Selection_Border" Value="True" />
                            </MultiTrigger.Conditions>
                            <MultiTrigger.ExitActions>
                                <BeginStoryboard x:Name="HoverOff_BeginStoryboard" Storyboard="{StaticResource HoverOff}" />
                            </MultiTrigger.ExitActions>
                            <MultiTrigger.EnterActions>
                                <BeginStoryboard Storyboard="{StaticResource HoverOn}" />
                            </MultiTrigger.EnterActions>
                        </MultiTrigger>
                        <Trigger Property="IsExpanded" Value="false">
                            <Setter Property="Visibility" Value="Collapsed" TargetName="ItemsHost" />
                        </Trigger>
                        <Trigger Property="HasItems" Value="false">
                            <Setter Property="Visibility" Value="Hidden" TargetName="Expander" />
                        </Trigger>
                        <Trigger Property="IsSelected" Value="true">
                            <Trigger.ExitActions>
                                <BeginStoryboard x:Name="SelectedOff_BeginStoryboard" Storyboard="{StaticResource SelectedOff}" />
                            </Trigger.ExitActions>
                            <Trigger.EnterActions>
                                <BeginStoryboard x:Name="SelectedOn_BeginStoryboard" Storyboard="{StaticResource SelectedOn}" />
                            </Trigger.EnterActions>
                            <Setter Property="Foreground" Value="{StaticResource {x:Static SystemColors.HighlightTextBrushKey}}" />
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsSelected" Value="true" />
                                <Condition Property="IsSelectionActive" Value="false" />
                            </MultiTrigger.Conditions>
                            <Setter Property="Foreground" Value="{StaticResource {x:Static SystemColors.ControlTextBrushKey}}" />
                            <Setter Property="Background" TargetName="Selection_Border" Value="#3F545454" />
                            <Setter Property="Background" TargetName="border" Value="#72000000" />
                        </MultiTrigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Foreground" Value="{StaticResource {x:Static SystemColors.GrayTextBrushKey}}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="Foreground">
            <Setter.Value>
                <SolidColorBrush Color="{StaticResource WhiteColor}" />
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsSelected" Value="True" />
                    <Condition Property="IsMouseOver" Value="True" />
                </MultiTrigger.Conditions>
            </MultiTrigger>
            <Trigger Property="IsSelected" Value="True">
                <Setter Property="Foreground">
                    <Setter.Value>
                        <SolidColorBrush Color="{StaticResource MainColor}" />
                    </Setter.Value>
                </Setter>
            </Trigger>
        </Style.Triggers>
    </Style>


    <Style TargetType="{x:Type ToolBar}">
        <Setter Property="Background" Value="{StaticResource ToolBarHorizontalBackground}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToolBar}">
                    <Grid SnapsToDevicePixels="true" Margin="3,1,1,1" x:Name="Grid">
                        <Border Margin="0,0,11,0" x:Name="MainPanelBorder" BorderThickness="1,1,0,1" CornerRadius="3,3,3,3" Padding="{TemplateBinding Padding}">
                            <Border.BorderBrush>
                                <LinearGradientBrush EndPoint="1.475,0.5" StartPoint="0.02,0.5">
                                    <GradientStop Color="{StaticResource MainColor}" Offset="0" />
                                    <GradientStop Color="#00FFFFFF" Offset="0.704" />
                                </LinearGradientBrush>
                            </Border.BorderBrush>
                            <Border.Background>
                                <SolidColorBrush Color="{StaticResource ControlColor}" />
                            </Border.Background>

                            <Grid>

                                <Border BorderThickness="1,1,0,1" CornerRadius="1,1,1,1" x:Name="InnerBorder">
                                    <Border.BorderBrush>
                                        <LinearGradientBrush EndPoint="0.859,0.5" StartPoint="0.02,0.5">
                                            <GradientStop Color="{StaticResource MainColor}" Offset="0" />
                                            <GradientStop Color="#00FFFFFF" Offset="0.844" />
                                        </LinearGradientBrush>
                                    </Border.BorderBrush>
                                </Border>

                                <DockPanel KeyboardNavigation.TabIndex="1" KeyboardNavigation.TabNavigation="Local">
                                    <Thumb Padding="6,5,1,6" Margin="-3,-1,0,0" x:Name="ToolBarThumb" Style="{StaticResource ToolBarThumbStyle}" Width="10" />
                                    <ContentPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" HorizontalAlignment="Center" Margin="4,0,4,0" x:Name="ToolBarHeader" VerticalAlignment="Center" ContentSource="Header" />
                                    <Grid>
                                        <Border HorizontalAlignment="Stretch" Width="Auto">
                                            <Border.Background>
                                                <SolidColorBrush Color="{StaticResource TopGradient}" />
                                            </Border.Background>
                                        </Border>
                                        <ToolBarPanel SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" Margin="0,1,0,1" x:Name="PART_ToolBarPanel" IsItemsHost="true" Background="{x:Null}" />
                                        <Grid HorizontalAlignment="Right" x:Name="OverflowGrid" Width="13" Margin="0,-1,-7.11,-1">
                                            <ToggleButton IsEnabled="{TemplateBinding HasOverflowItems}" FocusVisualStyle="{x:Null}" x:Name="OverflowButton" Style="{StaticResource ToolBarHorizontalOverflowButtonStyle}" ClickMode="Press" IsChecked="{Binding Path=IsOverflowOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" Margin="0,0,0,0" />
                                            <Popup Focusable="false" AllowsTransparency="true" IsOpen="{Binding Path=IsOverflowOpen, RelativeSource={RelativeSource TemplatedParent}}" Placement="Bottom" PopupAnimation="{StaticResource {x:Static SystemParameters.ComboBoxPopupAnimationKey}}" StaysOpen="False" x:Name="OverflowPopup">
                                                <Border x:Name="Shdw">
                                                    <Border BorderThickness="1,1,1,1">
                                                        <Border.BorderBrush>
                                                            <SolidColorBrush Color="{StaticResource BlackColor}" />
                                                        </Border.BorderBrush>
                                                        <Border.Background>
                                                            <SolidColorBrush Color="{StaticResource TopGradient}" />
                                                        </Border.Background>
                                                        <ToolBarOverflowPanel Focusable="true" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" FocusVisualStyle="{x:Null}" Margin="2" x:Name="PART_ToolBarOverflowPanel" WrapWidth="200" KeyboardNavigation.DirectionalNavigation="Cycle" KeyboardNavigation.TabNavigation="Cycle" />
                                                    </Border>
                                                </Border>
                                            </Popup>
                                        </Grid>
                                        <Border CornerRadius="0,0,0,0" x:Name="TopWhite" Grid.ColumnSpan="2" IsHitTestVisible="False">
                                            <Border.Background>
                                                <RadialGradientBrush>
                                                    <RadialGradientBrush.RelativeTransform>
                                                        <TransformGroup>
                                                            <ScaleTransform CenterX="0.5" CenterY="0.5" ScaleX="1.336" ScaleY="1.269" />
                                                            <SkewTransform AngleX="0" AngleY="0" CenterX="0.5" CenterY="0.5" />
                                                            <RotateTransform Angle="0" CenterX="0.5" CenterY="0.5" />
                                                            <TranslateTransform X="-0.269" Y="-0.428" />
                                                        </TransformGroup>
                                                    </RadialGradientBrush.RelativeTransform>
                                                    <GradientStop Color="#63FDFDFD" Offset="0" />
                                                    <GradientStop Color="#00FFFFFF" Offset="0.789" />
                                                </RadialGradientBrush>
                                            </Border.Background>
                                        </Border>
                                    </Grid>
                                </DockPanel>
                            </Grid>
                        </Border>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsOverflowOpen" Value="true">
                            <Setter Property="IsEnabled" TargetName="ToolBarThumb" Value="false" />
                        </Trigger>
                        <Trigger Property="Header" Value="{x:Null}">
                            <Setter Property="Visibility" TargetName="ToolBarHeader" Value="Collapsed" />
                        </Trigger>
                        <Trigger Property="ToolBarTray.IsLocked" Value="true">
                            <Setter Property="Visibility" TargetName="ToolBarThumb" Value="Collapsed" />
                        </Trigger>
                        <Trigger Property="Orientation" Value="Vertical">
                            <Setter Property="Margin" TargetName="Grid" Value="1,3,1,1" />
                            <Setter Property="Height" TargetName="ToolBarThumb" Value="10" />
                            <Setter Property="Width" TargetName="ToolBarThumb" Value="Auto" />
                            <Setter Property="Margin" TargetName="ToolBarThumb" Value="-1,-3,0,0" />
                            <Setter Property="Padding" TargetName="ToolBarThumb" Value="5,6,6,1" />
                            <Setter Property="Margin" TargetName="ToolBarHeader" Value="0,0,0,4" />
                            <Setter Property="Margin" TargetName="PART_ToolBarPanel" Value="1,0,2,2" />
                            <Setter Property="DockPanel.Dock" TargetName="ToolBarThumb" Value="Top" />
                            <Setter Property="DockPanel.Dock" TargetName="ToolBarHeader" Value="Top" />
                            <Setter Property="Margin" TargetName="MainPanelBorder" Value="0,0,0,11" />
                            <Setter Property="Background" Value="{StaticResource ToolBarVerticalBackground}" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Foreground" Value="{StaticResource {x:Static SystemColors.GrayTextBrushKey}}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="Foreground">
            <Setter.Value>
                <SolidColorBrush Color="{StaticResource MainColor}" />
            </Setter.Value>
        </Setter>
    </Style>
	
	<Style x:Key="TransparentButton" TargetType="{x:Type Button}">
            <Setter Property="FocusVisualStyle" Value="{StaticResource ButtonFocusVisual}"/>
            <Setter Property="Background" Value="{StaticResource ButtonNormalBackground}"/>
            <Setter Property="BorderBrush" Value="{StaticResource ButtonNormalBorder}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Padding" Value="1"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Themes:ButtonChrome x:Name="Chrome" SnapsToDevicePixels="true" BorderBrush="{TemplateBinding BorderBrush}" RenderDefaulted="{TemplateBinding IsDefaulted}" RenderMouseOver="{TemplateBinding IsMouseOver}" RenderPressed="{TemplateBinding IsPressed}">
                            <Themes:ButtonChrome.Background>
                                <LinearGradientBrush EndPoint="0,1" StartPoint="0,0">
                                    <GradientStop Color="#19F3F3F3" Offset="0"/>
                                    <GradientStop Color="#4CEBEBEB" Offset="0.5"/>
                                    <GradientStop Color="#33DDDDDD" Offset="0.5"/>
                                    <GradientStop Color="#19CDCDCD" Offset="1"/>
                                </LinearGradientBrush>
                            </Themes:ButtonChrome.Background>
                            <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" RecognizesAccessKey="True"/>
                        </Themes:ButtonChrome>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsKeyboardFocused" Value="true">
                                <Setter Property="RenderDefaulted" TargetName="Chrome" Value="true"/>
                            </Trigger>
                            <Trigger Property="ToggleButton.IsChecked" Value="true">
                                <Setter Property="RenderPressed" TargetName="Chrome" Value="true"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Foreground" Value="#ADADAD"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
	
	<Style x:Key="RoundedButtonStyle" TargetType="{x:Type Button}">
        	<Setter Property="SnapsToDevicePixels" Value="true"/>
        	<Setter Property="OverridesDefaultStyle" Value="true"/>
        	<Setter Property="FocusVisualStyle" Value="{StaticResource ButtonFocusVisual}"/>
        	<Setter Property="MinHeight" Value="23"/>
        	<Setter Property="HorizontalContentAlignment" Value="Stretch" />
        	<Setter Property="MinWidth" Value="35"/>
        	<Setter Property="Foreground" Value="#FFEDEDED"/>
        	<Setter
        		Property="ContentTemplate">
        		<Setter.Value>
        			<DataTemplate>
        				<Grid>
        					<Image
        						Source="{Binding Path=(local:ButtonImage.Image), RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Button}}}"
        						HorizontalAlignment="Left"
        						Margin="8,0,0,0"
        						Height="16"
        						Width="16" />
        					<TextBlock 
        						Text="{TemplateBinding Content}"
        						HorizontalAlignment="Center" />
        				</Grid>
        			</DataTemplate>
        		</Setter.Value>
        	</Setter>
        	<Setter Property="Template">
        		<Setter.Value>
        			<ControlTemplate TargetType="{x:Type Button}">
        				<Border 
        					x:Name="Border"  
        					CornerRadius="10" 
        					BorderThickness="1">
        					<Border.BorderBrush>
        						<LinearGradientBrush EndPoint="0,1" StartPoint="0,0">
        							<GradientStop Color="#FFD8D8D8" Offset="0"/>
        							<GradientStop Color="#FF000000" Offset="1"/>
        							<GradientStop Color="#FF0E0E0E" Offset="0.04"/>
        						</LinearGradientBrush>
        					</Border.BorderBrush>
        					<Border.Background>
        						<LinearGradientBrush EndPoint="0,1" StartPoint="0,0">
        							<GradientStop Color="#FF978F8F" Offset="0"/>
        							<GradientStop Color="#FF473F3F" Offset="1"/>
        							<GradientStop Color="#FF2F2C2C" Offset="0.543"/>
        							<GradientStop Color="#FF1C1A1A" Offset="0.78"/>
        						</LinearGradientBrush>
        					</Border.Background>
        					<ContentPresenter 
        						Margin="2"
        						HorizontalAlignment="Stretch"
        						VerticalAlignment="Center"
        						RecognizesAccessKey="True"/>
        				</Border>
        				<ControlTemplate.Triggers>
        					<Trigger Property="IsKeyboardFocused" Value="true">
        						<Setter TargetName="Border" Property="BorderBrush" Value="{StaticResource DefaultedBorderBrush}" />
        					</Trigger>
        					<Trigger Property="IsDefaulted" Value="true">
        						<Setter TargetName="Border" Property="BorderBrush" Value="{StaticResource DefaultedBorderBrush}" />
        					</Trigger>
        					<Trigger Property="IsMouseOver" Value="true">
        						<Setter TargetName="Border" Property="Background" Value="{StaticResource DarkBrush}" />
        					</Trigger>
        					<Trigger Property="IsPressed" Value="true">
        						<Setter TargetName="Border" Property="Background" Value="{StaticResource PressedBrush}" />
        						<Setter TargetName="Border" Property="BorderBrush" Value="{StaticResource PressedBorderBrush}" />
        					</Trigger>
        					<Trigger Property="IsEnabled" Value="false">
        						<Setter TargetName="Border" Property="Background" Value="{StaticResource DisabledBackgroundBrush}" />
        						<Setter TargetName="Border" Property="BorderBrush" Value="{StaticResource DisabledBorderBrush}" />
        						<Setter Property="Foreground" Value="{StaticResource DisabledForegroundBrush}"/>
        					</Trigger>
        				</ControlTemplate.Triggers>
        			</ControlTemplate>
        		</Setter.Value>
        	</Setter>
        </Style>
    
    <Style TargetType="{x:Type ToggleButton}">
        <Setter Property="FocusVisualStyle" Value="{StaticResource ButtonFocusVisual}" />
        <Setter Property="Background" Value="{StaticResource ButtonNormalBackground}" />
        <Setter Property="BorderBrush" Value="{StaticResource ButtonNormalBorder}" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="Foreground">
            <Setter.Value>
                <SolidColorBrush Color="{StaticResource WhiteColor}" />
            </Setter.Value>
        </Setter>
        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="Padding" Value="1" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <ControlTemplate.Resources>
                        <Storyboard x:Key="HoverOn">
                            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="Hover" Storyboard.TargetProperty="(UIElement.Opacity)">
                                <SplineDoubleKeyFrame KeyTime="00:00:00.1000000" Value="0.2" />
                            </DoubleAnimationUsingKeyFrames>
                        </Storyboard>
                        <Storyboard x:Key="HoverOff">
                            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="Hover" Storyboard.TargetProperty="(UIElement.Opacity)">
                                <SplineDoubleKeyFrame KeyTime="00:00:00.3000000" Value="0" />
                            </DoubleAnimationUsingKeyFrames>
                        </Storyboard>
                        <Storyboard x:Key="PressedOn">
                            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="Hover" Storyboard.TargetProperty="(UIElement.Opacity)">
                                <SplineDoubleKeyFrame KeyTime="00:00:00.1000000" Value="0.5" />
                            </DoubleAnimationUsingKeyFrames>
                            <ColorAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="Hover" Storyboard.TargetProperty="(UIElement.OpacityMask).(GradientBrush.GradientStops)[2].(GradientStop.Color)">
                                <SplineColorKeyFrame KeyTime="00:00:00.1000000" Value="#00020202" />
                            </ColorAnimationUsingKeyFrames>
                        </Storyboard>
                        <Storyboard x:Key="PressedOff">
                            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="Hover" Storyboard.TargetProperty="(UIElement.Opacity)">
                                <SplineDoubleKeyFrame KeyTime="00:00:00.3000000" Value="0" />
                            </DoubleAnimationUsingKeyFrames>
                            <ColorAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="Hover" Storyboard.TargetProperty="(UIElement.OpacityMask).(GradientBrush.GradientStops)[2].(GradientStop.Color)">
                                <SplineColorKeyFrame KeyTime="00:00:00.3000000" Value="#D8020202" />
                            </ColorAnimationUsingKeyFrames>
                        </Storyboard>
                        <Storyboard x:Key="CheckedOn">
                            <ColorAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="Checked" Storyboard.TargetProperty="(Panel.Background).(GradientBrush.GradientStops)[0].(GradientStop.Color)">
                                <SplineColorKeyFrame KeyTime="00:00:00.1000000" Value="#B2000000" />
                            </ColorAnimationUsingKeyFrames>
                            <ColorAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="Checked" Storyboard.TargetProperty="(Panel.Background).(GradientBrush.GradientStops)[1].(GradientStop.Color)">
                                <SplineColorKeyFrame KeyTime="00:00:00.1000000" Value="#B2000000" />
                            </ColorAnimationUsingKeyFrames>
                            <ColorAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="Checked" Storyboard.TargetProperty="(Panel.Background).(GradientBrush.GradientStops)[4].(GradientStop.Color)">
                                <SplineColorKeyFrame KeyTime="00:00:00.1000000" Value="#00000000" />
                            </ColorAnimationUsingKeyFrames>
                            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="Checked" Storyboard.TargetProperty="(UIElement.Opacity)">
                                <SplineDoubleKeyFrame KeyTime="00:00:00.1000000" Value="1" />
                            </DoubleAnimationUsingKeyFrames>
                        </Storyboard>
                        <Storyboard x:Key="CheckedOff">
                            <ColorAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="Checked" Storyboard.TargetProperty="(Panel.Background).(GradientBrush.GradientStops)[0].(GradientStop.Color)">
                                <SplineColorKeyFrame KeyTime="00:00:00.3000000" Value="#00000000" />
                            </ColorAnimationUsingKeyFrames>
                            <ColorAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="Checked" Storyboard.TargetProperty="(Panel.Background).(GradientBrush.GradientStops)[1].(GradientStop.Color)">
                                <SplineColorKeyFrame KeyTime="00:00:00.3000000" Value="#00000000" />
                            </ColorAnimationUsingKeyFrames>
                            <ColorAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="Checked" Storyboard.TargetProperty="(Panel.Background).(GradientBrush.GradientStops)[4].(GradientStop.Color)">
                                <SplineColorKeyFrame KeyTime="00:00:00.3000000" Value="#33000000" />
                            </ColorAnimationUsingKeyFrames>
                            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="Checked" Storyboard.TargetProperty="(UIElement.Opacity)">
                                <SplineDoubleKeyFrame KeyTime="00:00:00.3000000" Value="0" />
                            </DoubleAnimationUsingKeyFrames>
                        </Storyboard>
                    </ControlTemplate.Resources>
                    <Grid>

                        <Border CornerRadius="4,4,4,4" x:Name="Shadow" Opacity="0.5" Margin="0,2,0,-3" Effect="{StaticResource EffectBlur}">
                            <Border.Background>
                                <SolidColorBrush Color="{StaticResource BlackColor}" />
                            </Border.Background>
                        </Border>

                        <Border CornerRadius="4,4,4,4" x:Name="BaseLayer">
                            <Border.Background>
                                <SolidColorBrush Color="{StaticResource ControlColor}" />
                            </Border.Background>
                        </Border>
                        <Border CornerRadius="4,4,4,4" x:Name="EdgeCurveLayer">
                            <Border.Background>
                                <LinearGradientBrush EndPoint="0.994,0.5" StartPoint="0.01,0.5">
                                    <GradientStop Color="#00000000" Offset="0" />
                                    <GradientStop Color="#00000000" Offset="1" />
                                    <GradientStop Color="#19000000" Offset="0.203" />
                                    <GradientStop Color="#19000000" Offset="0.81" />
                                    <GradientStop Color="#33000000" Offset="0.5" />
                                </LinearGradientBrush>
                            </Border.Background>
                        </Border>
                        <Border CornerRadius="4,4,4,4" x:Name="BottomWhite">
                            <Border.OpacityMask>
                                <LinearGradientBrush EndPoint="0.995,0.5" StartPoint="0.01,0.5">
                                    <GradientStop Color="#00000000" Offset="0" />
                                    <GradientStop Color="#00000000" Offset="1" />
                                    <GradientStop Color="#FF000000" Offset="0.548" />
                                </LinearGradientBrush>
                            </Border.OpacityMask>
                            <Border.Background>
                                <LinearGradientBrush EndPoint="0.5,0.971" StartPoint="0.5,0.036">
                                    <GradientStop Color="#00000000" Offset="0" />
                                    <GradientStop Color="#19FFFFFF" Offset="1" />
                                    <GradientStop Color="#0C808080" Offset="0.49" />
                                </LinearGradientBrush>
                            </Border.Background>
                        </Border>
                        <Border CornerRadius="4,4,4,4" x:Name="TopWhite" Opacity="0.5">
                            <Border.OpacityMask>
                                <LinearGradientBrush EndPoint="0.991,0.5" StartPoint="0.01,0.5">
                                    <GradientStop Color="#00000000" Offset="0" />
                                    <GradientStop Color="#00060606" Offset="1" />
                                    <GradientStop Color="#D8020202" Offset="0.49" />
                                </LinearGradientBrush>
                            </Border.OpacityMask>
                            <Border.Background>
                                <LinearGradientBrush EndPoint="0.5,0.971" StartPoint="0.5,0.029">
                                    <GradientStop Color="#99FDFDFD" Offset="0" />
                                    <GradientStop Color="#00FFFFFF" Offset="1" />
                                    <GradientStop Color="#4CFDFDFD" Offset="0.513" />
                                </LinearGradientBrush>
                            </Border.Background>
                        </Border>

                        <ContentPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" RecognizesAccessKey="True" HorizontalAlignment="Center" VerticalAlignment="Center" Margin="4,4,4,4" />
                        <Border CornerRadius="4,4,4,4" x:Name="Hover" Opacity="0">
                            <Border.Background>
                                <SolidColorBrush Color="{StaticResource WhiteColor}" />
                            </Border.Background>
                            <Border.OpacityMask>
                                <LinearGradientBrush EndPoint="0.991,0.5" StartPoint="0.01,0.5">
                                    <GradientStop Color="#00000000" Offset="0" />
                                    <GradientStop Color="#00060606" Offset="1" />
                                    <GradientStop Color="#D8020202" Offset="0.49" />
                                </LinearGradientBrush>
                            </Border.OpacityMask>
                        </Border>
                        <Border CornerRadius="4,4,4,4" x:Name="Checked" Opacity="0">
                            <Border.Background>
                                <LinearGradientBrush EndPoint="0.994,0.5" StartPoint="0.01,0.5">
                                    <GradientStop Color="#00000000" Offset="0" />
                                    <GradientStop Color="#00000000" Offset="1" />
                                    <GradientStop Color="#19000000" Offset="0.203" />
                                    <GradientStop Color="#19000000" Offset="0.81" />
                                    <GradientStop Color="#33000000" Offset="0.5" />
                                </LinearGradientBrush>
                            </Border.Background>
                        </Border>
                    </Grid>

                    <ControlTemplate.Triggers>
                        <Trigger Property="IsPressed" Value="True">
                            <Trigger.ExitActions>
                                <BeginStoryboard Storyboard="{StaticResource PressedOff}" x:Name="PressedOff_BeginStoryboard" />
                            </Trigger.ExitActions>
                            <Trigger.EnterActions>
                                <BeginStoryboard Storyboard="{StaticResource PressedOn}" x:Name="PressedOn_BeginStoryboard" />
                            </Trigger.EnterActions>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Trigger.ExitActions>
                                <BeginStoryboard x:Name="HoverOff_BeginStoryboard" Storyboard="{StaticResource HoverOff}" />
                            </Trigger.ExitActions>
                            <Trigger.EnterActions>
                                <BeginStoryboard Storyboard="{StaticResource HoverOn}" />
                            </Trigger.EnterActions>

                        </Trigger>
                        <Trigger Property="IsKeyboardFocused" Value="true" />
                        <Trigger Property="IsChecked" Value="true">
                            <Trigger.ExitActions>
                                <BeginStoryboard Storyboard="{StaticResource CheckedOff}" x:Name="CheckedOff_BeginStoryboard" />
                            </Trigger.ExitActions>
                            <Trigger.EnterActions>
                                <BeginStoryboard Storyboard="{StaticResource CheckedOn}" x:Name="CheckedOn_BeginStoryboard" />
                            </Trigger.EnterActions>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Foreground" Value="#ADADAD" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsChecked" Value="True">
                <Setter Property="Foreground">
                    <Setter.Value>
                        <SolidColorBrush Color="{StaticResource MainColor}" />
                    </Setter.Value>
                </Setter>
            </Trigger>
        </Style.Triggers>
    </Style>
    
    
    <Style TargetType="{x:Type ListView}">
        <Setter Property="Background" Value="{StaticResource {x:Static SystemColors.WindowBrushKey}}" />
        <Setter Property="BorderBrush" Value="{StaticResource ListBorder}" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="Foreground" Value="#FF042271" />
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto" />
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto" />
        <Setter Property="ScrollViewer.CanContentScroll" Value="true" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ListView}">
                    <Grid>
                        <Border x:Name="Bd" CornerRadius="4,4,4,4" BorderThickness="1,1,1,1" Margin="0,0,0,0" Background="{StaticResource ListBackgroundBrush}" Effect="{StaticResource EffectBlur}">
                            <Border.BorderBrush>
                                <SolidColorBrush Color="{StaticResource BlackColor}" />
                            </Border.BorderBrush>

                        </Border>
                        <ScrollViewer Style="{StaticResource {x:Static GridView.GridViewScrollViewerStyleKey}}" Padding="0,0,0,6">
                            <ItemsPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                        </ScrollViewer>

                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsGrouping" Value="true">
                            <Setter Property="ScrollViewer.CanContentScroll" Value="false" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Background" TargetName="Bd" Value="{StaticResource {x:Static SystemColors.ControlBrushKey}}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type ListViewItem}">
        <Setter Property="FocusVisualStyle" Value="{StaticResource ListViewItemFocusVisual}" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="BorderBrush" Value="Transparent" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="Margin" Value="0,0,0,1" />
        <Setter Property="Padding" Value="5,2,5,2" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ListViewItem}">
                    <ControlTemplate.Resources>
                        <Storyboard x:Key="HoverOn">
                            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="contentPresenterHover" Storyboard.TargetProperty="(UIElement.Opacity)">
                                <SplineDoubleKeyFrame KeyTime="00:00:00.2000000" Value="1" />
                            </DoubleAnimationUsingKeyFrames>
                            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="contentPresenterHover" Storyboard.TargetProperty="(UIElement.Effect).(DropShadowEffect.Opacity)">
                                <SplineDoubleKeyFrame KeyTime="00:00:00.2000000" Value="1" />
                            </DoubleAnimationUsingKeyFrames>
                        </Storyboard>
                        <Storyboard x:Key="HoverOff">
                            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="contentPresenterHover" Storyboard.TargetProperty="(UIElement.Opacity)">
                                <SplineDoubleKeyFrame KeyTime="00:00:00.3000000" Value="0" />
                            </DoubleAnimationUsingKeyFrames>
                        </Storyboard>
                        <Storyboard x:Key="SelectedOn">
                            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="contentPresenter" Storyboard.TargetProperty="(UIElement.Effect).(DropShadowEffect.Opacity)">
                                <SplineDoubleKeyFrame KeyTime="00:00:00.1000000" Value="1" />
                            </DoubleAnimationUsingKeyFrames>
                            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="Selected" Storyboard.TargetProperty="(UIElement.Opacity)">
                                <SplineDoubleKeyFrame KeyTime="00:00:00.1000000" Value="1" />
                            </DoubleAnimationUsingKeyFrames>
                        </Storyboard>
                        <Storyboard x:Key="SelectedOff">
                            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="Selected" Storyboard.TargetProperty="(UIElement.Opacity)">
                                <SplineDoubleKeyFrame KeyTime="00:00:00.3000000" Value="0" />
                            </DoubleAnimationUsingKeyFrames>
                            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="contentPresenter" Storyboard.TargetProperty="(UIElement.Effect).(DropShadowEffect.Opacity)">
                                <SplineDoubleKeyFrame KeyTime="00:00:00.3000000" Value="0" />
                            </DoubleAnimationUsingKeyFrames>
                        </Storyboard>
                        <Storyboard x:Key="HoverSelectedOn">
                            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="contentPresenterSelected" Storyboard.TargetProperty="(UIElement.Opacity)">
                                <SplineDoubleKeyFrame KeyTime="00:00:00.1000000" Value="1" />
                            </DoubleAnimationUsingKeyFrames>
                        </Storyboard>
                        <Storyboard x:Key="HoverSelectedOff">
                            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="contentPresenterSelected" Storyboard.TargetProperty="(UIElement.Opacity)">
                                <SplineDoubleKeyFrame KeyTime="00:00:00.3000000" Value="0" />
                            </DoubleAnimationUsingKeyFrames>
                        </Storyboard>
                    </ControlTemplate.Resources>
                    <Border SnapsToDevicePixels="true" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="2" x:Name="border">

                        <Grid Margin="2,0,2,0">
                            <Border x:Name="Border" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" />
                            <Border x:Name="Selected" Opacity="0" Background="#4C000000" BorderThickness="1,1,1,1" CornerRadius="2,2,2,2" Visibility="Collapsed">
                                <Border.BorderBrush>
                                    <SolidColorBrush Color="{StaticResource MainColor}" />
                                </Border.BorderBrush>
                                <Border BorderThickness="1,1,1,1" CornerRadius="1,1,1,1">
                                    <Border.BorderBrush>
                                        <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                            <GradientStop Color="#FF000000" Offset="0" />
                                            <GradientStop Color="#FFFFFFFF" Offset="1" />
                                            <GradientStop Color="#FF616161" Offset="0.219" />
                                        </LinearGradientBrush>
                                    </Border.BorderBrush>
                                </Border>
                            </Border>

                            <GridViewRowPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" Margin="5,2,0,2" VerticalAlignment="Stretch" x:Name="contentPresenter">
                                <GridViewRowPresenter.Effect>
                                    <DropShadowEffect Color="{StaticResource MainColor}" Opacity="0" BlurRadius="4" ShadowDepth="0" />
                                </GridViewRowPresenter.Effect>
                            </GridViewRowPresenter>
                            <GridViewRowPresenter Margin="5,2,1,2" x:Name="contentPresenterHover" VerticalAlignment="Center" d:LayoutOverrides="Height" Opacity="0">
                                <GridViewRowPresenter.Effect>
                                    <DropShadowEffect Color="{StaticResource MainColor}" Opacity="1" BlurRadius="10" ShadowDepth="0" />
                                </GridViewRowPresenter.Effect>
                            </GridViewRowPresenter>
                            <GridViewRowPresenter Margin="5,2,1,2" x:Name="contentPresenterSelected" VerticalAlignment="Center" d:LayoutOverrides="Height" Opacity="0">
                                <GridViewRowPresenter.Effect>
                                    <DropShadowEffect Color="{StaticResource MainColor}" Opacity="1" BlurRadius="10" ShadowDepth="0" />
                                </GridViewRowPresenter.Effect>
                            </GridViewRowPresenter>

                        </Grid>

                    </Border>
                    <ControlTemplate.Triggers>
                        <MultiTrigger>
                            <MultiTrigger.ExitActions>
                                <BeginStoryboard Storyboard="{StaticResource HoverSelectedOff}" x:Name="HoverSelectedOff_BeginStoryboard" />
                            </MultiTrigger.ExitActions>
                            <MultiTrigger.EnterActions>
                                <BeginStoryboard Storyboard="{StaticResource HoverSelectedOn}" x:Name="HoverSelectedOn_BeginStoryboard" />
                            </MultiTrigger.EnterActions>
                            <MultiTrigger.Conditions>
                                <Condition Property="Selector.IsSelected" Value="True" />
                                <Condition Property="IsMouseOver" Value="True" />
                            </MultiTrigger.Conditions>
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsMouseOver" Value="True" />
                                <Condition Property="Selector.IsSelected" Value="False" />
                            </MultiTrigger.Conditions>
                            <MultiTrigger.ExitActions>
                                <BeginStoryboard x:Name="HoverOff_BeginStoryboard" Storyboard="{StaticResource HoverOff}" />
                            </MultiTrigger.ExitActions>
                            <MultiTrigger.EnterActions>
                                <BeginStoryboard Storyboard="{StaticResource HoverOn}" />
                            </MultiTrigger.EnterActions>
                        </MultiTrigger>

                        <Trigger Property="IsSelected" Value="true">
                            <Trigger.ExitActions>
                                <BeginStoryboard x:Name="SelectedOff_BeginStoryboard" Storyboard="{StaticResource SelectedOff}" />
                            </Trigger.ExitActions>
                            <Trigger.EnterActions>
                                <BeginStoryboard x:Name="SelectedOn_BeginStoryboard" Storyboard="{StaticResource SelectedOn}" />
                            </Trigger.EnterActions>
                        </Trigger>

                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Foreground" Value="{StaticResource DisabledForegroundBrush}" />
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsSelected" Value="true" />
                                <Condition Property="Selector.IsSelectionActive" Value="false" />
                            </MultiTrigger.Conditions>

                        </MultiTrigger>

                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="Foreground">
            <Setter.Value>
                <SolidColorBrush Color="{StaticResource WhiteColor}" />
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="Selector.IsSelected" Value="True">
                <Setter Property="Foreground">
                    <Setter.Value>
                        <SolidColorBrush Color="{StaticResource MainColor}" />
                    </Setter.Value>
                </Setter>
            </Trigger>
        </Style.Triggers>
    </Style>


    <Style TargetType="{x:Type Button}">
        <Setter Property="SnapsToDevicePixels" Value="true"/>
        <Setter Property="OverridesDefaultStyle" Value="true"/>
        <Setter Property="FocusVisualStyle" Value="{StaticResource ButtonFocusVisual}"/>
        <Setter Property="MinHeight" Value="23"/>
        <Setter Property="HorizontalContentAlignment" Value="Stretch" />
        <Setter Property="MinWidth" Value="35"/>
        <Setter Property="Foreground" Value="#FFEDEDED"/>
        <Setter
      Property="ContentTemplate">
            <Setter.Value>
                <DataTemplate>
                    <Grid>
                        <Image
              Source="{Binding Path=(local:ButtonImage.Image), RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Button}}}"
              HorizontalAlignment="Left"
              Margin="8,0,0,0"
              Height="16"
              Width="16" />
                        <TextBlock 
              Text="{TemplateBinding Content}"
              HorizontalAlignment="Center" />
                    </Grid>
                </DataTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border 
          x:Name="Border"  
          CornerRadius="0" 
          BorderThickness="1">
                        <Border.BorderBrush>
                            <LinearGradientBrush EndPoint="0,1" StartPoint="0,0">
                                <GradientStop Color="#FFD8D8D8" Offset="0"/>
                                <GradientStop Color="#FF000000" Offset="1"/>
                                <GradientStop Color="#FF0E0E0E" Offset="0.04"/>
                            </LinearGradientBrush>
                        </Border.BorderBrush>
                        <Border.Background>
                            <LinearGradientBrush EndPoint="0,1" StartPoint="0,0">
                                <GradientStop Color="#FF605D5D" Offset="0"/>
                                <GradientStop Color="#FF161414" Offset="1"/>
                                <GradientStop Color="#FF2F2C2C" Offset="0.629"/>
                            </LinearGradientBrush>
                        </Border.Background>
                        <ContentPresenter 
            Margin="2"
            HorizontalAlignment="Stretch"
            VerticalAlignment="Center"
            RecognizesAccessKey="True"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsKeyboardFocused" Value="true">
                            <Setter TargetName="Border" Property="BorderBrush" Value="{StaticResource DefaultedBorderBrush}" />
                        </Trigger>
                        <Trigger Property="IsDefaulted" Value="true">
                            <Setter TargetName="Border" Property="BorderBrush" Value="{StaticResource DefaultedBorderBrush}" />
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter TargetName="Border" Property="Background" Value="{StaticResource DarkBrush}" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="true">
                            <Setter TargetName="Border" Property="Background" Value="{StaticResource PressedBrush}" />
                            <Setter TargetName="Border" Property="BorderBrush" Value="{StaticResource PressedBorderBrush}" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter TargetName="Border" Property="Background" Value="{StaticResource DisabledBackgroundBrush}" />
                            <Setter TargetName="Border" Property="BorderBrush" Value="{StaticResource DisabledBorderBrush}" />
                            <Setter Property="Foreground" Value="{StaticResource DisabledForegroundBrush}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    
    <!-- Custom-->

    <Style TargetType="MediaObjects:DesignContentControl">
        <Setter Property="SnapsToDevicePixels" Value="true"/>
        <Setter Property="RenderTransformOrigin" Value="0.5,0.5"/>
        <!--<Setter Property="IsSelected" Value="true"/>
        <Setter Property="IsLocked" Value="false"/>-->
        <Setter Property="ClipContent" Value="True" />
        <Setter Property="GlassOpacity" Value="0" />
        <Setter Property="ContentZIndex" Value="0" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="MediaObjects:DesignContentControl">
                    <Grid DataContext="{Binding RelativeSource={RelativeSource TemplatedParent}}">
                        <Border Background="{TemplateBinding ContentBackground}" IsHitTestVisible="False"
                            CornerRadius="{TemplateBinding CornerRadius}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                                x:Name="PART_Border">
                            <!---->
                            <ContentControl x:Name="PART_TopLeftContentControl"
                                            HorizontalAlignment="Stretch" VerticalAlignment="Stretch" HorizontalContentAlignment="Stretch" VerticalContentAlignment="Stretch">
                                <ContentControl.Clip>
                                    <RectangleGeometry x:Name="PART_TopLeftClip" />
                                </ContentControl.Clip>

                                <ContentControl x:Name="PART_TopRightContentControl"  
                                            HorizontalAlignment="Stretch" VerticalAlignment="Stretch" HorizontalContentAlignment="Stretch" VerticalContentAlignment="Stretch" >
                                    <ContentControl.Clip>
                                        <RectangleGeometry x:Name="PART_TopRightClip" />
                                    </ContentControl.Clip>

                                    <ContentControl x:Name="PART_BottomRightContentControl" 
                                                HorizontalAlignment="Stretch" VerticalAlignment="Stretch" HorizontalContentAlignment="Stretch" VerticalContentAlignment="Stretch" >
                                        <ContentControl.Clip>
                                            <RectangleGeometry x:Name="PART_BottomRightClip" />
                                        </ContentControl.Clip>

                                        <ContentControl x:Name="PART_BottomLeftContentControl" 
                                                    HorizontalAlignment="Stretch" VerticalAlignment="Stretch" HorizontalContentAlignment="Stretch" VerticalContentAlignment="Stretch" >
                                            <ContentControl.Clip>
                                                <RectangleGeometry x:Name="PART_BottomLeftClip" />
                                            </ContentControl.Clip>

                                            <Grid>
                                                <Grid.RowDefinitions>
                                                    <RowDefinition Height="*" />
                                                    <RowDefinition Height="*" />
                                                </Grid.RowDefinitions>
                                                    <Rectangle IsHitTestVisible="False" Grid.RowSpan="2" Grid.Row="0"/>
                                                    <Border IsHitTestVisible="False" Opacity="{TemplateBinding GlassOpacity}" Grid.Row="1" Grid.RowSpan="1" Margin="0">
													<Border.Background>
														<RadialGradientBrush Center="0.5,1.2" GradientOrigin="0.5,1.2" RadiusY="1.122" RadiusX="0.50">
															<GradientStop Color="#66FCFCFC"/>
															<GradientStop Offset="1"/>
														</RadialGradientBrush>
													</Border.Background></Border>
                                                    <ContentPresenter Content="{TemplateBinding MediaObjects:DesignContentControl.Content}" Margin="{TemplateBinding Padding}" Canvas.ZIndex="{TemplateBinding ContentZIndex}" Grid.RowSpan="2"/>
                                                        
                                                    <Border x:Name="PART_LeftGlow" Grid.RowSpan="2" Grid.Row="0" IsHitTestVisible="False" Canvas.ZIndex="0"
                                    Opacity="{TemplateBinding InnerGlowOpacity}"
                                    HorizontalAlignment="Left" VerticalAlignment="Stretch"
                                    Width="10">
                                <Border.Background>
                                    <LinearGradientBrush StartPoint="0, 0.5" EndPoint="1, 0.5">
                                        <GradientStop Offset="0" Color="#ff000000" x:Name="PART_LeftGlowStop0" />
                                        <GradientStop Offset="1" Color="#00000000" x:Name="PART_LeftGlowStop1" />
                                    </LinearGradientBrush>
                                </Border.Background>
                            </Border>
                            <Border x:Name="PART_TopGlow" Grid.RowSpan="2" Grid.Row="0" IsHitTestVisible="False" Canvas.ZIndex="0"
                                    Opacity="{TemplateBinding InnerGlowOpacity}"
                                    HorizontalAlignment="Stretch" VerticalAlignment="Top"
                                    Height="10">
                                <Border.Background>
                                    <LinearGradientBrush StartPoint="0.5, 0" EndPoint="0.5, 1">
                                        <GradientStop Offset="0" Color="#ff000000" x:Name="PART_TopGlowStop0" />
                                        <GradientStop Offset="1" Color="#00000000" x:Name="PART_TopGlowStop1" />
                                    </LinearGradientBrush>
                                </Border.Background>
                            </Border>
                            <Border x:Name="PART_RightGlow" Grid.RowSpan="2" Grid.Row="0" IsHitTestVisible="False" Canvas.ZIndex="0"
                                    Opacity="{TemplateBinding InnerGlowOpacity}"
                                    HorizontalAlignment="Right" VerticalAlignment="Stretch"
                                    Width="10">
                                <Border.Background>
                                    <LinearGradientBrush StartPoint="1, 0.5" EndPoint="0, 0.5">
                                        <GradientStop Offset="0" Color="#ff000000" x:Name="PART_RightGlowStop0" />
                                        <GradientStop Offset="1" Color="#00000000" x:Name="PART_RightGlowStop1" />
                                    </LinearGradientBrush>
                                </Border.Background>
                            </Border>
                            <Border x:Name="PART_BottomGlow" Grid.RowSpan="2" Grid.Row="0" IsHitTestVisible="False" Canvas.ZIndex="0"
                                    Opacity="{TemplateBinding InnerGlowOpacity}"
                                    HorizontalAlignment="Stretch" VerticalAlignment="Bottom"
                                    Height="10">
                                <Border.Background>
                                    <LinearGradientBrush StartPoint="0.5, 1" EndPoint="0.5, 0">
                                        <GradientStop Offset="0" Color="#ff000000" x:Name="PART_BottomGlowStop0" />
                                        <GradientStop Offset="1" Color="#00000000" x:Name="PART_BottomGlowStop1" />
                                    </LinearGradientBrush>
                                </Border.Background>
                            </Border>
                                                
                                                    <Border IsHitTestVisible="False" Opacity="{TemplateBinding GlassOpacity}" Grid.Row="0" Grid.RowSpan="1"><!--Margin="1,1,1,0"-->
                                                    <Border.Background>
                                                        <LinearGradientBrush StartPoint="0.5,0" EndPoint="0.5,1">
                                                            <GradientStop Color="#ffffffff" Offset="0" />
                                                            <GradientStop Color="#C4ffffff" Offset="0.05" />
                                                            <GradientStop Color="#54ffffff" Offset="1" />
                                                        </LinearGradientBrush>
                                                    </Border.Background>
                                                </Border>
                                                </Grid>

                                        </ContentControl>

                                    </ContentControl>

                                </ContentControl>

                            </ContentControl>
                    </Border>
                    </Grid> 
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    
    <Style TargetType="MediaObjects:DesignControlHolder">
        <Setter Property="SnapsToDevicePixels" Value="true"/>
        <Setter Property="RenderTransformOrigin" Value="0.5,0.5"/>
        <Setter Property="IsSelected" Value="true"/>
        <Setter Property="IsLocked" Value="false"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="MediaObjects:DesignControlHolder">
                    <Grid DataContext="{Binding RelativeSource={RelativeSource TemplatedParent}}">
                        <ContentPresenter Content="{TemplateBinding MediaObjects:DesignControlHolder.Content}" Margin="{TemplateBinding Padding}"/>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    
    <Style x:Key="{ComponentResourceKey TypeInTargetAssembly={x:Type local:Filter}, ResourceId=FilterBoxStyle}" TargetType="{x:Type TextBox}">
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type TextBox}">
					<Border BorderThickness="1"
									BorderBrush="Black"
									Background="White"
									CornerRadius="14"
									Padding="5,5,5,3">

						<DockPanel LastChildFill="True">
							<Canvas DockPanel.Dock="Right" VerticalAlignment="Center" HorizontalAlignment="Center" Width="22" Height="22">
								<Path Width="18.053" Height="18.328" Stretch="Fill" Data="M14.247,0.5 C18.112994,0.5 21.247,3.6340067 21.247,7.5 21.247,11.365993 18.112994,14.5 14.247,14.5 12.775757,14.5 11.410525,14.046114 10.356974,13.164231 L2.467133,21.054071 C2.467133,21.054071 1.9140539,21.577999 1.4999938,21.577999 0.94771242,21.577999 0.5,21.130287 0.5,20.578007 0.5,20.163946 1.0529284,19.639868 1.0529284,19.639868 L8.8727176,11.820078 C7.8251028,10.685783 7.2470002,9.1604033 7.2470002,7.5 7.2470002,3.6340067 10.381007,0.5 14.247,0.5 z" Canvas.Left="2.934" Canvas.Top="1.897">
									<Path.Fill>
										<LinearGradientBrush EndPoint="0.879,0.143" StartPoint="0.087,0.909">
											<GradientStop Color="#FF285D68" Offset="0"/>
											<GradientStop Color="#FFE8EEF0" Offset="1"/>
											<GradientStop Color="#FF59A8BA" Offset="0.269"/>
										</LinearGradientBrush>
									</Path.Fill>
									<Path.Stroke>
										<LinearGradientBrush EndPoint="0.849,0.142" StartPoint="0.151,0.858">
											<GradientStop Color="#FF1E605A" Offset="0"/>
											<GradientStop Color="#FF6CE4D8" Offset="1"/>
										</LinearGradientBrush>
									</Path.Stroke>
								</Path>
							</Canvas>
							<Grid>
																								
								<TextBlock x:Name="staticSearchText"
													 VerticalAlignment="Center"
													 FontStyle="Italic"
													 Foreground="Gray"
													 Margin="2,0,0,0" />
								
								<ScrollViewer x:Name="PART_ContentHost"
															VerticalAlignment="Center"
															Background="Transparent"
															BorderThickness="0"
															SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
								
							</Grid>
						</DockPanel>
					</Border>

					<ControlTemplate.Triggers>
						<MultiTrigger>
							<MultiTrigger.Conditions>
								<Condition Property="IsFocused" Value="False" />
								<Condition Property="Text" Value="" />
							</MultiTrigger.Conditions>
							<Setter TargetName="staticSearchText" Property="Text" Value="Search..." />
						</MultiTrigger>
					</ControlTemplate.Triggers>

				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<Style TargetType="{x:Type local:Filter}">
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type local:Filter}">
					<DockPanel LastChildFill="True">
						<Border x:Name="Bd"
													DockPanel.Dock="Top"
													SnapsToDevicePixels="true"
													Background="{TemplateBinding Background}"
													BorderBrush="{TemplateBinding BorderBrush}"
													BorderThickness="{TemplateBinding BorderThickness}"
													Padding="1">

							<DockPanel LastChildFill="True">

								<TextBox x:Name="PART_FilterBox"
												 Margin="4"
												 DockPanel.Dock="Right"
												 Style="{TemplateBinding FilterBoxStyle}" />

								<!--<ContentPresenter	ContentSource="Header"
																	VerticalAlignment="Center"
																	Margin="8,0,0,0" />-->

							</DockPanel>
						</Border>
						<ContentPresenter />
					</DockPanel>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	
    <!-- Rating Control -->

    <!--  CommonValidationToolTipTemplate  -->
    <ControlTemplate x:Key="CommonValidationToolTipTemplate" TargetType="ToolTip">
        <Grid x:Name="Root" Margin="5,0" RenderTransformOrigin="0,0" Opacity="0">
            <Grid.RenderTransform>
                <TranslateTransform x:Name="Translation" X="-25" />
            </Grid.RenderTransform>

            <VisualStateManager.VisualStateGroups>
                <VisualStateGroup Name="OpenStates">
                    <VisualStateGroup.Transitions>
                        <VisualTransition GeneratedDuration="0" />
                        <VisualTransition To="Open" GeneratedDuration="0:0:0.2">
                            <Storyboard>
                                <DoubleAnimation Storyboard.TargetName="Translation" Storyboard.TargetProperty="X" To="0" Duration="0:0:0.2" />
                                <DoubleAnimation Storyboard.TargetName="Root" Storyboard.TargetProperty="Opacity" To="1" Duration="0:0:0.2" />
                            </Storyboard>
                        </VisualTransition>
                    </VisualStateGroup.Transitions>
                    <VisualState x:Name="Closed">
                        <Storyboard>
                            <DoubleAnimation Storyboard.TargetName="Root" Storyboard.TargetProperty="Opacity" To="0" Duration="0" />
                        </Storyboard>
                    </VisualState>
                    <VisualState x:Name="Open">
                        <Storyboard>
                            <DoubleAnimation Storyboard.TargetName="Translation" Storyboard.TargetProperty="X" To="0" Duration="0" />
                            <DoubleAnimation Storyboard.TargetName="Root" Storyboard.TargetProperty="Opacity" To="1" Duration="0" />
                        </Storyboard>
                    </VisualState>
                </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>

            <Border Margin="4,4,-4,-4" Background="#052A2E31" CornerRadius="5" />
            <Border Margin="3,3,-3,-3" Background="#152A2E31" CornerRadius="4" />
            <Border Margin="2,2,-2,-2" Background="#252A2E31" CornerRadius="3" />
            <Border Margin="1,1,-1,-1" Background="#352A2E31" CornerRadius="2" />

            <Border Background="#FFDC000C" CornerRadius="2">
                <TextBlock Foreground="White" Margin="8,4,8,4" MaxWidth="250" TextWrapping="Wrap" Text="{Binding (Validation.Errors)[0].ErrorContent}" />
            </Border>
        </Grid>
    </ControlTemplate>

    <!--  input:AutoCompleteBox  -->
    <!--<Style TargetType="input:AutoCompleteBox">
        <Setter Property="IsTabStop" Value="False" />
        <Setter Property="Padding" Value="2" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="BorderBrush">
            <Setter.Value>
                <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                    <GradientStop Color="#FFA3AEB9" Offset="0" />
                    <GradientStop Color="#FF8399A9" Offset="0.375" />
                    <GradientStop Color="#FF718597" Offset="0.375" />
                    <GradientStop Color="#FF617584" Offset="1" />
                </LinearGradientBrush>
            </Setter.Value>
        </Setter>
        <Setter Property="Background" Value="#FFFFFFFF" />
        <Setter Property="Foreground" Value="#FF000000" />
        <Setter Property="MinWidth" Value="45" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="input:AutoCompleteBox">
                    <Grid Opacity="{TemplateBinding Opacity}">
                        <TextBox Padding="{TemplateBinding Padding}" Background="{TemplateBinding Background}" IsTabStop="True" x:Name="Text" Style="{TemplateBinding TextBoxStyle}" BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{TemplateBinding BorderBrush}" Foreground="{TemplateBinding Foreground}" Margin="0" />
                        <Border x:Name="ValidationErrorElement" Visibility="Collapsed" BorderBrush="#FFDB000C" BorderThickness="1" CornerRadius="1">
                            <ToolTipService.ToolTip>
                                <ToolTip x:Name="validationTooltip" DataContext="{Binding RelativeSource={RelativeSource TemplatedParent}}" Template="{StaticResource CommonValidationToolTipTemplate}" Placement="Right" PlacementTarget="{Binding RelativeSource={RelativeSource TemplatedParent}}">
                                    <ToolTip.Triggers>
                                        <EventTrigger RoutedEvent="Canvas.Loaded">
                                            <BeginStoryboard>
                                                <Storyboard>
                                                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="validationTooltip" Storyboard.TargetProperty="IsHitTestVisible">
                                                        <DiscreteObjectKeyFrame KeyTime="0">
                                                            <DiscreteObjectKeyFrame.Value>
                                                                <sys:Boolean>true</sys:Boolean>
                                                            </DiscreteObjectKeyFrame.Value>
                                                        </DiscreteObjectKeyFrame>
                                                    </ObjectAnimationUsingKeyFrames>
                                                </Storyboard>
                                            </BeginStoryboard>
                                        </EventTrigger>
                                    </ToolTip.Triggers>
                                </ToolTip>
                            </ToolTipService.ToolTip>
                            <Grid Height="12" HorizontalAlignment="Right" Margin="1,-4,-4,0" VerticalAlignment="Top" Width="12" Background="Transparent">
                                <Path Fill="#FFDC000C" Margin="1,3,0,0" Data="M 1,0 L6,0 A 2,2 90 0 1 8,2 L8,7 z" />
                                <Path Fill="#ffffff" Margin="1,3,0,0" Data="M 0,0 L2,0 L 8,6 L8,8" />
                            </Grid>
                        </Border>
                        <Popup x:Name="Popup">
                            <Grid Opacity="{TemplateBinding Opacity}" Background="{TemplateBinding Background}" >
                                <Border x:Name="PopupBorder" HorizontalAlignment="Stretch" Opacity="0" BorderThickness="0">
                                    <Border.RenderTransform>
                                        <TranslateTransform X="1" Y="1" />
                                    </Border.RenderTransform>
                                    <Border.Background>
                                        <SolidColorBrush Color="#11000000" />
                                    </Border.Background>
                                    <Border HorizontalAlignment="Stretch" Opacity="1.0" Padding="0" BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{TemplateBinding BorderBrush}" CornerRadius="0">
                                        <Border.RenderTransform>
                                            <TransformGroup>
                                                <TranslateTransform X="-1" Y="-1" />
                                            </TransformGroup>
                                        </Border.RenderTransform>
                                        <Border.Background>
                                            <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                                <GradientStop Color="#FFDDDDDD" Offset="0" />
                                                <GradientStop Color="#AADDDDDD" Offset="1" />
                                            </LinearGradientBrush>
                                        </Border.Background>
                                        <ListBox x:Name="Selector" ScrollViewer.HorizontalScrollBarVisibility="Auto" ScrollViewer.VerticalScrollBarVisibility="Auto" ItemContainerStyle="{TemplateBinding ItemContainerStyle}" Background="{TemplateBinding Background}" Foreground="{TemplateBinding Foreground}" BorderThickness="0" ItemTemplate="{TemplateBinding ItemTemplate}" />
                                    </Border>
                                </Border>
                            </Grid>
                        </Popup>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="PopupStates">
                                <VisualStateGroup.Transitions>
                                    <VisualTransition GeneratedDuration="0:0:0.1" To="PopupOpened" />
                                    <VisualTransition GeneratedDuration="0:0:0.2" To="PopupClosed" />
                                </VisualStateGroup.Transitions>
                                <VisualState x:Name="PopupOpened">
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="PopupBorder" Storyboard.TargetProperty="Opacity" To="1.0" Duration="0:0:0.1" />
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="PopupClosed">
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="PopupBorder" Storyboard.TargetProperty="Opacity" To="0" Duration="0:0:0.2" />
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="ValidationStates">
                                <VisualState x:Name="Valid" />
                                <VisualState x:Name="InvalidUnfocused">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ValidationErrorElement" Storyboard.TargetProperty="Visibility">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="InvalidFocused">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ValidationErrorElement" Storyboard.TargetProperty="Visibility">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="validationTooltip" Storyboard.TargetProperty="IsOpen">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <sys:Boolean>True</sys:Boolean>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>-->

    <!--  inputToolkit:Rating  -->
    <Style TargetType="local:Rating">
        <Setter Property="Background" Value="#FFFFFFFF" />
        <Setter Property="BorderBrush" Value="#FF545454" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="Foreground">
            <Setter.Value>
                <RadialGradientBrush Center="0.548,0.475" GradientOrigin="0.484,0.537">
                    <GradientStop Color="#FFB10000" Offset="1" />
                    <GradientStop Color="#FFF70000" />
                    <GradientStop Color="#FFFA0000" Offset="0.043" />
                </RadialGradientBrush>
            </Setter.Value>
        </Setter>
        <Setter Property="ItemsPanel">
            <Setter.Value>
                <ItemsPanelTemplate>
                    <StackPanel Orientation="Horizontal" />
                </ItemsPanelTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="local:Rating">
                    <Grid x:Name="Root">
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal" />
                                <VisualState x:Name="MouseOver" />
                                <VisualState x:Name="Pressed" />
                                <VisualState x:Name="Disabled" />
                                <VisualState x:Name="ReadOnly">
                                    <Storyboard>
                                        <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00.0010000" Storyboard.TargetName="ReadOnlyVisualElement" Storyboard.TargetProperty="(UIElement.Opacity)">
                                            <SplineDoubleKeyFrame KeyTime="00:00:00" Value="0.03" />
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="FocusStates">
                                <VisualState x:Name="Focused" />
                                <VisualState x:Name="Unfocused" />
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Border Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}">
                            <ItemsPresenter />
                        </Border>
                        <Border x:Name="ReadOnlyVisualElement" IsHitTestVisible="False" Opacity="0" Background="#83FFFFFF" BorderBrush="#A5F7F7F7" BorderThickness="{TemplateBinding BorderThickness}" />
                        <Border x:Name="DisabledVisualElement" IsHitTestVisible="False" Opacity="0" Background="#FF4D4D4D" BorderBrush="#A5F7F7F7" BorderThickness="{TemplateBinding BorderThickness}" />
                        <Rectangle x:Name="FocusVisualElement" StrokeThickness="1" RadiusX="1" RadiusY="1" IsHitTestVisible="false" Visibility="Collapsed" />
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--  inputToolkit:RatingItem  -->
    <Style TargetType="local:RatingItem">
        <Setter Property="BorderBrush" Value="#FF545454" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="local:RatingItem">
                    <Grid Background="{TemplateBinding Background}" Width="20">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="20" />
                            <RowDefinition Height="Auto" />
                        </Grid.RowDefinitions>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal" />
                                <VisualState x:Name="MouseOver">
                                    <Storyboard>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetName="MouseOverRatingItem" Storyboard.TargetProperty="(UIElement.Opacity)">
                                            <SplineDoubleKeyFrame KeyTime="00:00:00" Value="1" />
                                        </DoubleAnimationUsingKeyFrames>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetName="MouseOverHighlight" Storyboard.TargetProperty="(UIElement.Opacity)">
                                            <SplineDoubleKeyFrame KeyTime="00:00:00" Value="0.325" />
                                        </DoubleAnimationUsingKeyFrames>
                                        <ColorAnimationUsingKeyFrames Storyboard.TargetName="MouseOverHighlight" Storyboard.TargetProperty="(Shape.Fill).(SolidColorBrush.Color)">
                                            <SplineColorKeyFrame KeyTime="00:00:00" Value="#FF6E0000" />
                                        </ColorAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Pressed">
                                    <Storyboard>
                                        <ColorAnimationUsingKeyFrames Storyboard.TargetName="PressedRatingItem" Storyboard.TargetProperty="(Shape.Fill).(SolidColorBrush.Color)">
                                            <SplineColorKeyFrame KeyTime="00:00:00" Value="#FFFEFEFE" />
                                        </ColorAnimationUsingKeyFrames>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetName="PressedRatingItem" Storyboard.TargetProperty="(UIElement.Opacity)">
                                            <SplineDoubleKeyFrame KeyTime="00:00:00" Value="0.39" />
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Disabled">
                                    <Storyboard>
                                        <DoubleAnimationUsingKeyFrames  Storyboard.TargetName="DisabledRatingItem" Storyboard.TargetProperty="(UIElement.Opacity)">
                                            <SplineDoubleKeyFrame KeyTime="00:00:00" Value="1" />
                                        </DoubleAnimationUsingKeyFrames>
                                        <DoubleAnimationUsingKeyFrames  Storyboard.TargetName="DisabledRatingItemBackground" Storyboard.TargetProperty="(UIElement.Opacity)">
                                            <SplineDoubleKeyFrame KeyTime="00:00:00" Value="1" />
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="ReadOnly">
                                    <Storyboard>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetName="ReadOnlyRatingItem" Storyboard.TargetProperty="(UIElement.Opacity)">
                                            <SplineDoubleKeyFrame KeyTime="00:00:00" Value="1" />
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="FocusStates">
                                <VisualState x:Name="Focused">
                                    <Storyboard />
                                </VisualState>
                                <VisualState x:Name="Unfocused" />
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="FillStates">
                                <VisualState x:Name="Empty" />
                                <VisualState x:Name="Partial" />
                                <VisualState x:Name="Filled" />
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Border Background="#02FFFFFF" BorderThickness="0" />
                        <Path x:Name="DefaultRatingItem" Fill="White" Stretch="Fill" Stroke="{TemplateBinding BorderBrush}" StrokeLineJoin="Round" StrokeThickness="0.4" VerticalAlignment="Stretch" Opacity="1" Data="M15,0 L18.6,11.373603 L30,11.459046 L20.824955,18.573566 L24.270519,30 L15,23.023449 L5.7294912,30 L9.1750822,18.573566 L0,11.459046 L11.399999,11.373603 z" />
                        <local:LinearClipper RatioVisible="{TemplateBinding DisplayValue}" ExpandDirection="Right">
                            <Path Fill="{TemplateBinding Foreground}" Stretch="Fill" Stroke="{x:Null}" StrokeLineJoin="Round" VerticalAlignment="Stretch" Opacity="1" Data="M15,0 L18.6,11.373603 L30,11.459046 L20.824955,18.573566 L24.270519,30 L15,23.023449 L5.7294912,30 L9.1750822,18.573566 L0,11.459046 L11.399999,11.373603 z" />
                        </local:LinearClipper>
                        <Path x:Name="MouseOverRatingItem" Fill="{TemplateBinding Foreground}" Stretch="Fill" Stroke="{x:Null}" StrokeLineJoin="Round" VerticalAlignment="Stretch" Opacity="0" Data="M15,0 L18.6,11.373603 L30,11.459046 L20.824955,18.573566 L24.270519,30 L15,23.023449 L5.7294912,30 L9.1750822,18.573566 L0,11.459046 L11.399999,11.373603 z" />
                        <Path x:Name="MouseOverHighlight" Fill="#FFFFFFFF" Stretch="Fill" Stroke="{x:Null}" StrokeLineJoin="Round" VerticalAlignment="Stretch" Opacity="0" Data="M15,0 L18.6,11.373603 L30,11.459046 L20.824955,18.573566 L24.270519,30 L15,23.023449 L5.7294912,30 L9.1750822,18.573566 L0,11.459046 L11.399999,11.373603 z" />
                        <Path x:Name="PressedRatingItem" Stretch="Fill" Stroke="{x:Null}" StrokeLineJoin="Round" VerticalAlignment="Stretch" Data="M15,0 L18.6,11.373603 L30,11.459046 L20.824955,18.573566 L24.270519,30 L15,23.023449 L5.7294912,30 L9.1750822,18.573566 L0,11.459046 L11.399999,11.373603 z" Fill="#82000000" Opacity="0" />
                        <Path x:Name="FocusRatingItem" Stretch="Fill" Stroke="#FF6DBDD1" StrokeLineJoin="Round" StrokeThickness="0.01" VerticalAlignment="Stretch" Opacity="0" Data="M15,0 L18.6,11.373603 L30,11.459046 L20.824955,18.573566 L24.270519,30 L15,23.023449 L5.7294912,30 L9.1750822,18.573566 L0,11.459046 L11.399999,11.373603 z" />
                        <Path x:Name="ReadOnlyRatingItem" Fill="#18FFFFFF" Stretch="Fill" Stroke="{TemplateBinding BorderBrush}" StrokeLineJoin="Round" StrokeThickness="0.4" VerticalAlignment="Stretch" Data="M15,0 L18.6,11.373603 L30,11.459046 L20.824955,18.573566 L24.270519,30 L15,23.023449 L5.7294912,30 L9.1750822,18.573566 L0,11.459046 L11.399999,11.373603 z" IsHitTestVisible="False" Opacity="0" />
                        <Path x:Name="DisabledRatingItemBackground" Stretch="Fill" Stroke="{x:Null}" StrokeLineJoin="Round" VerticalAlignment="Stretch" Data="M15,0 L18.6,11.373603 L30,11.459046 L20.824955,18.573566 L24.270519,30 L15,23.023449 L5.7294912,30 L9.1750822,18.573566 L0,11.459046 L11.399999,11.373603 z" Fill="Gainsboro" Opacity="0" />
                        <local:LinearClipper x:Name="DisabledRatingItem" RatioVisible="{TemplateBinding DisplayValue}" ExpandDirection="Right" Opacity="0">
                            <Path Stretch="Fill" Stroke="{x:Null}" StrokeLineJoin="Round" VerticalAlignment="Stretch" Opacity="1" Data="M15,0 L18.6,11.373603 L30,11.459046 L20.824955,18.573566 L24.270519,30 L15,23.023449 L5.7294912,30 L9.1750822,18.573566 L0,11.459046 L11.399999,11.373603 z" Fill="#FF5E5E5E" />
                        </local:LinearClipper>
                        <ContentPresenter x:Name="Content" Cursor="{TemplateBinding Cursor}" HorizontalAlignment="Left" Margin="{TemplateBinding Padding}" ContentTemplate="{TemplateBinding ContentTemplate}" Grid.RowSpan="2" Grid.Row="1" />
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- End Rating Control-->

</ResourceDictionary>
