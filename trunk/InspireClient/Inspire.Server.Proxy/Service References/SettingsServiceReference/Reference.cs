//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.225
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Inspire.Server.Proxy.SettingsServiceReference {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Setting", Namespace="http://schemas.inspiredisplays.com")]
    [System.SerializableAttribute()]
    public partial class Setting : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string KeyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ValueField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Key {
            get {
                return this.KeyField;
            }
            set {
                if ((object.ReferenceEquals(this.KeyField, value) != true)) {
                    this.KeyField = value;
                    this.RaisePropertyChanged("Key");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Value {
            get {
                return this.ValueField;
            }
            set {
                if ((object.ReferenceEquals(this.ValueField, value) != true)) {
                    this.ValueField = value;
                    this.RaisePropertyChanged("Value");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GeneralFaultContract", Namespace="http://schemas.inspiredisplays.com")]
    [System.SerializableAttribute()]
    public partial class GeneralFaultContract : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ErrorCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ErrorDescField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ErrorCode {
            get {
                return this.ErrorCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.ErrorCodeField, value) != true)) {
                    this.ErrorCodeField = value;
                    this.RaisePropertyChanged("ErrorCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ErrorDesc {
            get {
                return this.ErrorDescField;
            }
            set {
                if ((object.ReferenceEquals(this.ErrorDescField, value) != true)) {
                    this.ErrorDescField = value;
                    this.RaisePropertyChanged("ErrorDesc");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(Namespace="http://schemas.inspiredisplays.com", ConfigurationName="SettingsServiceReference.SettingServiceContract")]
    public interface SettingServiceContract {
        
        // CODEGEN: Generating message contract since the operation GetSetting is neither RPC nor document wrapped.
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.inspiredisplays.com/UserServiceContract/GetSetting", ReplyAction="http://schemas.inspiredisplays.com/SettingServiceContract/GetSettingResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Inspire.Server.Proxy.SettingsServiceReference.GeneralFaultContract), Action="http://schemas.inspiredisplays.com/SettingServiceContract/GetSettingGeneralFaultC" +
            "ontractFault", Name="GeneralFaultContract")]
        Inspire.Server.Proxy.SettingsServiceReference.GetSettingsResponseMessage GetSetting(Inspire.Server.Proxy.SettingsServiceReference.GetSettingsRequestMessage request);
        
        // CODEGEN: Generating message contract since the operation AddSetting is neither RPC nor document wrapped.
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.inspiredisplays.com/UserServiceContract/AddSetting", ReplyAction="http://schemas.inspiredisplays.com/SettingServiceContract/AddSettingResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Inspire.Server.Proxy.SettingsServiceReference.GeneralFaultContract), Action="http://schemas.inspiredisplays.com/SettingServiceContract/AddSettingGeneralFaultC" +
            "ontractFault", Name="GeneralFaultContract")]
        Inspire.Server.Proxy.SettingsServiceReference.AddSettingResponseMessage AddSetting(Inspire.Server.Proxy.SettingsServiceReference.AddSettingRequestMessage request);
        
        // CODEGEN: Generating message contract since the operation DeleteSetting is neither RPC nor document wrapped.
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.inspiredisplays.com/UserServiceContract/DeleteSetting", ReplyAction="http://schemas.inspiredisplays.com/SettingServiceContract/DeleteSettingResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Inspire.Server.Proxy.SettingsServiceReference.GeneralFaultContract), Action="http://schemas.inspiredisplays.com/SettingServiceContract/DeleteSettingGeneralFau" +
            "ltContractFault", Name="GeneralFaultContract")]
        Inspire.Server.Proxy.SettingsServiceReference.DeleteSettingResponseMessage DeleteSetting(Inspire.Server.Proxy.SettingsServiceReference.DeleteSettingRequestMessage request);
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class GetSettingsRequestMessage {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://schemas.inspiredisplays.com", Order=0)]
        public string Key;
        
        public GetSettingsRequestMessage() {
        }
        
        public GetSettingsRequestMessage(string Key) {
            this.Key = Key;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class GetSettingsResponseMessage {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://schemas.inspiredisplays.com", Order=0)]
        public Inspire.Server.Proxy.SettingsServiceReference.Setting Setting;
        
        public GetSettingsResponseMessage() {
        }
        
        public GetSettingsResponseMessage(Inspire.Server.Proxy.SettingsServiceReference.Setting Setting) {
            this.Setting = Setting;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class AddSettingRequestMessage {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://schemas.inspiredisplays.com", Order=0)]
        public Inspire.Server.Proxy.SettingsServiceReference.Setting Setting;
        
        public AddSettingRequestMessage() {
        }
        
        public AddSettingRequestMessage(Inspire.Server.Proxy.SettingsServiceReference.Setting Setting) {
            this.Setting = Setting;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class AddSettingResponseMessage {
        
        public AddSettingResponseMessage() {
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class DeleteSettingRequestMessage {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://schemas.inspiredisplays.com", Order=0)]
        public string Key;
        
        public DeleteSettingRequestMessage() {
        }
        
        public DeleteSettingRequestMessage(string Key) {
            this.Key = Key;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class DeleteSettingResponseMessage {
        
        public DeleteSettingResponseMessage() {
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface SettingServiceContractChannel : Inspire.Server.Proxy.SettingsServiceReference.SettingServiceContract, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class SettingServiceContractClient : System.ServiceModel.ClientBase<Inspire.Server.Proxy.SettingsServiceReference.SettingServiceContract>, Inspire.Server.Proxy.SettingsServiceReference.SettingServiceContract {
        
        public SettingServiceContractClient() {
        }
        
        public SettingServiceContractClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public SettingServiceContractClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public SettingServiceContractClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public SettingServiceContractClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Inspire.Server.Proxy.SettingsServiceReference.GetSettingsResponseMessage Inspire.Server.Proxy.SettingsServiceReference.SettingServiceContract.GetSetting(Inspire.Server.Proxy.SettingsServiceReference.GetSettingsRequestMessage request) {
            return base.Channel.GetSetting(request);
        }
        
        public Inspire.Server.Proxy.SettingsServiceReference.Setting GetSetting(string Key) {
            Inspire.Server.Proxy.SettingsServiceReference.GetSettingsRequestMessage inValue = new Inspire.Server.Proxy.SettingsServiceReference.GetSettingsRequestMessage();
            inValue.Key = Key;
            Inspire.Server.Proxy.SettingsServiceReference.GetSettingsResponseMessage retVal = ((Inspire.Server.Proxy.SettingsServiceReference.SettingServiceContract)(this)).GetSetting(inValue);
            return retVal.Setting;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Inspire.Server.Proxy.SettingsServiceReference.AddSettingResponseMessage Inspire.Server.Proxy.SettingsServiceReference.SettingServiceContract.AddSetting(Inspire.Server.Proxy.SettingsServiceReference.AddSettingRequestMessage request) {
            return base.Channel.AddSetting(request);
        }
        
        public void AddSetting(Inspire.Server.Proxy.SettingsServiceReference.Setting Setting) {
            Inspire.Server.Proxy.SettingsServiceReference.AddSettingRequestMessage inValue = new Inspire.Server.Proxy.SettingsServiceReference.AddSettingRequestMessage();
            inValue.Setting = Setting;
            Inspire.Server.Proxy.SettingsServiceReference.AddSettingResponseMessage retVal = ((Inspire.Server.Proxy.SettingsServiceReference.SettingServiceContract)(this)).AddSetting(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Inspire.Server.Proxy.SettingsServiceReference.DeleteSettingResponseMessage Inspire.Server.Proxy.SettingsServiceReference.SettingServiceContract.DeleteSetting(Inspire.Server.Proxy.SettingsServiceReference.DeleteSettingRequestMessage request) {
            return base.Channel.DeleteSetting(request);
        }
        
        public void DeleteSetting(string Key) {
            Inspire.Server.Proxy.SettingsServiceReference.DeleteSettingRequestMessage inValue = new Inspire.Server.Proxy.SettingsServiceReference.DeleteSettingRequestMessage();
            inValue.Key = Key;
            Inspire.Server.Proxy.SettingsServiceReference.DeleteSettingResponseMessage retVal = ((Inspire.Server.Proxy.SettingsServiceReference.SettingServiceContract)(this)).DeleteSetting(inValue);
        }
    }
}
