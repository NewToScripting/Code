//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.1
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Inspire.Server.Proxy.DisplayPropertyServiceReference {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.CollectionDataContractAttribute(Name="DisplayProperties", Namespace="http://schemas.inspiredisplays.com/DataContract.Model/", ItemName="DisplayProperties")]
    [System.SerializableAttribute()]
    public class DisplayProperties : System.Collections.Generic.List<Inspire.Server.Proxy.DisplayPropertyServiceReference.DisplayProperty> {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DisplayProperty", Namespace="http://schemas.inspiredisplays.com/DataContract.Model/")]
    [System.SerializableAttribute()]
    public partial class DisplayProperty : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string GUIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PropertyNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PropertyDescriptionField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string GUID {
            get {
                return this.GUIDField;
            }
            set {
                if ((object.ReferenceEquals(this.GUIDField, value) != true)) {
                    this.GUIDField = value;
                    this.RaisePropertyChanged("GUID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PropertyName {
            get {
                return this.PropertyNameField;
            }
            set {
                if ((object.ReferenceEquals(this.PropertyNameField, value) != true)) {
                    this.PropertyNameField = value;
                    this.RaisePropertyChanged("PropertyName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=2)]
        public string PropertyDescription {
            get {
                return this.PropertyDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.PropertyDescriptionField, value) != true)) {
                    this.PropertyDescriptionField = value;
                    this.RaisePropertyChanged("PropertyDescription");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GeneralFaultContract", Namespace="http://schemas.inspiredisplays.com/DataContract.Model/")]
    [System.SerializableAttribute()]
    public partial class GeneralFaultContract : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ErrorDescField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ErrorCodeField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ErrorDesc {
            get {
                return this.ErrorDescField;
            }
            set {
                if ((object.ReferenceEquals(this.ErrorDescField, value) != true)) {
                    this.ErrorDescField = value;
                    this.RaisePropertyChanged("ErrorDesc");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=1)]
        public int ErrorCode {
            get {
                return this.ErrorCodeField;
            }
            set {
                if ((this.ErrorCodeField.Equals(value) != true)) {
                    this.ErrorCodeField = value;
                    this.RaisePropertyChanged("ErrorCode");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(Namespace="http://schemas.inspiredisplays.com/ServiceContract.Model/", ConfigurationName="DisplayPropertyServiceReference.ClientDisplayPropertiesServiceContract")]
    public interface ClientDisplayPropertiesServiceContract {
        
        // CODEGEN: Generating message contract since the operation GetDisplayProperties is neither RPC nor document wrapped.
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.inspiredisplays.com/ServiceContract.Model/ServiceContract2/GetDisp" +
            "layProperties", ReplyAction="http://schemas.inspiredisplays.com/ServiceContract.Model/ClientDisplayPropertiesS" +
            "erviceContract/GetDisplayPropertiesResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Inspire.Server.Proxy.DisplayPropertyServiceReference.GeneralFaultContract), Action="http://schemas.inspiredisplays.com/ServiceContract.Model/ClientDisplayPropertiesS" +
            "erviceContract/GetDisplayPropertiesGeneralFaultContractFault", Name="GeneralFaultContract", Namespace="http://schemas.inspiredisplays.com/DataContract.Model/")]
        Inspire.Server.Proxy.DisplayPropertyServiceReference.GetDisplayPropertiesResponseMessage GetDisplayProperties(Inspire.Server.Proxy.DisplayPropertyServiceReference.GetDisplayPropertiesRequestMessage request);
        
        // CODEGEN: Generating message contract since the operation AddDisplayProperty is neither RPC nor document wrapped.
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.inspiredisplays.com/ServiceContract.Model/ServiceContract2/AddDisp" +
            "layProperty", ReplyAction="http://schemas.inspiredisplays.com/ServiceContract.Model/ClientDisplayPropertiesS" +
            "erviceContract/AddDisplayPropertyResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Inspire.Server.Proxy.DisplayPropertyServiceReference.GeneralFaultContract), Action="http://schemas.inspiredisplays.com/ServiceContract.Model/ClientDisplayPropertiesS" +
            "erviceContract/AddDisplayPropertyGeneralFaultContractFault", Name="GeneralFaultContract", Namespace="http://schemas.inspiredisplays.com/DataContract.Model/")]
        Inspire.Server.Proxy.DisplayPropertyServiceReference.AddDisplayPropertyResponseMessage AddDisplayProperty(Inspire.Server.Proxy.DisplayPropertyServiceReference.AddDisplayPropertyRequestMessage request);
        
        // CODEGEN: Generating message contract since the operation UpdateDisplayProperty is neither RPC nor document wrapped.
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.inspiredisplays.com/ServiceContract.Model/ServiceContract2/UpdateD" +
            "isplayProperty", ReplyAction="http://schemas.inspiredisplays.com/ServiceContract.Model/ClientDisplayPropertiesS" +
            "erviceContract/UpdateDisplayPropertyResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Inspire.Server.Proxy.DisplayPropertyServiceReference.GeneralFaultContract), Action="http://schemas.inspiredisplays.com/ServiceContract.Model/ClientDisplayPropertiesS" +
            "erviceContract/UpdateDisplayPropertyGeneralFaultContractFault", Name="GeneralFaultContract", Namespace="http://schemas.inspiredisplays.com/DataContract.Model/")]
        Inspire.Server.Proxy.DisplayPropertyServiceReference.UpdateDisplayPropertyResponseMessage UpdateDisplayProperty(Inspire.Server.Proxy.DisplayPropertyServiceReference.UpdateDisplayPropertyRequestMessage request);
        
        // CODEGEN: Generating message contract since the operation DeleteDisplayProperty is neither RPC nor document wrapped.
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.inspiredisplays.com/ServiceContract.Model/ServiceContract2/DeleteD" +
            "isplayProperty", ReplyAction="http://schemas.inspiredisplays.com/ServiceContract.Model/ClientDisplayPropertiesS" +
            "erviceContract/DeleteDisplayPropertyResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Inspire.Server.Proxy.DisplayPropertyServiceReference.GeneralFaultContract), Action="http://schemas.inspiredisplays.com/ServiceContract.Model/ClientDisplayPropertiesS" +
            "erviceContract/DeleteDisplayPropertyGeneralFaultContractFault", Name="GeneralFaultContract", Namespace="http://schemas.inspiredisplays.com/DataContract.Model/")]
        Inspire.Server.Proxy.DisplayPropertyServiceReference.DeleteDisplayPropertyResponseMessage DeleteDisplayProperty(Inspire.Server.Proxy.DisplayPropertyServiceReference.DeleteDisplayPropertyRequestMessage request);
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class GetDisplayPropertiesRequestMessage {
        
        public GetDisplayPropertiesRequestMessage() {
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class GetDisplayPropertiesResponseMessage {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://schemas.inspiredisplays.com/ServiceContract.Model/", Order=0)]
        public Inspire.Server.Proxy.DisplayPropertyServiceReference.DisplayProperties DisplayProperties;
        
        public GetDisplayPropertiesResponseMessage() {
        }
        
        public GetDisplayPropertiesResponseMessage(Inspire.Server.Proxy.DisplayPropertyServiceReference.DisplayProperties DisplayProperties) {
            this.DisplayProperties = DisplayProperties;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class AddDisplayPropertyRequestMessage {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://schemas.inspiredisplays.com/ServiceContract.Model/", Order=0)]
        public Inspire.Server.Proxy.DisplayPropertyServiceReference.DisplayProperty DisplayProperty;
        
        public AddDisplayPropertyRequestMessage() {
        }
        
        public AddDisplayPropertyRequestMessage(Inspire.Server.Proxy.DisplayPropertyServiceReference.DisplayProperty DisplayProperty) {
            this.DisplayProperty = DisplayProperty;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class AddDisplayPropertyResponseMessage {
        
        public AddDisplayPropertyResponseMessage() {
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class UpdateDisplayPropertyRequestMessage {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://schemas.inspiredisplays.com/ServiceContract.Model/", Order=0)]
        public Inspire.Server.Proxy.DisplayPropertyServiceReference.DisplayProperty DisplayProperty;
        
        public UpdateDisplayPropertyRequestMessage() {
        }
        
        public UpdateDisplayPropertyRequestMessage(Inspire.Server.Proxy.DisplayPropertyServiceReference.DisplayProperty DisplayProperty) {
            this.DisplayProperty = DisplayProperty;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class UpdateDisplayPropertyResponseMessage {
        
        public UpdateDisplayPropertyResponseMessage() {
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class DeleteDisplayPropertyRequestMessage {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://schemas.inspiredisplays.com/ServiceContract.Model/", Order=0)]
        public string GUID;
        
        public DeleteDisplayPropertyRequestMessage() {
        }
        
        public DeleteDisplayPropertyRequestMessage(string GUID) {
            this.GUID = GUID;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class DeleteDisplayPropertyResponseMessage {
        
        public DeleteDisplayPropertyResponseMessage() {
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ClientDisplayPropertiesServiceContractChannel : Inspire.Server.Proxy.DisplayPropertyServiceReference.ClientDisplayPropertiesServiceContract, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ClientDisplayPropertiesServiceContractClient : System.ServiceModel.ClientBase<Inspire.Server.Proxy.DisplayPropertyServiceReference.ClientDisplayPropertiesServiceContract>, Inspire.Server.Proxy.DisplayPropertyServiceReference.ClientDisplayPropertiesServiceContract {
        
        public ClientDisplayPropertiesServiceContractClient() {
        }
        
        public ClientDisplayPropertiesServiceContractClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public ClientDisplayPropertiesServiceContractClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ClientDisplayPropertiesServiceContractClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ClientDisplayPropertiesServiceContractClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Inspire.Server.Proxy.DisplayPropertyServiceReference.GetDisplayPropertiesResponseMessage Inspire.Server.Proxy.DisplayPropertyServiceReference.ClientDisplayPropertiesServiceContract.GetDisplayProperties(Inspire.Server.Proxy.DisplayPropertyServiceReference.GetDisplayPropertiesRequestMessage request) {
            return base.Channel.GetDisplayProperties(request);
        }
        
        public Inspire.Server.Proxy.DisplayPropertyServiceReference.DisplayProperties GetDisplayProperties() {
            Inspire.Server.Proxy.DisplayPropertyServiceReference.GetDisplayPropertiesRequestMessage inValue = new Inspire.Server.Proxy.DisplayPropertyServiceReference.GetDisplayPropertiesRequestMessage();
            Inspire.Server.Proxy.DisplayPropertyServiceReference.GetDisplayPropertiesResponseMessage retVal = ((Inspire.Server.Proxy.DisplayPropertyServiceReference.ClientDisplayPropertiesServiceContract)(this)).GetDisplayProperties(inValue);
            return retVal.DisplayProperties;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Inspire.Server.Proxy.DisplayPropertyServiceReference.AddDisplayPropertyResponseMessage Inspire.Server.Proxy.DisplayPropertyServiceReference.ClientDisplayPropertiesServiceContract.AddDisplayProperty(Inspire.Server.Proxy.DisplayPropertyServiceReference.AddDisplayPropertyRequestMessage request) {
            return base.Channel.AddDisplayProperty(request);
        }
        
        public void AddDisplayProperty(Inspire.Server.Proxy.DisplayPropertyServiceReference.DisplayProperty DisplayProperty) {
            Inspire.Server.Proxy.DisplayPropertyServiceReference.AddDisplayPropertyRequestMessage inValue = new Inspire.Server.Proxy.DisplayPropertyServiceReference.AddDisplayPropertyRequestMessage();
            inValue.DisplayProperty = DisplayProperty;
            Inspire.Server.Proxy.DisplayPropertyServiceReference.AddDisplayPropertyResponseMessage retVal = ((Inspire.Server.Proxy.DisplayPropertyServiceReference.ClientDisplayPropertiesServiceContract)(this)).AddDisplayProperty(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Inspire.Server.Proxy.DisplayPropertyServiceReference.UpdateDisplayPropertyResponseMessage Inspire.Server.Proxy.DisplayPropertyServiceReference.ClientDisplayPropertiesServiceContract.UpdateDisplayProperty(Inspire.Server.Proxy.DisplayPropertyServiceReference.UpdateDisplayPropertyRequestMessage request) {
            return base.Channel.UpdateDisplayProperty(request);
        }
        
        public void UpdateDisplayProperty(Inspire.Server.Proxy.DisplayPropertyServiceReference.DisplayProperty DisplayProperty) {
            Inspire.Server.Proxy.DisplayPropertyServiceReference.UpdateDisplayPropertyRequestMessage inValue = new Inspire.Server.Proxy.DisplayPropertyServiceReference.UpdateDisplayPropertyRequestMessage();
            inValue.DisplayProperty = DisplayProperty;
            Inspire.Server.Proxy.DisplayPropertyServiceReference.UpdateDisplayPropertyResponseMessage retVal = ((Inspire.Server.Proxy.DisplayPropertyServiceReference.ClientDisplayPropertiesServiceContract)(this)).UpdateDisplayProperty(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Inspire.Server.Proxy.DisplayPropertyServiceReference.DeleteDisplayPropertyResponseMessage Inspire.Server.Proxy.DisplayPropertyServiceReference.ClientDisplayPropertiesServiceContract.DeleteDisplayProperty(Inspire.Server.Proxy.DisplayPropertyServiceReference.DeleteDisplayPropertyRequestMessage request) {
            return base.Channel.DeleteDisplayProperty(request);
        }
        
        public void DeleteDisplayProperty(string GUID) {
            Inspire.Server.Proxy.DisplayPropertyServiceReference.DeleteDisplayPropertyRequestMessage inValue = new Inspire.Server.Proxy.DisplayPropertyServiceReference.DeleteDisplayPropertyRequestMessage();
            inValue.GUID = GUID;
            Inspire.Server.Proxy.DisplayPropertyServiceReference.DeleteDisplayPropertyResponseMessage retVal = ((Inspire.Server.Proxy.DisplayPropertyServiceReference.ClientDisplayPropertiesServiceContract)(this)).DeleteDisplayProperty(inValue);
        }
    }
}
