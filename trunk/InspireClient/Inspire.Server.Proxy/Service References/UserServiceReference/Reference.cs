//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.235
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Inspire.Server.Proxy.UserServiceReference {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.CollectionDataContractAttribute(Name="Users", Namespace="http://schemas.inspiredisplays.com", ItemName="Users")]
    [System.SerializableAttribute()]
    public class Users : System.Collections.Generic.List<Inspire.Server.Proxy.UserServiceReference.User> {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="User", Namespace="http://schemas.inspiredisplays.com")]
    [System.SerializableAttribute()]
    public partial class User : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string GUIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LoginField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Inspire.Server.Proxy.UserServiceReference.Roles RolesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PasswordField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string GUID {
            get {
                return this.GUIDField;
            }
            set {
                if ((object.ReferenceEquals(this.GUIDField, value) != true)) {
                    this.GUIDField = value;
                    this.RaisePropertyChanged("GUID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=2)]
        public string Login {
            get {
                return this.LoginField;
            }
            set {
                if ((object.ReferenceEquals(this.LoginField, value) != true)) {
                    this.LoginField = value;
                    this.RaisePropertyChanged("Login");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=3)]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=4)]
        public Inspire.Server.Proxy.UserServiceReference.Roles Roles {
            get {
                return this.RolesField;
            }
            set {
                if ((object.ReferenceEquals(this.RolesField, value) != true)) {
                    this.RolesField = value;
                    this.RaisePropertyChanged("Roles");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=5)]
        public string Password {
            get {
                return this.PasswordField;
            }
            set {
                if ((object.ReferenceEquals(this.PasswordField, value) != true)) {
                    this.PasswordField = value;
                    this.RaisePropertyChanged("Password");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.CollectionDataContractAttribute(Name="Roles", Namespace="http://schemas.inspiredisplays.com", ItemName="Roles")]
    [System.SerializableAttribute()]
    public class Roles : System.Collections.Generic.List<Inspire.Server.Proxy.UserServiceReference.Role> {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Role", Namespace="http://schemas.inspiredisplays.com")]
    [System.SerializableAttribute()]
    public partial class Role : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string GUIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string GUID {
            get {
                return this.GUIDField;
            }
            set {
                if ((object.ReferenceEquals(this.GUIDField, value) != true)) {
                    this.GUIDField = value;
                    this.RaisePropertyChanged("GUID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=2)]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GeneralFaultContract", Namespace="http://schemas.inspiredisplays.com")]
    [System.SerializableAttribute()]
    public partial class GeneralFaultContract : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ErrorCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ErrorDescField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ErrorCode {
            get {
                return this.ErrorCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.ErrorCodeField, value) != true)) {
                    this.ErrorCodeField = value;
                    this.RaisePropertyChanged("ErrorCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ErrorDesc {
            get {
                return this.ErrorDescField;
            }
            set {
                if ((object.ReferenceEquals(this.ErrorDescField, value) != true)) {
                    this.ErrorDescField = value;
                    this.RaisePropertyChanged("ErrorDesc");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(Namespace="http://schemas.inspiredisplays.com", ConfigurationName="UserServiceReference.UserServiceContract")]
    public interface UserServiceContract {
        
        // CODEGEN: Generating message contract since the operation GetUsers is neither RPC nor document wrapped.
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.inspiredisplays.com/UserServiceContract/GetUsers", ReplyAction="http://schemas.inspiredisplays.com/UserServiceContract/GetUsersResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Inspire.Server.Proxy.UserServiceReference.GeneralFaultContract), Action="http://schemas.inspiredisplays.com/UserServiceContract/GetUsersGeneralFaultContra" +
            "ctFault", Name="GeneralFaultContract")]
        Inspire.Server.Proxy.UserServiceReference.GetUsersResponseMessage GetUsers(Inspire.Server.Proxy.UserServiceReference.GetUsersRequestMessage request);
        
        // CODEGEN: Generating message contract since the operation GetRolesFromUserID is neither RPC nor document wrapped.
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.inspiredisplays.com/UserServiceContract/GetRolesFromUserID", ReplyAction="http://schemas.inspiredisplays.com/UserServiceContract/GetRolesFromUserIDResponse" +
            "")]
        [System.ServiceModel.FaultContractAttribute(typeof(Inspire.Server.Proxy.UserServiceReference.GeneralFaultContract), Action="http://schemas.inspiredisplays.com/UserServiceContract/GetRolesFromUserIDGeneralF" +
            "aultContractFault", Name="GeneralFaultContract")]
        Inspire.Server.Proxy.UserServiceReference.GetRolesFromUserIDResponseMessage GetRolesFromUserID(Inspire.Server.Proxy.UserServiceReference.GetRolesFromUserIDRequestMessage request);
        
        // CODEGEN: Generating message contract since the operation GetAllRoles is neither RPC nor document wrapped.
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.inspiredisplays.com/UserServiceContract/GetAllRoles", ReplyAction="http://schemas.inspiredisplays.com/UserServiceContract/GetAllRolesResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Inspire.Server.Proxy.UserServiceReference.GeneralFaultContract), Action="http://schemas.inspiredisplays.com/UserServiceContract/GetAllRolesGeneralFaultCon" +
            "tractFault", Name="GeneralFaultContract")]
        Inspire.Server.Proxy.UserServiceReference.GetAllRolesResponseMessage GetAllRoles(Inspire.Server.Proxy.UserServiceReference.GetAllRolesRequestMessage request);
        
        // CODEGEN: Generating message contract since the operation AddUser is neither RPC nor document wrapped.
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.inspiredisplays.com/UserServiceContract/AddUser", ReplyAction="http://schemas.inspiredisplays.com/UserServiceContract/AddUserResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Inspire.Server.Proxy.UserServiceReference.GeneralFaultContract), Action="http://schemas.inspiredisplays.com/UserServiceContract/AddUserGeneralFaultContrac" +
            "tFault", Name="GeneralFaultContract")]
        Inspire.Server.Proxy.UserServiceReference.AddUserResponseMessage AddUser(Inspire.Server.Proxy.UserServiceReference.AddUserRequestMessage request);
        
        // CODEGEN: Generating message contract since the operation AddRolesToUser is neither RPC nor document wrapped.
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.inspiredisplays.com/UserServiceContract/AddRolesToUser", ReplyAction="http://schemas.inspiredisplays.com/UserServiceContract/AddRolesToUserResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Inspire.Server.Proxy.UserServiceReference.GeneralFaultContract), Action="http://schemas.inspiredisplays.com/UserServiceContract/AddRolesToUserGeneralFault" +
            "ContractFault", Name="GeneralFaultContract")]
        Inspire.Server.Proxy.UserServiceReference.AddRolesToUserResponseMessage AddRolesToUser(Inspire.Server.Proxy.UserServiceReference.AddRolesToUserRequestMessage request);
        
        // CODEGEN: Generating message contract since the operation DeleteUser is neither RPC nor document wrapped.
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.inspiredisplays.com/UserServiceContract/DeleteUser", ReplyAction="http://schemas.inspiredisplays.com/UserServiceContract/DeleteUserResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Inspire.Server.Proxy.UserServiceReference.GeneralFaultContract), Action="http://schemas.inspiredisplays.com/UserServiceContract/DeleteUserGeneralFaultCont" +
            "ractFault", Name="GeneralFaultContract")]
        Inspire.Server.Proxy.UserServiceReference.DeleteUserResponseMessage DeleteUser(Inspire.Server.Proxy.UserServiceReference.DeleteUserRequestMessage request);
        
        // CODEGEN: Generating message contract since the operation DeleteRole is neither RPC nor document wrapped.
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.inspiredisplays.com/UserServiceContract/DeleteRole", ReplyAction="http://schemas.inspiredisplays.com/UserServiceContract/DeleteRoleResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Inspire.Server.Proxy.UserServiceReference.GeneralFaultContract), Action="http://schemas.inspiredisplays.com/UserServiceContract/DeleteRoleGeneralFaultCont" +
            "ractFault", Name="GeneralFaultContract")]
        Inspire.Server.Proxy.UserServiceReference.DeleteRoleResponseMessage DeleteRole(Inspire.Server.Proxy.UserServiceReference.DeleteRoleRequestMessage request);
        
        // CODEGEN: Generating message contract since the operation LoginAttempt is neither RPC nor document wrapped.
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.inspiredisplays.com/UserServiceContract/LoginAttempt", ReplyAction="http://schemas.inspiredisplays.com/UserServiceContract/LoginAttemptResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Inspire.Server.Proxy.UserServiceReference.GeneralFaultContract), Action="http://schemas.inspiredisplays.com/UserServiceContract/LoginAttemptGeneralFaultCo" +
            "ntractFault", Name="GeneralFaultContract")]
        Inspire.Server.Proxy.UserServiceReference.LoginAttemptResponseMessage LoginAttempt(Inspire.Server.Proxy.UserServiceReference.LoginAttemptRequestMessage request);
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class GetUsersRequestMessage {
        
        public GetUsersRequestMessage() {
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class GetUsersResponseMessage {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://schemas.inspiredisplays.com", Order=0)]
        public Inspire.Server.Proxy.UserServiceReference.Users Users;
        
        public GetUsersResponseMessage() {
        }
        
        public GetUsersResponseMessage(Inspire.Server.Proxy.UserServiceReference.Users Users) {
            this.Users = Users;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class GetRolesFromUserIDRequestMessage {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://schemas.inspiredisplays.com", Order=0)]
        public string UserID;
        
        public GetRolesFromUserIDRequestMessage() {
        }
        
        public GetRolesFromUserIDRequestMessage(string UserID) {
            this.UserID = UserID;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class GetRolesFromUserIDResponseMessage {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://schemas.inspiredisplays.com", Order=0)]
        public Inspire.Server.Proxy.UserServiceReference.Roles Roles;
        
        public GetRolesFromUserIDResponseMessage() {
        }
        
        public GetRolesFromUserIDResponseMessage(Inspire.Server.Proxy.UserServiceReference.Roles Roles) {
            this.Roles = Roles;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class GetAllRolesRequestMessage {
        
        public GetAllRolesRequestMessage() {
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class GetAllRolesResponseMessage {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://schemas.inspiredisplays.com", Order=0)]
        public Inspire.Server.Proxy.UserServiceReference.Roles Roles;
        
        public GetAllRolesResponseMessage() {
        }
        
        public GetAllRolesResponseMessage(Inspire.Server.Proxy.UserServiceReference.Roles Roles) {
            this.Roles = Roles;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class AddUserRequestMessage {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://schemas.inspiredisplays.com", Order=0)]
        public Inspire.Server.Proxy.UserServiceReference.User User;
        
        public AddUserRequestMessage() {
        }
        
        public AddUserRequestMessage(Inspire.Server.Proxy.UserServiceReference.User User) {
            this.User = User;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class AddUserResponseMessage {
        
        public AddUserResponseMessage() {
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="AddRolesToUserRequestMessage", WrapperNamespace="http://schemas.inspiredisplays.com", IsWrapped=true)]
    public partial class AddRolesToUserRequestMessage {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://schemas.inspiredisplays.com", Order=0)]
        public string RoleID;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://schemas.inspiredisplays.com", Order=1)]
        public string UserID;
        
        public AddRolesToUserRequestMessage() {
        }
        
        public AddRolesToUserRequestMessage(string RoleID, string UserID) {
            this.RoleID = RoleID;
            this.UserID = UserID;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class AddRolesToUserResponseMessage {
        
        public AddRolesToUserResponseMessage() {
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class DeleteUserRequestMessage {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://schemas.inspiredisplays.com", Order=0)]
        public string UserID;
        
        public DeleteUserRequestMessage() {
        }
        
        public DeleteUserRequestMessage(string UserID) {
            this.UserID = UserID;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class DeleteUserResponseMessage {
        
        public DeleteUserResponseMessage() {
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class DeleteRoleRequestMessage {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://schemas.inspiredisplays.com", Order=0)]
        public string RoleID;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://schemas.inspiredisplays.com", Order=1)]
        public string UserID;
        
        public DeleteRoleRequestMessage() {
        }
        
        public DeleteRoleRequestMessage(string RoleID, string UserID) {
            this.RoleID = RoleID;
            this.UserID = UserID;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class DeleteRoleResponseMessage {
        
        public DeleteRoleResponseMessage() {
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class LoginAttemptRequestMessage {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://schemas.inspiredisplays.com", Order=0)]
        public string Login;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://schemas.inspiredisplays.com", Order=1)]
        public string Password;
        
        public LoginAttemptRequestMessage() {
        }
        
        public LoginAttemptRequestMessage(string Login, string Password) {
            this.Login = Login;
            this.Password = Password;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class LoginAttemptResponseMessage {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://schemas.inspiredisplays.com", Order=0)]
        public bool Result;
        
        public LoginAttemptResponseMessage() {
        }
        
        public LoginAttemptResponseMessage(bool Result) {
            this.Result = Result;
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface UserServiceContractChannel : Inspire.Server.Proxy.UserServiceReference.UserServiceContract, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class UserServiceContractClient : System.ServiceModel.ClientBase<Inspire.Server.Proxy.UserServiceReference.UserServiceContract>, Inspire.Server.Proxy.UserServiceReference.UserServiceContract {
        
        public UserServiceContractClient() {
        }
        
        public UserServiceContractClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public UserServiceContractClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public UserServiceContractClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public UserServiceContractClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Inspire.Server.Proxy.UserServiceReference.GetUsersResponseMessage Inspire.Server.Proxy.UserServiceReference.UserServiceContract.GetUsers(Inspire.Server.Proxy.UserServiceReference.GetUsersRequestMessage request) {
            return base.Channel.GetUsers(request);
        }
        
        public Inspire.Server.Proxy.UserServiceReference.Users GetUsers() {
            Inspire.Server.Proxy.UserServiceReference.GetUsersRequestMessage inValue = new Inspire.Server.Proxy.UserServiceReference.GetUsersRequestMessage();
            Inspire.Server.Proxy.UserServiceReference.GetUsersResponseMessage retVal = ((Inspire.Server.Proxy.UserServiceReference.UserServiceContract)(this)).GetUsers(inValue);
            return retVal.Users;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Inspire.Server.Proxy.UserServiceReference.GetRolesFromUserIDResponseMessage Inspire.Server.Proxy.UserServiceReference.UserServiceContract.GetRolesFromUserID(Inspire.Server.Proxy.UserServiceReference.GetRolesFromUserIDRequestMessage request) {
            return base.Channel.GetRolesFromUserID(request);
        }
        
        public Inspire.Server.Proxy.UserServiceReference.Roles GetRolesFromUserID(string UserID) {
            Inspire.Server.Proxy.UserServiceReference.GetRolesFromUserIDRequestMessage inValue = new Inspire.Server.Proxy.UserServiceReference.GetRolesFromUserIDRequestMessage();
            inValue.UserID = UserID;
            Inspire.Server.Proxy.UserServiceReference.GetRolesFromUserIDResponseMessage retVal = ((Inspire.Server.Proxy.UserServiceReference.UserServiceContract)(this)).GetRolesFromUserID(inValue);
            return retVal.Roles;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Inspire.Server.Proxy.UserServiceReference.GetAllRolesResponseMessage Inspire.Server.Proxy.UserServiceReference.UserServiceContract.GetAllRoles(Inspire.Server.Proxy.UserServiceReference.GetAllRolesRequestMessage request) {
            return base.Channel.GetAllRoles(request);
        }
        
        public Inspire.Server.Proxy.UserServiceReference.Roles GetAllRoles() {
            Inspire.Server.Proxy.UserServiceReference.GetAllRolesRequestMessage inValue = new Inspire.Server.Proxy.UserServiceReference.GetAllRolesRequestMessage();
            Inspire.Server.Proxy.UserServiceReference.GetAllRolesResponseMessage retVal = ((Inspire.Server.Proxy.UserServiceReference.UserServiceContract)(this)).GetAllRoles(inValue);
            return retVal.Roles;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Inspire.Server.Proxy.UserServiceReference.AddUserResponseMessage Inspire.Server.Proxy.UserServiceReference.UserServiceContract.AddUser(Inspire.Server.Proxy.UserServiceReference.AddUserRequestMessage request) {
            return base.Channel.AddUser(request);
        }
        
        public void AddUser(Inspire.Server.Proxy.UserServiceReference.User User) {
            Inspire.Server.Proxy.UserServiceReference.AddUserRequestMessage inValue = new Inspire.Server.Proxy.UserServiceReference.AddUserRequestMessage();
            inValue.User = User;
            Inspire.Server.Proxy.UserServiceReference.AddUserResponseMessage retVal = ((Inspire.Server.Proxy.UserServiceReference.UserServiceContract)(this)).AddUser(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Inspire.Server.Proxy.UserServiceReference.AddRolesToUserResponseMessage Inspire.Server.Proxy.UserServiceReference.UserServiceContract.AddRolesToUser(Inspire.Server.Proxy.UserServiceReference.AddRolesToUserRequestMessage request) {
            return base.Channel.AddRolesToUser(request);
        }
        
        public void AddRolesToUser(string RoleID, string UserID) {
            Inspire.Server.Proxy.UserServiceReference.AddRolesToUserRequestMessage inValue = new Inspire.Server.Proxy.UserServiceReference.AddRolesToUserRequestMessage();
            inValue.RoleID = RoleID;
            inValue.UserID = UserID;
            Inspire.Server.Proxy.UserServiceReference.AddRolesToUserResponseMessage retVal = ((Inspire.Server.Proxy.UserServiceReference.UserServiceContract)(this)).AddRolesToUser(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Inspire.Server.Proxy.UserServiceReference.DeleteUserResponseMessage Inspire.Server.Proxy.UserServiceReference.UserServiceContract.DeleteUser(Inspire.Server.Proxy.UserServiceReference.DeleteUserRequestMessage request) {
            return base.Channel.DeleteUser(request);
        }
        
        public void DeleteUser(string UserID) {
            Inspire.Server.Proxy.UserServiceReference.DeleteUserRequestMessage inValue = new Inspire.Server.Proxy.UserServiceReference.DeleteUserRequestMessage();
            inValue.UserID = UserID;
            Inspire.Server.Proxy.UserServiceReference.DeleteUserResponseMessage retVal = ((Inspire.Server.Proxy.UserServiceReference.UserServiceContract)(this)).DeleteUser(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Inspire.Server.Proxy.UserServiceReference.DeleteRoleResponseMessage Inspire.Server.Proxy.UserServiceReference.UserServiceContract.DeleteRole(Inspire.Server.Proxy.UserServiceReference.DeleteRoleRequestMessage request) {
            return base.Channel.DeleteRole(request);
        }
        
        public void DeleteRole(string RoleID, string UserID) {
            Inspire.Server.Proxy.UserServiceReference.DeleteRoleRequestMessage inValue = new Inspire.Server.Proxy.UserServiceReference.DeleteRoleRequestMessage();
            inValue.RoleID = RoleID;
            inValue.UserID = UserID;
            Inspire.Server.Proxy.UserServiceReference.DeleteRoleResponseMessage retVal = ((Inspire.Server.Proxy.UserServiceReference.UserServiceContract)(this)).DeleteRole(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Inspire.Server.Proxy.UserServiceReference.LoginAttemptResponseMessage Inspire.Server.Proxy.UserServiceReference.UserServiceContract.LoginAttempt(Inspire.Server.Proxy.UserServiceReference.LoginAttemptRequestMessage request) {
            return base.Channel.LoginAttempt(request);
        }
        
        public bool LoginAttempt(string Login, string Password) {
            Inspire.Server.Proxy.UserServiceReference.LoginAttemptRequestMessage inValue = new Inspire.Server.Proxy.UserServiceReference.LoginAttemptRequestMessage();
            inValue.Login = Login;
            inValue.Password = Password;
            Inspire.Server.Proxy.UserServiceReference.LoginAttemptResponseMessage retVal = ((Inspire.Server.Proxy.UserServiceReference.UserServiceContract)(this)).LoginAttempt(inValue);
            return retVal.Result;
        }
    }
}
