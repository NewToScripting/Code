//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.1
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Inspire.Server.Proxy.DisplayGroupsServiceReference {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.CollectionDataContractAttribute(Name="DisplayGroups", Namespace="http://schemas.inspiredisplays.com/DataContract.Model/", ItemName="DisplayGroups")]
    [System.SerializableAttribute()]
    public class DisplayGroups : System.Collections.Generic.List<Inspire.Server.Proxy.DisplayGroupsServiceReference.DisplayGroup> {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DisplayGroup", Namespace="http://schemas.inspiredisplays.com/DataContract.Model/")]
    [System.SerializableAttribute()]
    public partial class DisplayGroup : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string GUIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string GroupNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string GroupDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PropertyIDField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string GUID {
            get {
                return this.GUIDField;
            }
            set {
                if ((object.ReferenceEquals(this.GUIDField, value) != true)) {
                    this.GUIDField = value;
                    this.RaisePropertyChanged("GUID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string GroupName {
            get {
                return this.GroupNameField;
            }
            set {
                if ((object.ReferenceEquals(this.GroupNameField, value) != true)) {
                    this.GroupNameField = value;
                    this.RaisePropertyChanged("GroupName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=2)]
        public string GroupDescription {
            get {
                return this.GroupDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.GroupDescriptionField, value) != true)) {
                    this.GroupDescriptionField = value;
                    this.RaisePropertyChanged("GroupDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=3)]
        public string PropertyID {
            get {
                return this.PropertyIDField;
            }
            set {
                if ((object.ReferenceEquals(this.PropertyIDField, value) != true)) {
                    this.PropertyIDField = value;
                    this.RaisePropertyChanged("PropertyID");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GeneralFaultContract", Namespace="http://schemas.inspiredisplays.com/DataContract.Model/")]
    [System.SerializableAttribute()]
    public partial class GeneralFaultContract : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ErrorDescField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ErrorCodeField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ErrorDesc {
            get {
                return this.ErrorDescField;
            }
            set {
                if ((object.ReferenceEquals(this.ErrorDescField, value) != true)) {
                    this.ErrorDescField = value;
                    this.RaisePropertyChanged("ErrorDesc");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=1)]
        public int ErrorCode {
            get {
                return this.ErrorCodeField;
            }
            set {
                if ((this.ErrorCodeField.Equals(value) != true)) {
                    this.ErrorCodeField = value;
                    this.RaisePropertyChanged("ErrorCode");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(Namespace="http://schemas.inspiredisplays.com/ServiceContract.Model/", ConfigurationName="DisplayGroupsServiceReference.ClientDisplayGroupsServiceContract")]
    public interface ClientDisplayGroupsServiceContract {
        
        // CODEGEN: Generating message contract since the operation GetAllDisplayGroups is neither RPC nor document wrapped.
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.inspiredisplays.com/ServiceContract.Model/ClientDisplayGroupsServi" +
            "ceContract/GetAllDisplayGroups", ReplyAction="http://schemas.inspiredisplays.com/ServiceContract.Model/ClientDisplayGroupsServi" +
            "ceContract/GetAllDisplayGroupsResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Inspire.Server.Proxy.DisplayGroupsServiceReference.GeneralFaultContract), Action="http://schemas.inspiredisplays.com/ServiceContract.Model/ClientDisplayGroupsServi" +
            "ceContract/GetAllDisplayGroupsGeneralFaultContractFault", Name="GeneralFaultContract", Namespace="http://schemas.inspiredisplays.com/DataContract.Model/")]
        Inspire.Server.Proxy.DisplayGroupsServiceReference.GetAllDisplayGroupsResponseMessage GetAllDisplayGroups(Inspire.Server.Proxy.DisplayGroupsServiceReference.GetAllDisplayGroupsRequestMessage request);
        
        // CODEGEN: Generating message contract since the operation GetDisplayGroups is neither RPC nor document wrapped.
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.inspiredisplays.com/ServiceContract.Model/ClientDisplayGroupsServi" +
            "ceContract/GetDisplayGroups", ReplyAction="http://schemas.inspiredisplays.com/ServiceContract.Model/ClientDisplayGroupsServi" +
            "ceContract/GetDisplayGroupsResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Inspire.Server.Proxy.DisplayGroupsServiceReference.GeneralFaultContract), Action="http://schemas.inspiredisplays.com/ServiceContract.Model/ClientDisplayGroupsServi" +
            "ceContract/GetDisplayGroupsGeneralFaultContractFault", Name="GeneralFaultContract", Namespace="http://schemas.inspiredisplays.com/DataContract.Model/")]
        Inspire.Server.Proxy.DisplayGroupsServiceReference.GetDisplayGroupsResponseMessage GetDisplayGroups(Inspire.Server.Proxy.DisplayGroupsServiceReference.GetDisplayGroupsRequestMessage request);
        
        // CODEGEN: Generating message contract since the operation AddDisplayGroup is neither RPC nor document wrapped.
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.inspiredisplays.com/ServiceContract.Model/ClientDisplayGroupsServi" +
            "ceContract/AddDisplayGroup", ReplyAction="http://schemas.inspiredisplays.com/ServiceContract.Model/ClientDisplayGroupsServi" +
            "ceContract/AddDisplayGroupResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Inspire.Server.Proxy.DisplayGroupsServiceReference.GeneralFaultContract), Action="http://schemas.inspiredisplays.com/ServiceContract.Model/ClientDisplayGroupsServi" +
            "ceContract/AddDisplayGroupGeneralFaultContractFault", Name="GeneralFaultContract", Namespace="http://schemas.inspiredisplays.com/DataContract.Model/")]
        Inspire.Server.Proxy.DisplayGroupsServiceReference.AddDisplayGroupResponseMessage AddDisplayGroup(Inspire.Server.Proxy.DisplayGroupsServiceReference.AddDisplayGroupRequestMessage request);
        
        // CODEGEN: Generating message contract since the operation UpdateDisplayGroup is neither RPC nor document wrapped.
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.inspiredisplays.com/ServiceContract.Model/ClientDisplayGroupsServi" +
            "ceContract/UpdateDisplayGroup", ReplyAction="http://schemas.inspiredisplays.com/ServiceContract.Model/ClientDisplayGroupsServi" +
            "ceContract/UpdateDisplayGroupResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Inspire.Server.Proxy.DisplayGroupsServiceReference.GeneralFaultContract), Action="http://schemas.inspiredisplays.com/ServiceContract.Model/ClientDisplayGroupsServi" +
            "ceContract/UpdateDisplayGroupGeneralFaultContractFault", Name="GeneralFaultContract", Namespace="http://schemas.inspiredisplays.com/DataContract.Model/")]
        Inspire.Server.Proxy.DisplayGroupsServiceReference.UpdateDisplayGroupResponseMessage UpdateDisplayGroup(Inspire.Server.Proxy.DisplayGroupsServiceReference.UpdateDisplayGroupRequestMessage request);
        
        // CODEGEN: Generating message contract since the operation DeleteDisplayGroup is neither RPC nor document wrapped.
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.inspiredisplays.com/ServiceContract.Model/ClientDisplayGroupsServi" +
            "ceContract/DeleteDisplayGroup", ReplyAction="http://schemas.inspiredisplays.com/ServiceContract.Model/ClientDisplayGroupsServi" +
            "ceContract/DeleteDisplayGroupResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Inspire.Server.Proxy.DisplayGroupsServiceReference.GeneralFaultContract), Action="http://schemas.inspiredisplays.com/ServiceContract.Model/ClientDisplayGroupsServi" +
            "ceContract/DeleteDisplayGroupGeneralFaultContractFault", Name="GeneralFaultContract", Namespace="http://schemas.inspiredisplays.com/DataContract.Model/")]
        Inspire.Server.Proxy.DisplayGroupsServiceReference.DeleteDisplayGroupResponseMessage DeleteDisplayGroup(Inspire.Server.Proxy.DisplayGroupsServiceReference.DeleteDisplayGroupRequestMessage request);
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class GetAllDisplayGroupsRequestMessage {
        
        public GetAllDisplayGroupsRequestMessage() {
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class GetAllDisplayGroupsResponseMessage {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://schemas.inspiredisplays.com/ServiceContract.Model/", Order=0)]
        public Inspire.Server.Proxy.DisplayGroupsServiceReference.DisplayGroups DisplayGroups;
        
        public GetAllDisplayGroupsResponseMessage() {
        }
        
        public GetAllDisplayGroupsResponseMessage(Inspire.Server.Proxy.DisplayGroupsServiceReference.DisplayGroups DisplayGroups) {
            this.DisplayGroups = DisplayGroups;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class GetDisplayGroupsRequestMessage {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://schemas.inspiredisplays.com/ServiceContract.Model/", Order=0)]
        public string PropertyID;
        
        public GetDisplayGroupsRequestMessage() {
        }
        
        public GetDisplayGroupsRequestMessage(string PropertyID) {
            this.PropertyID = PropertyID;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class GetDisplayGroupsResponseMessage {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://schemas.inspiredisplays.com/ServiceContract.Model/", Order=0)]
        public Inspire.Server.Proxy.DisplayGroupsServiceReference.DisplayGroups DisplayGroups;
        
        public GetDisplayGroupsResponseMessage() {
        }
        
        public GetDisplayGroupsResponseMessage(Inspire.Server.Proxy.DisplayGroupsServiceReference.DisplayGroups DisplayGroups) {
            this.DisplayGroups = DisplayGroups;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class AddDisplayGroupRequestMessage {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://schemas.inspiredisplays.com/ServiceContract.Model/", Order=0)]
        public Inspire.Server.Proxy.DisplayGroupsServiceReference.DisplayGroup DisplayGroup;
        
        public AddDisplayGroupRequestMessage() {
        }
        
        public AddDisplayGroupRequestMessage(Inspire.Server.Proxy.DisplayGroupsServiceReference.DisplayGroup DisplayGroup) {
            this.DisplayGroup = DisplayGroup;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class AddDisplayGroupResponseMessage {
        
        public AddDisplayGroupResponseMessage() {
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class UpdateDisplayGroupRequestMessage {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://schemas.inspiredisplays.com/ServiceContract.Model/", Order=0)]
        public Inspire.Server.Proxy.DisplayGroupsServiceReference.DisplayGroup DisplayGroup;
        
        public UpdateDisplayGroupRequestMessage() {
        }
        
        public UpdateDisplayGroupRequestMessage(Inspire.Server.Proxy.DisplayGroupsServiceReference.DisplayGroup DisplayGroup) {
            this.DisplayGroup = DisplayGroup;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class UpdateDisplayGroupResponseMessage {
        
        public UpdateDisplayGroupResponseMessage() {
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class DeleteDisplayGroupRequestMessage {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://schemas.inspiredisplays.com/ServiceContract.Model/", Order=0)]
        public string GUID;
        
        public DeleteDisplayGroupRequestMessage() {
        }
        
        public DeleteDisplayGroupRequestMessage(string GUID) {
            this.GUID = GUID;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class DeleteDisplayGroupResponseMessage {
        
        public DeleteDisplayGroupResponseMessage() {
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ClientDisplayGroupsServiceContractChannel : Inspire.Server.Proxy.DisplayGroupsServiceReference.ClientDisplayGroupsServiceContract, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ClientDisplayGroupsServiceContractClient : System.ServiceModel.ClientBase<Inspire.Server.Proxy.DisplayGroupsServiceReference.ClientDisplayGroupsServiceContract>, Inspire.Server.Proxy.DisplayGroupsServiceReference.ClientDisplayGroupsServiceContract {
        
        public ClientDisplayGroupsServiceContractClient() {
        }
        
        public ClientDisplayGroupsServiceContractClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public ClientDisplayGroupsServiceContractClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ClientDisplayGroupsServiceContractClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ClientDisplayGroupsServiceContractClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Inspire.Server.Proxy.DisplayGroupsServiceReference.GetAllDisplayGroupsResponseMessage Inspire.Server.Proxy.DisplayGroupsServiceReference.ClientDisplayGroupsServiceContract.GetAllDisplayGroups(Inspire.Server.Proxy.DisplayGroupsServiceReference.GetAllDisplayGroupsRequestMessage request) {
            return base.Channel.GetAllDisplayGroups(request);
        }
        
        public Inspire.Server.Proxy.DisplayGroupsServiceReference.DisplayGroups GetAllDisplayGroups() {
            Inspire.Server.Proxy.DisplayGroupsServiceReference.GetAllDisplayGroupsRequestMessage inValue = new Inspire.Server.Proxy.DisplayGroupsServiceReference.GetAllDisplayGroupsRequestMessage();
            Inspire.Server.Proxy.DisplayGroupsServiceReference.GetAllDisplayGroupsResponseMessage retVal = ((Inspire.Server.Proxy.DisplayGroupsServiceReference.ClientDisplayGroupsServiceContract)(this)).GetAllDisplayGroups(inValue);
            return retVal.DisplayGroups;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Inspire.Server.Proxy.DisplayGroupsServiceReference.GetDisplayGroupsResponseMessage Inspire.Server.Proxy.DisplayGroupsServiceReference.ClientDisplayGroupsServiceContract.GetDisplayGroups(Inspire.Server.Proxy.DisplayGroupsServiceReference.GetDisplayGroupsRequestMessage request) {
            return base.Channel.GetDisplayGroups(request);
        }
        
        public Inspire.Server.Proxy.DisplayGroupsServiceReference.DisplayGroups GetDisplayGroups(string PropertyID) {
            Inspire.Server.Proxy.DisplayGroupsServiceReference.GetDisplayGroupsRequestMessage inValue = new Inspire.Server.Proxy.DisplayGroupsServiceReference.GetDisplayGroupsRequestMessage();
            inValue.PropertyID = PropertyID;
            Inspire.Server.Proxy.DisplayGroupsServiceReference.GetDisplayGroupsResponseMessage retVal = ((Inspire.Server.Proxy.DisplayGroupsServiceReference.ClientDisplayGroupsServiceContract)(this)).GetDisplayGroups(inValue);
            return retVal.DisplayGroups;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Inspire.Server.Proxy.DisplayGroupsServiceReference.AddDisplayGroupResponseMessage Inspire.Server.Proxy.DisplayGroupsServiceReference.ClientDisplayGroupsServiceContract.AddDisplayGroup(Inspire.Server.Proxy.DisplayGroupsServiceReference.AddDisplayGroupRequestMessage request) {
            return base.Channel.AddDisplayGroup(request);
        }
        
        public void AddDisplayGroup(Inspire.Server.Proxy.DisplayGroupsServiceReference.DisplayGroup DisplayGroup) {
            Inspire.Server.Proxy.DisplayGroupsServiceReference.AddDisplayGroupRequestMessage inValue = new Inspire.Server.Proxy.DisplayGroupsServiceReference.AddDisplayGroupRequestMessage();
            inValue.DisplayGroup = DisplayGroup;
            Inspire.Server.Proxy.DisplayGroupsServiceReference.AddDisplayGroupResponseMessage retVal = ((Inspire.Server.Proxy.DisplayGroupsServiceReference.ClientDisplayGroupsServiceContract)(this)).AddDisplayGroup(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Inspire.Server.Proxy.DisplayGroupsServiceReference.UpdateDisplayGroupResponseMessage Inspire.Server.Proxy.DisplayGroupsServiceReference.ClientDisplayGroupsServiceContract.UpdateDisplayGroup(Inspire.Server.Proxy.DisplayGroupsServiceReference.UpdateDisplayGroupRequestMessage request) {
            return base.Channel.UpdateDisplayGroup(request);
        }
        
        public void UpdateDisplayGroup(Inspire.Server.Proxy.DisplayGroupsServiceReference.DisplayGroup DisplayGroup) {
            Inspire.Server.Proxy.DisplayGroupsServiceReference.UpdateDisplayGroupRequestMessage inValue = new Inspire.Server.Proxy.DisplayGroupsServiceReference.UpdateDisplayGroupRequestMessage();
            inValue.DisplayGroup = DisplayGroup;
            Inspire.Server.Proxy.DisplayGroupsServiceReference.UpdateDisplayGroupResponseMessage retVal = ((Inspire.Server.Proxy.DisplayGroupsServiceReference.ClientDisplayGroupsServiceContract)(this)).UpdateDisplayGroup(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Inspire.Server.Proxy.DisplayGroupsServiceReference.DeleteDisplayGroupResponseMessage Inspire.Server.Proxy.DisplayGroupsServiceReference.ClientDisplayGroupsServiceContract.DeleteDisplayGroup(Inspire.Server.Proxy.DisplayGroupsServiceReference.DeleteDisplayGroupRequestMessage request) {
            return base.Channel.DeleteDisplayGroup(request);
        }
        
        public void DeleteDisplayGroup(string GUID) {
            Inspire.Server.Proxy.DisplayGroupsServiceReference.DeleteDisplayGroupRequestMessage inValue = new Inspire.Server.Proxy.DisplayGroupsServiceReference.DeleteDisplayGroupRequestMessage();
            inValue.GUID = GUID;
            Inspire.Server.Proxy.DisplayGroupsServiceReference.DeleteDisplayGroupResponseMessage retVal = ((Inspire.Server.Proxy.DisplayGroupsServiceReference.ClientDisplayGroupsServiceContract)(this)).DeleteDisplayGroup(inValue);
        }
    }
}
