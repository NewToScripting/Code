//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace WeatherModule.Proxy.WeatherService {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Location", Namespace="http://schemas.datacontract.org/2004/07/WCFServiceWebRole1")]
    [System.SerializableAttribute()]
    public partial class Location : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CountryField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FullNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<double> LatitudeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LocationCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<double> LongitudeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> ZipCodeField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string City {
            get {
                return this.CityField;
            }
            set {
                if ((object.ReferenceEquals(this.CityField, value) != true)) {
                    this.CityField = value;
                    this.RaisePropertyChanged("City");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Country {
            get {
                return this.CountryField;
            }
            set {
                if ((object.ReferenceEquals(this.CountryField, value) != true)) {
                    this.CountryField = value;
                    this.RaisePropertyChanged("Country");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FullName {
            get {
                return this.FullNameField;
            }
            set {
                if ((object.ReferenceEquals(this.FullNameField, value) != true)) {
                    this.FullNameField = value;
                    this.RaisePropertyChanged("FullName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<double> Latitude {
            get {
                return this.LatitudeField;
            }
            set {
                if ((this.LatitudeField.Equals(value) != true)) {
                    this.LatitudeField = value;
                    this.RaisePropertyChanged("Latitude");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LocationCode {
            get {
                return this.LocationCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.LocationCodeField, value) != true)) {
                    this.LocationCodeField = value;
                    this.RaisePropertyChanged("LocationCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<double> Longitude {
            get {
                return this.LongitudeField;
            }
            set {
                if ((this.LongitudeField.Equals(value) != true)) {
                    this.LongitudeField = value;
                    this.RaisePropertyChanged("Longitude");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string State {
            get {
                return this.StateField;
            }
            set {
                if ((object.ReferenceEquals(this.StateField, value) != true)) {
                    this.StateField = value;
                    this.RaisePropertyChanged("State");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> ZipCode {
            get {
                return this.ZipCodeField;
            }
            set {
                if ((this.ZipCodeField.Equals(value) != true)) {
                    this.ZipCodeField = value;
                    this.RaisePropertyChanged("ZipCode");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="WeatherReport", Namespace="http://schemas.datacontract.org/2004/07/WCFServiceWebRole1")]
    [System.SerializableAttribute()]
    public partial class WeatherReport : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private WeatherModule.Proxy.WeatherService.WeatherRange[] ForecastField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private WeatherModule.Proxy.WeatherService.WeatherPoint LatestWeatherField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private WeatherModule.Proxy.WeatherService.Location LocationField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int SkyCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private WeatherModule.Proxy.WeatherService.WeatherReport.UnitsSystems UnitsSystemField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public WeatherModule.Proxy.WeatherService.WeatherRange[] Forecast {
            get {
                return this.ForecastField;
            }
            set {
                if ((object.ReferenceEquals(this.ForecastField, value) != true)) {
                    this.ForecastField = value;
                    this.RaisePropertyChanged("Forecast");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public WeatherModule.Proxy.WeatherService.WeatherPoint LatestWeather {
            get {
                return this.LatestWeatherField;
            }
            set {
                if ((object.ReferenceEquals(this.LatestWeatherField, value) != true)) {
                    this.LatestWeatherField = value;
                    this.RaisePropertyChanged("LatestWeather");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public WeatherModule.Proxy.WeatherService.Location Location {
            get {
                return this.LocationField;
            }
            set {
                if ((object.ReferenceEquals(this.LocationField, value) != true)) {
                    this.LocationField = value;
                    this.RaisePropertyChanged("Location");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int SkyCode {
            get {
                return this.SkyCodeField;
            }
            set {
                if ((this.SkyCodeField.Equals(value) != true)) {
                    this.SkyCodeField = value;
                    this.RaisePropertyChanged("SkyCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public WeatherModule.Proxy.WeatherService.WeatherReport.UnitsSystems UnitsSystem {
            get {
                return this.UnitsSystemField;
            }
            set {
                if ((this.UnitsSystemField.Equals(value) != true)) {
                    this.UnitsSystemField = value;
                    this.RaisePropertyChanged("UnitsSystem");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
        [System.Runtime.Serialization.DataContractAttribute(Name="WeatherReport.UnitsSystems", Namespace="http://schemas.datacontract.org/2004/07/WCFServiceWebRole1")]
        public enum UnitsSystems : int {
            
            [System.Runtime.Serialization.EnumMemberAttribute()]
            Imperial = 0,
            
            [System.Runtime.Serialization.EnumMemberAttribute()]
            Metric = 1,
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="WeatherPoint", Namespace="http://schemas.datacontract.org/2004/07/WCFServiceWebRole1")]
    [System.SerializableAttribute()]
    public partial class WeatherPoint : WeatherModule.Proxy.WeatherService.Weather {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double FeelsLikeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double TemperatureField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime TimeField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double FeelsLike {
            get {
                return this.FeelsLikeField;
            }
            set {
                if ((this.FeelsLikeField.Equals(value) != true)) {
                    this.FeelsLikeField = value;
                    this.RaisePropertyChanged("FeelsLike");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double Temperature {
            get {
                return this.TemperatureField;
            }
            set {
                if ((this.TemperatureField.Equals(value) != true)) {
                    this.TemperatureField = value;
                    this.RaisePropertyChanged("Temperature");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime Time {
            get {
                return this.TimeField;
            }
            set {
                if ((this.TimeField.Equals(value) != true)) {
                    this.TimeField = value;
                    this.RaisePropertyChanged("Time");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="WeatherRange", Namespace="http://schemas.datacontract.org/2004/07/WCFServiceWebRole1")]
    [System.SerializableAttribute()]
    public partial class WeatherRange : WeatherModule.Proxy.WeatherService.Weather {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime EndTimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double HighTemperatureField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double LowTemperatureField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime StartTimeField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime EndTime {
            get {
                return this.EndTimeField;
            }
            set {
                if ((this.EndTimeField.Equals(value) != true)) {
                    this.EndTimeField = value;
                    this.RaisePropertyChanged("EndTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double HighTemperature {
            get {
                return this.HighTemperatureField;
            }
            set {
                if ((this.HighTemperatureField.Equals(value) != true)) {
                    this.HighTemperatureField = value;
                    this.RaisePropertyChanged("HighTemperature");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double LowTemperature {
            get {
                return this.LowTemperatureField;
            }
            set {
                if ((this.LowTemperatureField.Equals(value) != true)) {
                    this.LowTemperatureField = value;
                    this.RaisePropertyChanged("LowTemperature");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime StartTime {
            get {
                return this.StartTimeField;
            }
            set {
                if ((this.StartTimeField.Equals(value) != true)) {
                    this.StartTimeField = value;
                    this.RaisePropertyChanged("StartTime");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Weather", Namespace="http://schemas.datacontract.org/2004/07/WCFServiceWebRole1")]
    [System.SerializableAttribute()]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(WeatherModule.Proxy.WeatherService.WeatherPoint))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(WeatherModule.Proxy.WeatherService.WeatherRange))]
    public partial class Weather : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<double> HumidityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<double> PrecipitationField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private WeatherModule.Proxy.WeatherService.Sky SkyConditionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private WeatherModule.Proxy.WeatherService.WeatherReport.UnitsSystems UnitsSystemField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private WeatherModule.Proxy.WeatherService.Wind WindVectorField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<double> Humidity {
            get {
                return this.HumidityField;
            }
            set {
                if ((this.HumidityField.Equals(value) != true)) {
                    this.HumidityField = value;
                    this.RaisePropertyChanged("Humidity");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<double> Precipitation {
            get {
                return this.PrecipitationField;
            }
            set {
                if ((this.PrecipitationField.Equals(value) != true)) {
                    this.PrecipitationField = value;
                    this.RaisePropertyChanged("Precipitation");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public WeatherModule.Proxy.WeatherService.Sky SkyCondition {
            get {
                return this.SkyConditionField;
            }
            set {
                if ((object.ReferenceEquals(this.SkyConditionField, value) != true)) {
                    this.SkyConditionField = value;
                    this.RaisePropertyChanged("SkyCondition");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public WeatherModule.Proxy.WeatherService.WeatherReport.UnitsSystems UnitsSystem {
            get {
                return this.UnitsSystemField;
            }
            set {
                if ((this.UnitsSystemField.Equals(value) != true)) {
                    this.UnitsSystemField = value;
                    this.RaisePropertyChanged("UnitsSystem");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public WeatherModule.Proxy.WeatherService.Wind WindVector {
            get {
                return this.WindVectorField;
            }
            set {
                if ((object.ReferenceEquals(this.WindVectorField, value) != true)) {
                    this.WindVectorField = value;
                    this.RaisePropertyChanged("WindVector");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Sky", Namespace="http://schemas.datacontract.org/2004/07/WCFServiceWebRole1")]
    [System.SerializableAttribute()]
    public partial class Sky : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SkyConditionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SkyImageField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SkyCondition {
            get {
                return this.SkyConditionField;
            }
            set {
                if ((object.ReferenceEquals(this.SkyConditionField, value) != true)) {
                    this.SkyConditionField = value;
                    this.RaisePropertyChanged("SkyCondition");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SkyImage {
            get {
                return this.SkyImageField;
            }
            set {
                if ((object.ReferenceEquals(this.SkyImageField, value) != true)) {
                    this.SkyImageField = value;
                    this.RaisePropertyChanged("SkyImage");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Wind", Namespace="http://schemas.datacontract.org/2004/07/WCFServiceWebRole1")]
    [System.SerializableAttribute()]
    public partial class Wind : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private WeatherModule.Proxy.WeatherService.WindDirections DirectionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<double> SpeedField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public WeatherModule.Proxy.WeatherService.WindDirections Direction {
            get {
                return this.DirectionField;
            }
            set {
                if ((this.DirectionField.Equals(value) != true)) {
                    this.DirectionField = value;
                    this.RaisePropertyChanged("Direction");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<double> Speed {
            get {
                return this.SpeedField;
            }
            set {
                if ((this.SpeedField.Equals(value) != true)) {
                    this.SpeedField = value;
                    this.RaisePropertyChanged("Speed");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="WindDirections", Namespace="http://schemas.datacontract.org/2004/07/WCFServiceWebRole1")]
    public enum WindDirections : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        N = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        NNE = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        NE = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ENE = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        E = 4,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ESE = 5,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SE = 6,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SSE = 7,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        S = 8,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SSW = 9,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SW = 10,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        WSW = 11,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        W = 12,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        WNW = 13,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        NW = 14,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        NNW = 15,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="WeatherService.IWeatherService")]
    public interface IWeatherService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWeatherService/QueryLocations", ReplyAction="http://tempuri.org/IWeatherService/QueryLocationsResponse")]
        WeatherModule.Proxy.WeatherService.Location[] QueryLocations(string query);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWeatherService/GetLatestWeatherReport", ReplyAction="http://tempuri.org/IWeatherService/GetLatestWeatherReportResponse")]
        WeatherModule.Proxy.WeatherService.WeatherReport GetLatestWeatherReport(WeatherModule.Proxy.WeatherService.Location location, WeatherModule.Proxy.WeatherService.WeatherReport.UnitsSystems us);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IWeatherServiceChannel : WeatherModule.Proxy.WeatherService.IWeatherService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class WeatherServiceClient : System.ServiceModel.ClientBase<WeatherModule.Proxy.WeatherService.IWeatherService>, WeatherModule.Proxy.WeatherService.IWeatherService {
        
        public WeatherServiceClient() {
        }
        
        public WeatherServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public WeatherServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public WeatherServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public WeatherServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public WeatherModule.Proxy.WeatherService.Location[] QueryLocations(string query) {
            return base.Channel.QueryLocations(query);
        }
        
        public WeatherModule.Proxy.WeatherService.WeatherReport GetLatestWeatherReport(WeatherModule.Proxy.WeatherService.Location location, WeatherModule.Proxy.WeatherService.WeatherReport.UnitsSystems us) {
            return base.Channel.GetLatestWeatherReport(location, us);
        }
    }
}
