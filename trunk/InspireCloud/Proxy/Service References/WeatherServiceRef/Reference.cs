//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Inspire_Proxy.WeatherServiceRef {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Location", Namespace="http://schemas.datacontract.org/2004/07/WeatherService.DataContracts")]
    [System.SerializableAttribute()]
    public partial class Location : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="WeatherReport", Namespace="http://schemas.datacontract.org/2004/07/WeatherService.DataContracts")]
    [System.SerializableAttribute()]
    public partial class WeatherReport : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="WeatherServiceRef.IWeatherService")]
    public interface IWeatherService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWeatherService/QueryLocations", ReplyAction="http://tempuri.org/IWeatherService/QueryLocationsResponse")]
        Inspire_Proxy.WeatherServiceRef.Location[] QueryLocations(string query);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWeatherService/QueryLocations", ReplyAction="http://tempuri.org/IWeatherService/QueryLocationsResponse")]
        System.Threading.Tasks.Task<Inspire_Proxy.WeatherServiceRef.Location[]> QueryLocationsAsync(string query);
        
        // CODEGEN: Generating message contract since element name us from namespace http://tempuri.org/ is not marked nillable
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWeatherService/GetLatestWeatherReport", ReplyAction="http://tempuri.org/IWeatherService/GetLatestWeatherReportResponse")]
        Inspire_Proxy.WeatherServiceRef.GetLatestWeatherReportResponse GetLatestWeatherReport(Inspire_Proxy.WeatherServiceRef.GetLatestWeatherReportRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWeatherService/GetLatestWeatherReport", ReplyAction="http://tempuri.org/IWeatherService/GetLatestWeatherReportResponse")]
        System.Threading.Tasks.Task<Inspire_Proxy.WeatherServiceRef.GetLatestWeatherReportResponse> GetLatestWeatherReportAsync(Inspire_Proxy.WeatherServiceRef.GetLatestWeatherReportRequest request);
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class GetLatestWeatherReportRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="GetLatestWeatherReport", Namespace="http://tempuri.org/", Order=0)]
        public Inspire_Proxy.WeatherServiceRef.GetLatestWeatherReportRequestBody Body;
        
        public GetLatestWeatherReportRequest() {
        }
        
        public GetLatestWeatherReportRequest(Inspire_Proxy.WeatherServiceRef.GetLatestWeatherReportRequestBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://tempuri.org/")]
    public partial class GetLatestWeatherReportRequestBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=0)]
        public Inspire_Proxy.WeatherServiceRef.Location location;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=1)]
        public string us;
        
        public GetLatestWeatherReportRequestBody() {
        }
        
        public GetLatestWeatherReportRequestBody(Inspire_Proxy.WeatherServiceRef.Location location, string us) {
            this.location = location;
            this.us = us;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class GetLatestWeatherReportResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="GetLatestWeatherReportResponse", Namespace="http://tempuri.org/", Order=0)]
        public Inspire_Proxy.WeatherServiceRef.GetLatestWeatherReportResponseBody Body;
        
        public GetLatestWeatherReportResponse() {
        }
        
        public GetLatestWeatherReportResponse(Inspire_Proxy.WeatherServiceRef.GetLatestWeatherReportResponseBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://tempuri.org/")]
    public partial class GetLatestWeatherReportResponseBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=0)]
        public Inspire_Proxy.WeatherServiceRef.WeatherReport GetLatestWeatherReportResult;
        
        public GetLatestWeatherReportResponseBody() {
        }
        
        public GetLatestWeatherReportResponseBody(Inspire_Proxy.WeatherServiceRef.WeatherReport GetLatestWeatherReportResult) {
            this.GetLatestWeatherReportResult = GetLatestWeatherReportResult;
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IWeatherServiceChannel : Inspire_Proxy.WeatherServiceRef.IWeatherService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class WeatherServiceClient : System.ServiceModel.ClientBase<Inspire_Proxy.WeatherServiceRef.IWeatherService>, Inspire_Proxy.WeatherServiceRef.IWeatherService {
        
        public WeatherServiceClient() {
        }
        
        public WeatherServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public WeatherServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public WeatherServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public WeatherServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public Inspire_Proxy.WeatherServiceRef.Location[] QueryLocations(string query) {
            return base.Channel.QueryLocations(query);
        }
        
        public System.Threading.Tasks.Task<Inspire_Proxy.WeatherServiceRef.Location[]> QueryLocationsAsync(string query) {
            return base.Channel.QueryLocationsAsync(query);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Inspire_Proxy.WeatherServiceRef.GetLatestWeatherReportResponse Inspire_Proxy.WeatherServiceRef.IWeatherService.GetLatestWeatherReport(Inspire_Proxy.WeatherServiceRef.GetLatestWeatherReportRequest request) {
            return base.Channel.GetLatestWeatherReport(request);
        }
        
        public Inspire_Proxy.WeatherServiceRef.WeatherReport GetLatestWeatherReport(Inspire_Proxy.WeatherServiceRef.Location location, string us) {
            Inspire_Proxy.WeatherServiceRef.GetLatestWeatherReportRequest inValue = new Inspire_Proxy.WeatherServiceRef.GetLatestWeatherReportRequest();
            inValue.Body = new Inspire_Proxy.WeatherServiceRef.GetLatestWeatherReportRequestBody();
            inValue.Body.location = location;
            inValue.Body.us = us;
            Inspire_Proxy.WeatherServiceRef.GetLatestWeatherReportResponse retVal = ((Inspire_Proxy.WeatherServiceRef.IWeatherService)(this)).GetLatestWeatherReport(inValue);
            return retVal.Body.GetLatestWeatherReportResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<Inspire_Proxy.WeatherServiceRef.GetLatestWeatherReportResponse> Inspire_Proxy.WeatherServiceRef.IWeatherService.GetLatestWeatherReportAsync(Inspire_Proxy.WeatherServiceRef.GetLatestWeatherReportRequest request) {
            return base.Channel.GetLatestWeatherReportAsync(request);
        }
        
        public System.Threading.Tasks.Task<Inspire_Proxy.WeatherServiceRef.GetLatestWeatherReportResponse> GetLatestWeatherReportAsync(Inspire_Proxy.WeatherServiceRef.Location location, string us) {
            Inspire_Proxy.WeatherServiceRef.GetLatestWeatherReportRequest inValue = new Inspire_Proxy.WeatherServiceRef.GetLatestWeatherReportRequest();
            inValue.Body = new Inspire_Proxy.WeatherServiceRef.GetLatestWeatherReportRequestBody();
            inValue.Body.location = location;
            inValue.Body.us = us;
            return ((Inspire_Proxy.WeatherServiceRef.IWeatherService)(this)).GetLatestWeatherReportAsync(inValue);
        }
    }
}
