<UserControl x:Class="EventsModule.DisplayTreeControl"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:d="http://schemas.microsoft.com/expression/interactivedesigner/2006" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" mc:Ignorable="d"
    xmlns:TreeViewModel="clr-namespace:Inspire.Common.TreeViewModel;assembly=Inspire.Common">
    <Grid>
        <TreeView x:Name="AdminTree" ItemsSource="{Binding DisplayProperties}" VerticalAlignment="Stretch" MinWidth="200">
            <TreeView.ItemContainerStyle>
                <!-- This Style binds a TreeViewItem to a TreeViewItemViewModel. -->
                <Style TargetType="{x:Type TreeViewItem}">
                    <Setter Property="IsExpanded" Value="{Binding IsExpanded, Mode=TwoWay}" />
                    <Setter Property="IsSelected" Value="{Binding IsSelected, Mode=TwoWay}" />
                    <Setter Property="Background" Value="Transparent" />
                    <Setter Property="HorizontalContentAlignment" Value="{Binding Path=HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" />
                    <Setter Property="VerticalContentAlignment" Value="{Binding Path=VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" />
                    <Setter Property="Padding" Value="1,0,0,0" />
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="{x:Type TreeViewItem}">
                                <ControlTemplate.Resources>
                                    <Storyboard x:Key="HoverOn">
                                        <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="PART_HeaderHover" Storyboard.TargetProperty="(UIElement.Opacity)">
                                            <SplineDoubleKeyFrame KeyTime="00:00:00.1000000" Value="1" />
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                    <Storyboard x:Key="HoverOff">
                                        <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="PART_HeaderHover" Storyboard.TargetProperty="(UIElement.Opacity)">
                                            <SplineDoubleKeyFrame KeyTime="00:00:00.3000000" Value="0" />
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                    <Storyboard x:Key="SelectedOn">
                                        <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="PART_Header" Storyboard.TargetProperty="(UIElement.BitmapEffect).(OuterGlowBitmapEffect.Opacity)">
                                            <SplineDoubleKeyFrame KeyTime="00:00:00.1000000" Value="0.6" />
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                    <Storyboard x:Key="SelectedOff">
                                        <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="PART_Header" Storyboard.TargetProperty="(UIElement.BitmapEffect).(OuterGlowBitmapEffect.Opacity)">
                                            <SplineDoubleKeyFrame KeyTime="00:00:00.3000000" Value="0" />
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                    <Storyboard x:Key="SelectedHoverOn">
                                        <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="PART_HeaderSelectedHover" Storyboard.TargetProperty="(UIElement.BitmapEffect).(OuterGlowBitmapEffect.Opacity)">
                                            <SplineDoubleKeyFrame KeyTime="00:00:00.1000000" Value="0.6" />
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                    <Storyboard x:Key="SelectedHoverOff">
                                        <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="PART_HeaderSelectedHover" Storyboard.TargetProperty="(UIElement.BitmapEffect).(OuterGlowBitmapEffect.Opacity)">
                                            <SplineDoubleKeyFrame KeyTime="00:00:00.3000000" Value="0" />
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </ControlTemplate.Resources>
                                <Grid>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition MinWidth="19" Width="Auto" />
                                        <ColumnDefinition Width="Auto" />
                                        <ColumnDefinition Width="*" />
                                    </Grid.ColumnDefinitions>
                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="Auto" />
                                        <RowDefinition />
                                    </Grid.RowDefinitions>
                                    <ToggleButton x:Name="Expander" Style="{DynamicResource nuclearTreeViewItemToggleButton}" IsChecked="{Binding Path=IsExpanded, RelativeSource={RelativeSource TemplatedParent}}" ClickMode="Press" />
                                    <Border Grid.Column="1" x:Name="Selection_Border" BorderThickness="{TemplateBinding BorderThickness}" Padding="{TemplateBinding Padding}" CornerRadius="4,4,4,4">
                                        <Grid Width="Auto" Height="Auto" Margin="2,0,2,0">
                                            <ContentPresenter HorizontalAlignment="Stretch" x:Name="PART_Header" ContentSource="Header" d:LayoutOverrides="Width" Margin="0,1,0,1">
                                                <ContentPresenter.BitmapEffect>
                                                    <OuterGlowBitmapEffect GlowColor="{DynamicResource MainColor}" Opacity="0" />
                                                </ContentPresenter.BitmapEffect>
                                            </ContentPresenter>
                                            <ContentPresenter HorizontalAlignment="Stretch" x:Name="PART_HeaderHover" ContentSource="Header" d:LayoutOverrides="Width" Opacity="0" Margin="0,1,0,1">
                                                <ContentPresenter.BitmapEffect>
                                                    <OuterGlowBitmapEffect GlowColor="{DynamicResource MainColor}" />
                                                </ContentPresenter.BitmapEffect>
                                            </ContentPresenter>
                                            <ContentPresenter HorizontalAlignment="Stretch" x:Name="PART_HeaderSelectedHover" ContentSource="Header" d:LayoutOverrides="Width" Margin="0,1,0,1">
                                                <ContentPresenter.BitmapEffect>
                                                    <OuterGlowBitmapEffect GlowColor="{DynamicResource MainColor}" Opacity="0" />
                                                </ContentPresenter.BitmapEffect>
                                            </ContentPresenter>
                                        </Grid>
                                    </Border>
                                    <Border Margin="0,0,-3.803,0" Grid.ColumnSpan="1" Grid.RowSpan="1" Grid.Column="1" x:Name="border" CornerRadius="4,4,4,4" />
                                    <ItemsPresenter Grid.Column="1" Grid.ColumnSpan="2" Grid.Row="1" x:Name="ItemsHost" />
                                </Grid>
                                <ControlTemplate.Triggers>
                                    <MultiTrigger>
                                        <MultiTrigger.ExitActions>
                                            <BeginStoryboard Storyboard="{StaticResource SelectedHoverOff}" x:Name="SelectedHoverOff_BeginStoryboard" />
                                        </MultiTrigger.ExitActions>
                                        <MultiTrigger.EnterActions>
                                            <BeginStoryboard Storyboard="{StaticResource SelectedHoverOn}" x:Name="SelectedHoverOn_BeginStoryboard" />
                                        </MultiTrigger.EnterActions>
                                        <MultiTrigger.Conditions>
                                            <Condition Property="IsSelected" Value="True" />
                                            <Condition Property="IsMouseOver" Value="True" />
                                        </MultiTrigger.Conditions>
                                    </MultiTrigger>
                                    <MultiTrigger>
                                        <MultiTrigger.Conditions>
                                            <Condition Property="IsSelected" Value="False" />
                                            <Condition Property="IsMouseOver" SourceName="Selection_Border" Value="True" />
                                        </MultiTrigger.Conditions>
                                        <MultiTrigger.ExitActions>
                                            <BeginStoryboard x:Name="HoverOff_BeginStoryboard" Storyboard="{StaticResource HoverOff}" />
                                        </MultiTrigger.ExitActions>
                                        <MultiTrigger.EnterActions>
                                            <BeginStoryboard Storyboard="{StaticResource HoverOn}" />
                                        </MultiTrigger.EnterActions>
                                    </MultiTrigger>
                                    <Trigger Property="IsExpanded" Value="false">
                                        <Setter Property="Visibility" Value="Collapsed" TargetName="ItemsHost" />
                                    </Trigger>
                                    <Trigger Property="HasItems" Value="false">
                                        <Setter Property="Visibility" Value="Hidden" TargetName="Expander" />
                                    </Trigger>

                                    <Trigger Property="IsSelected" Value="true">
                                        <Trigger.ExitActions>
                                            <BeginStoryboard x:Name="SelectedOff_BeginStoryboard" Storyboard="{StaticResource SelectedOff}" />
                                        </Trigger.ExitActions>
                                        <Trigger.EnterActions>
                                            <BeginStoryboard x:Name="SelectedOn_BeginStoryboard" Storyboard="{StaticResource SelectedOn}" />
                                        </Trigger.EnterActions>
                                        <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.HighlightTextBrushKey}}" />
                                    </Trigger>
                                    <MultiTrigger>
                                        <MultiTrigger.Conditions>
                                            <Condition Property="IsSelected" Value="true" />
                                            <Condition Property="IsSelectionActive" Value="false" />
                                        </MultiTrigger.Conditions>
                                        <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" />
                                        <Setter Property="Background" TargetName="Selection_Border" Value="#3F545454" />
                                        <Setter Property="Background" TargetName="border" Value="#72000000" />
                                    </MultiTrigger>
                                    <Trigger Property="IsEnabled" Value="false">
                                        <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" />
                                    </Trigger>
                                </ControlTemplate.Triggers>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                    <Setter Property="Foreground">
                        <Setter.Value>
                            <SolidColorBrush Color="{DynamicResource WhiteColor}" />
                        </Setter.Value>
                    </Setter>
                    <Style.Triggers>
                        <Trigger Property="IsSelected" Value="True">
                            <!--<Setter Property="FontWeight" Value="Bold" />-->
                        </Trigger>
                    </Style.Triggers>
                </Style>
            </TreeView.ItemContainerStyle>

            <TreeView.Resources>
                <HierarchicalDataTemplate DataType="{x:Type TreeViewModel:PropertyViewModel}" ItemsSource="{Binding Children}">
                    <StackPanel Orientation="Horizontal" MouseRightButtonUp="OnRightMouseButtonUp">
                        <Image Width="24" Height="24" Margin="3,0" Source="Resources\Images\Property.ico" />
                        <TextBlock Text="{Binding PropertyName}" Foreground="White" />
                    </StackPanel>
                </HierarchicalDataTemplate>

                <HierarchicalDataTemplate DataType="{x:Type TreeViewModel:DisplayGroupViewModel}" ItemsSource="{Binding Children}">
                    <StackPanel Orientation="Horizontal" MouseRightButtonUp="OnRightMouseButtonUp" PreviewMouseLeftButtonDown="TreeItem_PreviewMouseLeftButtonDown">
                        <Image Width="24" Height="24" Margin="3,0" Source="Resources\Images\DisplayGroup.ico" SnapsToDevicePixels="True" />
                        <TextBlock Text="{Binding DisplayGroupName}" />
                    </StackPanel>
                </HierarchicalDataTemplate>

                <DataTemplate DataType="{x:Type TreeViewModel:DisplayViewModel}">
                    <StackPanel Orientation="Horizontal" MouseRightButtonUp="OnRightMouseButtonUp" MouseLeftButtonDown="AdminDisplay_MouseLeftButtonDown" PreviewMouseLeftButtonDown="TreeItem_PreviewMouseLeftButtonDown">
                        <Grid>
                            <Image  Width="24" Height="24" Margin="3,0" Source="Resources\Images\Display.ico" />
                        </Grid>
                        <TextBlock Text="{Binding DisplayName}"  />
                    </StackPanel>
                </DataTemplate>
            </TreeView.Resources>
        </TreeView>
    </Grid>
</UserControl>
