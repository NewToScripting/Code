//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.3053
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Inspire.Events.Proxy.RoomsService {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "3.0.0.0")]
    [System.Runtime.Serialization.CollectionDataContractAttribute(Name="Rooms", Namespace="http://schemas.inspiredisplays.com", ItemName="Rooms")]
    [System.SerializableAttribute()]
    public class Rooms : System.Collections.Generic.List<Inspire.Events.Proxy.RoomsService.Room> {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "3.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Room", Namespace="http://schemas.inspiredisplays.com")]
    [System.SerializableAttribute()]
    public partial class Room : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string GUIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Inspire.Events.Proxy.RoomsService.Aliases AliasesField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string GUID {
            get {
                return this.GUIDField;
            }
            set {
                if ((object.ReferenceEquals(this.GUIDField, value) != true)) {
                    this.GUIDField = value;
                    this.RaisePropertyChanged("GUID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=2)]
        public Inspire.Events.Proxy.RoomsService.Aliases Aliases {
            get {
                return this.AliasesField;
            }
            set {
                if ((object.ReferenceEquals(this.AliasesField, value) != true)) {
                    this.AliasesField = value;
                    this.RaisePropertyChanged("Aliases");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "3.0.0.0")]
    [System.Runtime.Serialization.CollectionDataContractAttribute(Name="Aliases", Namespace="http://schemas.inspiredisplays.com", ItemName="Aliases")]
    [System.SerializableAttribute()]
    public class Aliases : System.Collections.Generic.List<Inspire.Events.Proxy.RoomsService.Alias> {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "3.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Alias", Namespace="http://schemas.inspiredisplays.com")]
    [System.SerializableAttribute()]
    public partial class Alias : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string GUIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ValueField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RoomIDField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string GUID {
            get {
                return this.GUIDField;
            }
            set {
                if ((object.ReferenceEquals(this.GUIDField, value) != true)) {
                    this.GUIDField = value;
                    this.RaisePropertyChanged("GUID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Value {
            get {
                return this.ValueField;
            }
            set {
                if ((object.ReferenceEquals(this.ValueField, value) != true)) {
                    this.ValueField = value;
                    this.RaisePropertyChanged("Value");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=2)]
        public string RoomID {
            get {
                return this.RoomIDField;
            }
            set {
                if ((object.ReferenceEquals(this.RoomIDField, value) != true)) {
                    this.RoomIDField = value;
                    this.RaisePropertyChanged("RoomID");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "3.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GeneralFaultContract", Namespace="http://schemas.inspiredisplays.com")]
    [System.SerializableAttribute()]
    public partial class GeneralFaultContract : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ErrorCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ErrorDescField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ErrorCode {
            get {
                return this.ErrorCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.ErrorCodeField, value) != true)) {
                    this.ErrorCodeField = value;
                    this.RaisePropertyChanged("ErrorCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ErrorDesc {
            get {
                return this.ErrorDescField;
            }
            set {
                if ((object.ReferenceEquals(this.ErrorDescField, value) != true)) {
                    this.ErrorDescField = value;
                    this.RaisePropertyChanged("ErrorDesc");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(Namespace="http://schemas.inspiredisplays.com", ConfigurationName="RoomsService.RoomsServiceContract")]
    public interface RoomsServiceContract {
        
        // CODEGEN: Generating message contract since the operation GetRooms is neither RPC nor document wrapped.
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.inspiredisplays.com/ServiceContract1/GetRooms", ReplyAction="http://schemas.inspiredisplays.com/RoomsServiceContract/GetRoomsResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Inspire.Events.Proxy.RoomsService.GeneralFaultContract), Action="http://schemas.inspiredisplays.com/RoomsServiceContract/GetRoomsGeneralFaultContr" +
            "actFault", Name="GeneralFaultContract")]
        Inspire.Events.Proxy.RoomsService.GetRoomsResponseMessage GetRooms(Inspire.Events.Proxy.RoomsService.GetRoomsRequestMessage request);
        
        // CODEGEN: Generating message contract since the operation GetRoomsFromDisplayID is neither RPC nor document wrapped.
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.inspiredisplays.com/ServiceContract1/GetRoomsFromDisplayID", ReplyAction="http://schemas.inspiredisplays.com/RoomsServiceContract/GetRoomsFromDisplayIDResp" +
            "onse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Inspire.Events.Proxy.RoomsService.GeneralFaultContract), Action="http://schemas.inspiredisplays.com/RoomsServiceContract/GetRoomsFromDisplayIDGene" +
            "ralFaultContractFault", Name="GeneralFaultContract")]
        Inspire.Events.Proxy.RoomsService.GetRoomsFromDisplayIDResponseMessage GetRoomsFromDisplayID(Inspire.Events.Proxy.RoomsService.GetRoomsFromDisplayIDRequestMessage request);
        
        // CODEGEN: Generating message contract since the operation AddRoom is neither RPC nor document wrapped.
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.inspiredisplays.com/ServiceContract1/AddRoom", ReplyAction="http://schemas.inspiredisplays.com/RoomsServiceContract/AddRoomResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Inspire.Events.Proxy.RoomsService.GeneralFaultContract), Action="http://schemas.inspiredisplays.com/RoomsServiceContract/AddRoomGeneralFaultContra" +
            "ctFault", Name="GeneralFaultContract")]
        Inspire.Events.Proxy.RoomsService.AddRoomResponseMessage AddRoom(Inspire.Events.Proxy.RoomsService.AddRoomRequestMessage request);
        
        // CODEGEN: Generating message contract since the operation AddRoomToDisplayAssn is neither RPC nor document wrapped.
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.inspiredisplays.com/RoomsServiceContract/AddRoomToDisplayAssn", ReplyAction="http://schemas.inspiredisplays.com/RoomsServiceContract/AddRoomToDisplayAssnRespo" +
            "nse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Inspire.Events.Proxy.RoomsService.GeneralFaultContract), Action="http://schemas.inspiredisplays.com/RoomsServiceContract/AddRoomToDisplayAssnGener" +
            "alFaultContractFault", Name="GeneralFaultContract")]
        Inspire.Events.Proxy.RoomsService.AddRoomToDisplayAssnResponseMessage AddRoomToDisplayAssn(Inspire.Events.Proxy.RoomsService.AddRoomToDisplayAssnRequestMessage request);
        
        // CODEGEN: Generating message contract since the operation DeleteRoomToDisplayAssn is neither RPC nor document wrapped.
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.inspiredisplays.com/RoomsServiceContract/DeleteRoomToDisplayAssn", ReplyAction="http://schemas.inspiredisplays.com/RoomsServiceContract/DeleteRoomToDisplayAssnRe" +
            "sponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Inspire.Events.Proxy.RoomsService.GeneralFaultContract), Action="http://schemas.inspiredisplays.com/RoomsServiceContract/DeleteRoomToDisplayAssnGe" +
            "neralFaultContractFault", Name="GeneralFaultContract")]
        Inspire.Events.Proxy.RoomsService.DeleteRoomToDisplayAssnResponseMessage DeleteRoomToDisplayAssn(Inspire.Events.Proxy.RoomsService.DeleteRoomToDisplayAssnRequestMessage request);
        
        // CODEGEN: Generating message contract since the operation DeleteRoom is neither RPC nor document wrapped.
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.inspiredisplays.com/RoomsServiceContract/DeleteRoom", ReplyAction="http://schemas.inspiredisplays.com/RoomsServiceContract/DeleteRoomResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Inspire.Events.Proxy.RoomsService.GeneralFaultContract), Action="http://schemas.inspiredisplays.com/RoomsServiceContract/DeleteRoomGeneralFaultCon" +
            "tractFault", Name="GeneralFaultContract")]
        Inspire.Events.Proxy.RoomsService.DeleteRoomResponseMessage DeleteRoom(Inspire.Events.Proxy.RoomsService.DeleteRoomRequestMessage request);
        
        // CODEGEN: Generating message contract since the operation GetAliases is neither RPC nor document wrapped.
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.inspiredisplays.com/RoomsServiceContract/GetAliases", ReplyAction="http://schemas.inspiredisplays.com/RoomsServiceContract/GetAliasesResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Inspire.Events.Proxy.RoomsService.GeneralFaultContract), Action="http://schemas.inspiredisplays.com/RoomsServiceContract/GetAliasesGeneralFaultCon" +
            "tractFault", Name="GeneralFaultContract")]
        Inspire.Events.Proxy.RoomsService.GetAliasesResponseMessage GetAliases(Inspire.Events.Proxy.RoomsService.GetAliasesRequestMessage request);
        
        // CODEGEN: Generating message contract since the operation AddAlias is neither RPC nor document wrapped.
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.inspiredisplays.com/RoomsServiceContract/AddAlias", ReplyAction="http://schemas.inspiredisplays.com/RoomsServiceContract/AddAliasResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Inspire.Events.Proxy.RoomsService.GeneralFaultContract), Action="http://schemas.inspiredisplays.com/RoomsServiceContract/AddAliasGeneralFaultContr" +
            "actFault", Name="GeneralFaultContract")]
        Inspire.Events.Proxy.RoomsService.AddAliasResponseMessage AddAlias(Inspire.Events.Proxy.RoomsService.AddAliasRequestMessage request);
        
        // CODEGEN: Generating message contract since the operation DeleteAlias is neither RPC nor document wrapped.
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.inspiredisplays.com/RoomsServiceContract/DeleteAlias", ReplyAction="http://schemas.inspiredisplays.com/RoomsServiceContract/DeleteAliasResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Inspire.Events.Proxy.RoomsService.GeneralFaultContract), Action="http://schemas.inspiredisplays.com/RoomsServiceContract/DeleteAliasGeneralFaultCo" +
            "ntractFault", Name="GeneralFaultContract")]
        Inspire.Events.Proxy.RoomsService.DeleteAliasResponseMessage DeleteAlias(Inspire.Events.Proxy.RoomsService.DeleteAliasRequestMessage request);
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class GetRoomsRequestMessage {
        
        public GetRoomsRequestMessage() {
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class GetRoomsResponseMessage {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://schemas.inspiredisplays.com", Order=0)]
        public Inspire.Events.Proxy.RoomsService.Rooms Rooms;
        
        public GetRoomsResponseMessage() {
        }
        
        public GetRoomsResponseMessage(Inspire.Events.Proxy.RoomsService.Rooms Rooms) {
            this.Rooms = Rooms;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class GetRoomsFromDisplayIDRequestMessage {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://schemas.inspiredisplays.com", Order=0)]
        public string DisplayID;
        
        public GetRoomsFromDisplayIDRequestMessage() {
        }
        
        public GetRoomsFromDisplayIDRequestMessage(string DisplayID) {
            this.DisplayID = DisplayID;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class GetRoomsFromDisplayIDResponseMessage {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://schemas.inspiredisplays.com", Order=0)]
        public Inspire.Events.Proxy.RoomsService.Rooms Rooms;
        
        public GetRoomsFromDisplayIDResponseMessage() {
        }
        
        public GetRoomsFromDisplayIDResponseMessage(Inspire.Events.Proxy.RoomsService.Rooms Rooms) {
            this.Rooms = Rooms;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="AddRoomRequestMessage", WrapperNamespace="http://schemas.inspiredisplays.com", IsWrapped=true)]
    public partial class AddRoomRequestMessage {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://schemas.inspiredisplays.com", Order=0)]
        public Inspire.Events.Proxy.RoomsService.Room Room;
        
        public AddRoomRequestMessage() {
        }
        
        public AddRoomRequestMessage(Inspire.Events.Proxy.RoomsService.Room Room) {
            this.Room = Room;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class AddRoomResponseMessage {
        
        public AddRoomResponseMessage() {
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="AddRoomToDisplayAssnRequestMessage", WrapperNamespace="http://schemas.inspiredisplays.com", IsWrapped=true)]
    public partial class AddRoomToDisplayAssnRequestMessage {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://schemas.inspiredisplays.com", Order=0)]
        public string DisplayID;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://schemas.inspiredisplays.com", Order=1)]
        public string RoomID;
        
        public AddRoomToDisplayAssnRequestMessage() {
        }
        
        public AddRoomToDisplayAssnRequestMessage(string DisplayID, string RoomID) {
            this.DisplayID = DisplayID;
            this.RoomID = RoomID;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class AddRoomToDisplayAssnResponseMessage {
        
        public AddRoomToDisplayAssnResponseMessage() {
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="DeleteRoomToDisplayAssnRequestMessage", WrapperNamespace="http://schemas.inspiredisplays.com", IsWrapped=true)]
    public partial class DeleteRoomToDisplayAssnRequestMessage {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://schemas.inspiredisplays.com", Order=0)]
        public string DisplayID;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://schemas.inspiredisplays.com", Order=1)]
        public string RoomID;
        
        public DeleteRoomToDisplayAssnRequestMessage() {
        }
        
        public DeleteRoomToDisplayAssnRequestMessage(string DisplayID, string RoomID) {
            this.DisplayID = DisplayID;
            this.RoomID = RoomID;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class DeleteRoomToDisplayAssnResponseMessage {
        
        public DeleteRoomToDisplayAssnResponseMessage() {
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class DeleteRoomRequestMessage {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://schemas.inspiredisplays.com", Order=0)]
        public string GUID;
        
        public DeleteRoomRequestMessage() {
        }
        
        public DeleteRoomRequestMessage(string GUID) {
            this.GUID = GUID;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class DeleteRoomResponseMessage {
        
        public DeleteRoomResponseMessage() {
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class GetAliasesRequestMessage {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://schemas.inspiredisplays.com", Order=0)]
        public string RoomID;
        
        public GetAliasesRequestMessage() {
        }
        
        public GetAliasesRequestMessage(string RoomID) {
            this.RoomID = RoomID;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class GetAliasesResponseMessage {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://schemas.inspiredisplays.com", Order=0)]
        public Inspire.Events.Proxy.RoomsService.Aliases Aliases;
        
        public GetAliasesResponseMessage() {
        }
        
        public GetAliasesResponseMessage(Inspire.Events.Proxy.RoomsService.Aliases Aliases) {
            this.Aliases = Aliases;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class AddAliasRequestMessage {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://schemas.inspiredisplays.com", Order=0)]
        public Inspire.Events.Proxy.RoomsService.Alias Alias;
        
        public AddAliasRequestMessage() {
        }
        
        public AddAliasRequestMessage(Inspire.Events.Proxy.RoomsService.Alias Alias) {
            this.Alias = Alias;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class AddAliasResponseMessage {
        
        public AddAliasResponseMessage() {
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class DeleteAliasRequestMessage {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://schemas.inspiredisplays.com", Order=0)]
        public string AliasID;
        
        public DeleteAliasRequestMessage() {
        }
        
        public DeleteAliasRequestMessage(string AliasID) {
            this.AliasID = AliasID;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class DeleteAliasResponseMessage {
        
        public DeleteAliasResponseMessage() {
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    public interface RoomsServiceContractChannel : Inspire.Events.Proxy.RoomsService.RoomsServiceContract, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    public partial class RoomsServiceContractClient : System.ServiceModel.ClientBase<Inspire.Events.Proxy.RoomsService.RoomsServiceContract>, Inspire.Events.Proxy.RoomsService.RoomsServiceContract {
        
        public RoomsServiceContractClient() {
        }
        
        public RoomsServiceContractClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public RoomsServiceContractClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public RoomsServiceContractClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public RoomsServiceContractClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Inspire.Events.Proxy.RoomsService.GetRoomsResponseMessage Inspire.Events.Proxy.RoomsService.RoomsServiceContract.GetRooms(Inspire.Events.Proxy.RoomsService.GetRoomsRequestMessage request) {
            return base.Channel.GetRooms(request);
        }
        
        public Inspire.Events.Proxy.RoomsService.Rooms GetRooms() {
            Inspire.Events.Proxy.RoomsService.GetRoomsRequestMessage inValue = new Inspire.Events.Proxy.RoomsService.GetRoomsRequestMessage();
            Inspire.Events.Proxy.RoomsService.GetRoomsResponseMessage retVal = ((Inspire.Events.Proxy.RoomsService.RoomsServiceContract)(this)).GetRooms(inValue);
            return retVal.Rooms;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Inspire.Events.Proxy.RoomsService.GetRoomsFromDisplayIDResponseMessage Inspire.Events.Proxy.RoomsService.RoomsServiceContract.GetRoomsFromDisplayID(Inspire.Events.Proxy.RoomsService.GetRoomsFromDisplayIDRequestMessage request) {
            return base.Channel.GetRoomsFromDisplayID(request);
        }
        
        public Inspire.Events.Proxy.RoomsService.Rooms GetRoomsFromDisplayID(string DisplayID) {
            Inspire.Events.Proxy.RoomsService.GetRoomsFromDisplayIDRequestMessage inValue = new Inspire.Events.Proxy.RoomsService.GetRoomsFromDisplayIDRequestMessage();
            inValue.DisplayID = DisplayID;
            Inspire.Events.Proxy.RoomsService.GetRoomsFromDisplayIDResponseMessage retVal = ((Inspire.Events.Proxy.RoomsService.RoomsServiceContract)(this)).GetRoomsFromDisplayID(inValue);
            return retVal.Rooms;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Inspire.Events.Proxy.RoomsService.AddRoomResponseMessage Inspire.Events.Proxy.RoomsService.RoomsServiceContract.AddRoom(Inspire.Events.Proxy.RoomsService.AddRoomRequestMessage request) {
            return base.Channel.AddRoom(request);
        }
        
        public void AddRoom(Inspire.Events.Proxy.RoomsService.Room Room) {
            Inspire.Events.Proxy.RoomsService.AddRoomRequestMessage inValue = new Inspire.Events.Proxy.RoomsService.AddRoomRequestMessage();
            inValue.Room = Room;
            Inspire.Events.Proxy.RoomsService.AddRoomResponseMessage retVal = ((Inspire.Events.Proxy.RoomsService.RoomsServiceContract)(this)).AddRoom(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Inspire.Events.Proxy.RoomsService.AddRoomToDisplayAssnResponseMessage Inspire.Events.Proxy.RoomsService.RoomsServiceContract.AddRoomToDisplayAssn(Inspire.Events.Proxy.RoomsService.AddRoomToDisplayAssnRequestMessage request) {
            return base.Channel.AddRoomToDisplayAssn(request);
        }
        
        public void AddRoomToDisplayAssn(string DisplayID, string RoomID) {
            Inspire.Events.Proxy.RoomsService.AddRoomToDisplayAssnRequestMessage inValue = new Inspire.Events.Proxy.RoomsService.AddRoomToDisplayAssnRequestMessage();
            inValue.DisplayID = DisplayID;
            inValue.RoomID = RoomID;
            Inspire.Events.Proxy.RoomsService.AddRoomToDisplayAssnResponseMessage retVal = ((Inspire.Events.Proxy.RoomsService.RoomsServiceContract)(this)).AddRoomToDisplayAssn(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Inspire.Events.Proxy.RoomsService.DeleteRoomToDisplayAssnResponseMessage Inspire.Events.Proxy.RoomsService.RoomsServiceContract.DeleteRoomToDisplayAssn(Inspire.Events.Proxy.RoomsService.DeleteRoomToDisplayAssnRequestMessage request) {
            return base.Channel.DeleteRoomToDisplayAssn(request);
        }
        
        public void DeleteRoomToDisplayAssn(string DisplayID, string RoomID) {
            Inspire.Events.Proxy.RoomsService.DeleteRoomToDisplayAssnRequestMessage inValue = new Inspire.Events.Proxy.RoomsService.DeleteRoomToDisplayAssnRequestMessage();
            inValue.DisplayID = DisplayID;
            inValue.RoomID = RoomID;
            Inspire.Events.Proxy.RoomsService.DeleteRoomToDisplayAssnResponseMessage retVal = ((Inspire.Events.Proxy.RoomsService.RoomsServiceContract)(this)).DeleteRoomToDisplayAssn(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Inspire.Events.Proxy.RoomsService.DeleteRoomResponseMessage Inspire.Events.Proxy.RoomsService.RoomsServiceContract.DeleteRoom(Inspire.Events.Proxy.RoomsService.DeleteRoomRequestMessage request) {
            return base.Channel.DeleteRoom(request);
        }
        
        public void DeleteRoom(string GUID) {
            Inspire.Events.Proxy.RoomsService.DeleteRoomRequestMessage inValue = new Inspire.Events.Proxy.RoomsService.DeleteRoomRequestMessage();
            inValue.GUID = GUID;
            Inspire.Events.Proxy.RoomsService.DeleteRoomResponseMessage retVal = ((Inspire.Events.Proxy.RoomsService.RoomsServiceContract)(this)).DeleteRoom(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Inspire.Events.Proxy.RoomsService.GetAliasesResponseMessage Inspire.Events.Proxy.RoomsService.RoomsServiceContract.GetAliases(Inspire.Events.Proxy.RoomsService.GetAliasesRequestMessage request) {
            return base.Channel.GetAliases(request);
        }
        
        public Inspire.Events.Proxy.RoomsService.Aliases GetAliases(string RoomID) {
            Inspire.Events.Proxy.RoomsService.GetAliasesRequestMessage inValue = new Inspire.Events.Proxy.RoomsService.GetAliasesRequestMessage();
            inValue.RoomID = RoomID;
            Inspire.Events.Proxy.RoomsService.GetAliasesResponseMessage retVal = ((Inspire.Events.Proxy.RoomsService.RoomsServiceContract)(this)).GetAliases(inValue);
            return retVal.Aliases;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Inspire.Events.Proxy.RoomsService.AddAliasResponseMessage Inspire.Events.Proxy.RoomsService.RoomsServiceContract.AddAlias(Inspire.Events.Proxy.RoomsService.AddAliasRequestMessage request) {
            return base.Channel.AddAlias(request);
        }
        
        public void AddAlias(Inspire.Events.Proxy.RoomsService.Alias Alias) {
            Inspire.Events.Proxy.RoomsService.AddAliasRequestMessage inValue = new Inspire.Events.Proxy.RoomsService.AddAliasRequestMessage();
            inValue.Alias = Alias;
            Inspire.Events.Proxy.RoomsService.AddAliasResponseMessage retVal = ((Inspire.Events.Proxy.RoomsService.RoomsServiceContract)(this)).AddAlias(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Inspire.Events.Proxy.RoomsService.DeleteAliasResponseMessage Inspire.Events.Proxy.RoomsService.RoomsServiceContract.DeleteAlias(Inspire.Events.Proxy.RoomsService.DeleteAliasRequestMessage request) {
            return base.Channel.DeleteAlias(request);
        }
        
        public void DeleteAlias(string AliasID) {
            Inspire.Events.Proxy.RoomsService.DeleteAliasRequestMessage inValue = new Inspire.Events.Proxy.RoomsService.DeleteAliasRequestMessage();
            inValue.AliasID = AliasID;
            Inspire.Events.Proxy.RoomsService.DeleteAliasResponseMessage retVal = ((Inspire.Events.Proxy.RoomsService.RoomsServiceContract)(this)).DeleteAlias(inValue);
        }
    }
}
