//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.1
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Inspire.Events.Proxy.ImageReference {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.CollectionDataContractAttribute(Name="EventImages", Namespace="http://schemas.inspiredisplays.com", ItemName="EventImages")]
    [System.SerializableAttribute()]
    public class EventImages : System.Collections.Generic.List<Inspire.Events.Proxy.ImageReference.EventImage> {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="EventImage", Namespace="http://schemas.inspiredisplays.com")]
    [System.SerializableAttribute()]
    public partial class EventImage : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string GUIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string WebPathField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FileExtensionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> TypeField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string GUID {
            get {
                return this.GUIDField;
            }
            set {
                if ((object.ReferenceEquals(this.GUIDField, value) != true)) {
                    this.GUIDField = value;
                    this.RaisePropertyChanged("GUID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=1)]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=2)]
        public string WebPath {
            get {
                return this.WebPathField;
            }
            set {
                if ((object.ReferenceEquals(this.WebPathField, value) != true)) {
                    this.WebPathField = value;
                    this.RaisePropertyChanged("WebPath");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=3)]
        public string FileExtension {
            get {
                return this.FileExtensionField;
            }
            set {
                if ((object.ReferenceEquals(this.FileExtensionField, value) != true)) {
                    this.FileExtensionField = value;
                    this.RaisePropertyChanged("FileExtension");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=4)]
        public System.Nullable<int> Type {
            get {
                return this.TypeField;
            }
            set {
                if ((this.TypeField.Equals(value) != true)) {
                    this.TypeField = value;
                    this.RaisePropertyChanged("Type");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GeneralFaultContract", Namespace="http://schemas.inspiredisplays.com")]
    [System.SerializableAttribute()]
    public partial class GeneralFaultContract : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ErrorCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ErrorDescField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ErrorCode {
            get {
                return this.ErrorCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.ErrorCodeField, value) != true)) {
                    this.ErrorCodeField = value;
                    this.RaisePropertyChanged("ErrorCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ErrorDesc {
            get {
                return this.ErrorDescField;
            }
            set {
                if ((object.ReferenceEquals(this.ErrorDescField, value) != true)) {
                    this.ErrorDescField = value;
                    this.RaisePropertyChanged("ErrorDesc");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(Namespace="http://schemas.inspiredisplays.com", ConfigurationName="ImageReference.ImageServiceContract")]
    public interface ImageServiceContract {
        
        // CODEGEN: Generating message contract since the operation GetImages is neither RPC nor document wrapped.
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.inspiredisplays.com/DirectionServiceContract/GetImages", ReplyAction="http://schemas.inspiredisplays.com/ImageServiceContract/GetImagesResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Inspire.Events.Proxy.ImageReference.GeneralFaultContract), Action="http://schemas.inspiredisplays.com/ImageServiceContract/GetImagesGeneralFaultCont" +
            "ractFault", Name="GeneralFaultContract")]
        Inspire.Events.Proxy.ImageReference.GetImagesResponseMessage GetImages(Inspire.Events.Proxy.ImageReference.GetImagesRequestMessage request);
        
        // CODEGEN: Generating message contract since the operation AddImage is neither RPC nor document wrapped.
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.inspiredisplays.com/DirectionServiceContract/AddImage", ReplyAction="http://schemas.inspiredisplays.com/ImageServiceContract/AddImageResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Inspire.Events.Proxy.ImageReference.GeneralFaultContract), Action="http://schemas.inspiredisplays.com/ImageServiceContract/AddImageGeneralFaultContr" +
            "actFault", Name="GeneralFaultContract")]
        Inspire.Events.Proxy.ImageReference.AddImageResponseMessage AddImage(Inspire.Events.Proxy.ImageReference.AddImageRequestMessage request);
        
        // CODEGEN: Generating message contract since the operation DeleteImage is neither RPC nor document wrapped.
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.inspiredisplays.com/DirectionServiceContract/DeleteImage", ReplyAction="http://schemas.inspiredisplays.com/ImageServiceContract/DeleteImageResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Inspire.Events.Proxy.ImageReference.GeneralFaultContract), Action="http://schemas.inspiredisplays.com/ImageServiceContract/DeleteImageGeneralFaultCo" +
            "ntractFault", Name="GeneralFaultContract")]
        Inspire.Events.Proxy.ImageReference.DeleteImageResponseMessage DeleteImage(Inspire.Events.Proxy.ImageReference.DeleteImageRequestMessage request);
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class GetImagesRequestMessage {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://schemas.inspiredisplays.com", Order=0)]
        public int Type;
        
        public GetImagesRequestMessage() {
        }
        
        public GetImagesRequestMessage(int Type) {
            this.Type = Type;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class GetImagesResponseMessage {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://schemas.inspiredisplays.com", Order=0)]
        public Inspire.Events.Proxy.ImageReference.EventImages EventImages;
        
        public GetImagesResponseMessage() {
        }
        
        public GetImagesResponseMessage(Inspire.Events.Proxy.ImageReference.EventImages EventImages) {
            this.EventImages = EventImages;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class AddImageRequestMessage {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://schemas.inspiredisplays.com", Order=0)]
        public Inspire.Events.Proxy.ImageReference.EventImage EventImage;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://schemas.inspiredisplays.com", Order=1)]
        public byte[] ImageFile;
        
        public AddImageRequestMessage() {
        }
        
        public AddImageRequestMessage(Inspire.Events.Proxy.ImageReference.EventImage EventImage, byte[] ImageFile) {
            this.EventImage = EventImage;
            this.ImageFile = ImageFile;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class AddImageResponseMessage {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://schemas.inspiredisplays.com", Order=0)]
        public string WebPath;
        
        public AddImageResponseMessage() {
        }
        
        public AddImageResponseMessage(string WebPath) {
            this.WebPath = WebPath;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class DeleteImageRequestMessage {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://schemas.inspiredisplays.com", Order=0)]
        public Inspire.Events.Proxy.ImageReference.EventImage EventImage;
        
        public DeleteImageRequestMessage() {
        }
        
        public DeleteImageRequestMessage(Inspire.Events.Proxy.ImageReference.EventImage EventImage) {
            this.EventImage = EventImage;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class DeleteImageResponseMessage {
        
        public DeleteImageResponseMessage() {
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ImageServiceContractChannel : Inspire.Events.Proxy.ImageReference.ImageServiceContract, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ImageServiceContractClient : System.ServiceModel.ClientBase<Inspire.Events.Proxy.ImageReference.ImageServiceContract>, Inspire.Events.Proxy.ImageReference.ImageServiceContract {
        
        public ImageServiceContractClient() {
        }
        
        public ImageServiceContractClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public ImageServiceContractClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ImageServiceContractClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ImageServiceContractClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Inspire.Events.Proxy.ImageReference.GetImagesResponseMessage Inspire.Events.Proxy.ImageReference.ImageServiceContract.GetImages(Inspire.Events.Proxy.ImageReference.GetImagesRequestMessage request) {
            return base.Channel.GetImages(request);
        }
        
        public Inspire.Events.Proxy.ImageReference.EventImages GetImages(int Type) {
            Inspire.Events.Proxy.ImageReference.GetImagesRequestMessage inValue = new Inspire.Events.Proxy.ImageReference.GetImagesRequestMessage();
            inValue.Type = Type;
            Inspire.Events.Proxy.ImageReference.GetImagesResponseMessage retVal = ((Inspire.Events.Proxy.ImageReference.ImageServiceContract)(this)).GetImages(inValue);
            return retVal.EventImages;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Inspire.Events.Proxy.ImageReference.AddImageResponseMessage Inspire.Events.Proxy.ImageReference.ImageServiceContract.AddImage(Inspire.Events.Proxy.ImageReference.AddImageRequestMessage request) {
            return base.Channel.AddImage(request);
        }
        
        public string AddImage(Inspire.Events.Proxy.ImageReference.EventImage EventImage, byte[] ImageFile) {
            Inspire.Events.Proxy.ImageReference.AddImageRequestMessage inValue = new Inspire.Events.Proxy.ImageReference.AddImageRequestMessage();
            inValue.EventImage = EventImage;
            inValue.ImageFile = ImageFile;
            Inspire.Events.Proxy.ImageReference.AddImageResponseMessage retVal = ((Inspire.Events.Proxy.ImageReference.ImageServiceContract)(this)).AddImage(inValue);
            return retVal.WebPath;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Inspire.Events.Proxy.ImageReference.DeleteImageResponseMessage Inspire.Events.Proxy.ImageReference.ImageServiceContract.DeleteImage(Inspire.Events.Proxy.ImageReference.DeleteImageRequestMessage request) {
            return base.Channel.DeleteImage(request);
        }
        
        public void DeleteImage(Inspire.Events.Proxy.ImageReference.EventImage EventImage) {
            Inspire.Events.Proxy.ImageReference.DeleteImageRequestMessage inValue = new Inspire.Events.Proxy.ImageReference.DeleteImageRequestMessage();
            inValue.EventImage = EventImage;
            Inspire.Events.Proxy.ImageReference.DeleteImageResponseMessage retVal = ((Inspire.Events.Proxy.ImageReference.ImageServiceContract)(this)).DeleteImage(inValue);
        }
    }
}
