//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.1
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Inspire.Events.Proxy.TemplateService {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.CollectionDataContractAttribute(Name="FeedTemplates", Namespace="http://schemas.inspiredisplays.com", ItemName="FeedTemplates")]
    [System.SerializableAttribute()]
    public class FeedTemplates : System.Collections.Generic.List<Inspire.Events.Proxy.TemplateService.FeedTemplate> {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="FeedTemplate", Namespace="http://schemas.inspiredisplays.com")]
    [System.SerializableAttribute()]
    public partial class FeedTemplate : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string GUIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> RowsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private byte[] ThumbNailField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> FieldsField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string GUID {
            get {
                return this.GUIDField;
            }
            set {
                if ((object.ReferenceEquals(this.GUIDField, value) != true)) {
                    this.GUIDField = value;
                    this.RaisePropertyChanged("GUID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> Rows {
            get {
                return this.RowsField;
            }
            set {
                if ((this.RowsField.Equals(value) != true)) {
                    this.RowsField = value;
                    this.RaisePropertyChanged("Rows");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public byte[] ThumbNail {
            get {
                return this.ThumbNailField;
            }
            set {
                if ((object.ReferenceEquals(this.ThumbNailField, value) != true)) {
                    this.ThumbNailField = value;
                    this.RaisePropertyChanged("ThumbNail");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=4)]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=5)]
        public string Type {
            get {
                return this.TypeField;
            }
            set {
                if ((object.ReferenceEquals(this.TypeField, value) != true)) {
                    this.TypeField = value;
                    this.RaisePropertyChanged("Type");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=6)]
        public System.Nullable<int> Fields {
            get {
                return this.FieldsField;
            }
            set {
                if ((this.FieldsField.Equals(value) != true)) {
                    this.FieldsField = value;
                    this.RaisePropertyChanged("Fields");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GeneralFaultContract", Namespace="http://schemas.inspiredisplays.com")]
    [System.SerializableAttribute()]
    public partial class GeneralFaultContract : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ErrorCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ErrorDescField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ErrorCode {
            get {
                return this.ErrorCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.ErrorCodeField, value) != true)) {
                    this.ErrorCodeField = value;
                    this.RaisePropertyChanged("ErrorCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ErrorDesc {
            get {
                return this.ErrorDescField;
            }
            set {
                if ((object.ReferenceEquals(this.ErrorDescField, value) != true)) {
                    this.ErrorDescField = value;
                    this.RaisePropertyChanged("ErrorDesc");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(Namespace="http://schemas.inspiredisplays.com", ConfigurationName="TemplateService.TemplateServiceContract")]
    public interface TemplateServiceContract {
        
        // CODEGEN: Generating message contract since the operation GetTemplates is neither RPC nor document wrapped.
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.inspiredisplays.com/TemplateServiceContract/GetTemplates", ReplyAction="http://schemas.inspiredisplays.com/TemplateServiceContract/GetTemplatesResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Inspire.Events.Proxy.TemplateService.GeneralFaultContract), Action="http://schemas.inspiredisplays.com/TemplateServiceContract/GetTemplatesGeneralFau" +
            "ltContractFault", Name="GeneralFaultContract")]
        Inspire.Events.Proxy.TemplateService.GetTemplatesResourceMessage GetTemplates(Inspire.Events.Proxy.TemplateService.GetTemplatesRequestMessage request);
        
        // CODEGEN: Generating message contract since the operation GetSingleTemplate is neither RPC nor document wrapped.
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.inspiredisplays.com/TemplateServiceContract/GetSingleTemplate", ReplyAction="http://schemas.inspiredisplays.com/TemplateServiceContract/GetSingleTemplateRespo" +
            "nse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Inspire.Events.Proxy.TemplateService.GeneralFaultContract), Action="http://schemas.inspiredisplays.com/TemplateServiceContract/GetSingleTemplateGener" +
            "alFaultContractFault", Name="GeneralFaultContract")]
        Inspire.Events.Proxy.TemplateService.GetSingleTemplateResponseMessage GetSingleTemplate(Inspire.Events.Proxy.TemplateService.GetSingleTemplateRequestMessage request);
        
        // CODEGEN: Generating message contract since the operation AddTemplate is neither RPC nor document wrapped.
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.inspiredisplays.com/TemplateServiceContract/AddTemplate", ReplyAction="http://schemas.inspiredisplays.com/TemplateServiceContract/AddTemplateResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Inspire.Events.Proxy.TemplateService.GeneralFaultContract), Action="http://schemas.inspiredisplays.com/TemplateServiceContract/AddTemplateGeneralFaul" +
            "tContractFault", Name="GeneralFaultContract")]
        Inspire.Events.Proxy.TemplateService.AddTemplateResponseMessage AddTemplate(Inspire.Events.Proxy.TemplateService.AddTemplateRequestMessage request);
        
        // CODEGEN: Generating message contract since the operation DeleteTemplate is neither RPC nor document wrapped.
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.inspiredisplays.com/TemplateServiceContract/DeleteTemplate", ReplyAction="http://schemas.inspiredisplays.com/TemplateServiceContract/DeleteTemplateResponse" +
            "")]
        [System.ServiceModel.FaultContractAttribute(typeof(Inspire.Events.Proxy.TemplateService.GeneralFaultContract), Action="http://schemas.inspiredisplays.com/TemplateServiceContract/DeleteTemplateGeneralF" +
            "aultContractFault", Name="GeneralFaultContract")]
        Inspire.Events.Proxy.TemplateService.DeleteTemplateResponseMessage DeleteTemplate(Inspire.Events.Proxy.TemplateService.DeleteTemplateRequestMessage request);
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class GetTemplatesRequestMessage {
        
        public GetTemplatesRequestMessage() {
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class GetTemplatesResourceMessage {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://schemas.inspiredisplays.com", Order=0)]
        public Inspire.Events.Proxy.TemplateService.FeedTemplates FeedTemplates;
        
        public GetTemplatesResourceMessage() {
        }
        
        public GetTemplatesResourceMessage(Inspire.Events.Proxy.TemplateService.FeedTemplates FeedTemplates) {
            this.FeedTemplates = FeedTemplates;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class GetSingleTemplateRequestMessage {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://schemas.inspiredisplays.com", Order=0)]
        public string templateID;
        
        public GetSingleTemplateRequestMessage() {
        }
        
        public GetSingleTemplateRequestMessage(string templateID) {
            this.templateID = templateID;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class GetSingleTemplateResponseMessage {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://schemas.inspiredisplays.com")]
        public Inspire.Events.Proxy.TemplateService.FeedTemplate FeedTemplate;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://schemas.inspiredisplays.com")]
        public int FileSize;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://schemas.inspiredisplays.com", Order=0)]
        public System.IO.Stream TemplateStream;
        
        public GetSingleTemplateResponseMessage() {
        }
        
        public GetSingleTemplateResponseMessage(Inspire.Events.Proxy.TemplateService.FeedTemplate FeedTemplate, int FileSize, System.IO.Stream TemplateStream) {
            this.FeedTemplate = FeedTemplate;
            this.FileSize = FileSize;
            this.TemplateStream = TemplateStream;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class AddTemplateRequestMessage {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://schemas.inspiredisplays.com")]
        public Inspire.Events.Proxy.TemplateService.FeedTemplate FeedTemplate;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://schemas.inspiredisplays.com")]
        public int FileSize;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://schemas.inspiredisplays.com", Order=0)]
        public System.IO.Stream TemplateStream;
        
        public AddTemplateRequestMessage() {
        }
        
        public AddTemplateRequestMessage(Inspire.Events.Proxy.TemplateService.FeedTemplate FeedTemplate, int FileSize, System.IO.Stream TemplateStream) {
            this.FeedTemplate = FeedTemplate;
            this.FileSize = FileSize;
            this.TemplateStream = TemplateStream;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class AddTemplateResponseMessage {
        
        public AddTemplateResponseMessage() {
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class DeleteTemplateRequestMessage {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://schemas.inspiredisplays.com", Order=0)]
        public string templateID;
        
        public DeleteTemplateRequestMessage() {
        }
        
        public DeleteTemplateRequestMessage(string templateID) {
            this.templateID = templateID;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class DeleteTemplateResponseMessage {
        
        public DeleteTemplateResponseMessage() {
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface TemplateServiceContractChannel : Inspire.Events.Proxy.TemplateService.TemplateServiceContract, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class TemplateServiceContractClient : System.ServiceModel.ClientBase<Inspire.Events.Proxy.TemplateService.TemplateServiceContract>, Inspire.Events.Proxy.TemplateService.TemplateServiceContract {
        
        public TemplateServiceContractClient() {
        }
        
        public TemplateServiceContractClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public TemplateServiceContractClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public TemplateServiceContractClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public TemplateServiceContractClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Inspire.Events.Proxy.TemplateService.GetTemplatesResourceMessage Inspire.Events.Proxy.TemplateService.TemplateServiceContract.GetTemplates(Inspire.Events.Proxy.TemplateService.GetTemplatesRequestMessage request) {
            return base.Channel.GetTemplates(request);
        }
        
        public Inspire.Events.Proxy.TemplateService.FeedTemplates GetTemplates() {
            Inspire.Events.Proxy.TemplateService.GetTemplatesRequestMessage inValue = new Inspire.Events.Proxy.TemplateService.GetTemplatesRequestMessage();
            Inspire.Events.Proxy.TemplateService.GetTemplatesResourceMessage retVal = ((Inspire.Events.Proxy.TemplateService.TemplateServiceContract)(this)).GetTemplates(inValue);
            return retVal.FeedTemplates;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Inspire.Events.Proxy.TemplateService.GetSingleTemplateResponseMessage Inspire.Events.Proxy.TemplateService.TemplateServiceContract.GetSingleTemplate(Inspire.Events.Proxy.TemplateService.GetSingleTemplateRequestMessage request) {
            return base.Channel.GetSingleTemplate(request);
        }
        
        public Inspire.Events.Proxy.TemplateService.FeedTemplate GetSingleTemplate(string templateID, out int FileSize, out System.IO.Stream TemplateStream) {
            Inspire.Events.Proxy.TemplateService.GetSingleTemplateRequestMessage inValue = new Inspire.Events.Proxy.TemplateService.GetSingleTemplateRequestMessage();
            inValue.templateID = templateID;
            Inspire.Events.Proxy.TemplateService.GetSingleTemplateResponseMessage retVal = ((Inspire.Events.Proxy.TemplateService.TemplateServiceContract)(this)).GetSingleTemplate(inValue);
            FileSize = retVal.FileSize;
            TemplateStream = retVal.TemplateStream;
            return retVal.FeedTemplate;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Inspire.Events.Proxy.TemplateService.AddTemplateResponseMessage Inspire.Events.Proxy.TemplateService.TemplateServiceContract.AddTemplate(Inspire.Events.Proxy.TemplateService.AddTemplateRequestMessage request) {
            return base.Channel.AddTemplate(request);
        }
        
        public void AddTemplate(Inspire.Events.Proxy.TemplateService.FeedTemplate FeedTemplate, int FileSize, System.IO.Stream TemplateStream) {
            Inspire.Events.Proxy.TemplateService.AddTemplateRequestMessage inValue = new Inspire.Events.Proxy.TemplateService.AddTemplateRequestMessage();
            inValue.FeedTemplate = FeedTemplate;
            inValue.FileSize = FileSize;
            inValue.TemplateStream = TemplateStream;
            Inspire.Events.Proxy.TemplateService.AddTemplateResponseMessage retVal = ((Inspire.Events.Proxy.TemplateService.TemplateServiceContract)(this)).AddTemplate(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Inspire.Events.Proxy.TemplateService.DeleteTemplateResponseMessage Inspire.Events.Proxy.TemplateService.TemplateServiceContract.DeleteTemplate(Inspire.Events.Proxy.TemplateService.DeleteTemplateRequestMessage request) {
            return base.Channel.DeleteTemplate(request);
        }
        
        public void DeleteTemplate(string templateID) {
            Inspire.Events.Proxy.TemplateService.DeleteTemplateRequestMessage inValue = new Inspire.Events.Proxy.TemplateService.DeleteTemplateRequestMessage();
            inValue.templateID = templateID;
            Inspire.Events.Proxy.TemplateService.DeleteTemplateResponseMessage retVal = ((Inspire.Events.Proxy.TemplateService.TemplateServiceContract)(this)).DeleteTemplate(inValue);
        }
    }
}
