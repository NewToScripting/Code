//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.1
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Inspire.Events.Proxy.DirectionReference {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.CollectionDataContractAttribute(Name="DirectionalImages", Namespace="http://schemas.inspiredisplays.com", ItemName="DirectionalImages")]
    [System.SerializableAttribute()]
    public class DirectionalImages : System.Collections.Generic.List<Inspire.Events.Proxy.DirectionReference.DirectionalImage> {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DirectionalImage", Namespace="http://schemas.inspiredisplays.com")]
    [System.SerializableAttribute()]
    public partial class DirectionalImage : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string GUIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string WebPathField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FileExtensionField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string GUID {
            get {
                return this.GUIDField;
            }
            set {
                if ((object.ReferenceEquals(this.GUIDField, value) != true)) {
                    this.GUIDField = value;
                    this.RaisePropertyChanged("GUID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=1)]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=2)]
        public string WebPath {
            get {
                return this.WebPathField;
            }
            set {
                if ((object.ReferenceEquals(this.WebPathField, value) != true)) {
                    this.WebPathField = value;
                    this.RaisePropertyChanged("WebPath");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=3)]
        public string FileExtension {
            get {
                return this.FileExtensionField;
            }
            set {
                if ((object.ReferenceEquals(this.FileExtensionField, value) != true)) {
                    this.FileExtensionField = value;
                    this.RaisePropertyChanged("FileExtension");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.CollectionDataContractAttribute(Name="Directions", Namespace="http://schemas.inspiredisplays.com", ItemName="Directions")]
    [System.SerializableAttribute()]
    public class Directions : System.Collections.Generic.List<Inspire.Events.Proxy.DirectionReference.Direction> {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Direction", Namespace="http://schemas.inspiredisplays.com")]
    [System.SerializableAttribute()]
    public partial class Direction : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string GUIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DisplayIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RoomIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RoomNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DirectionImageWebPathField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DirectionImageIDField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string GUID {
            get {
                return this.GUIDField;
            }
            set {
                if ((object.ReferenceEquals(this.GUIDField, value) != true)) {
                    this.GUIDField = value;
                    this.RaisePropertyChanged("GUID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=1)]
        public string DisplayID {
            get {
                return this.DisplayIDField;
            }
            set {
                if ((object.ReferenceEquals(this.DisplayIDField, value) != true)) {
                    this.DisplayIDField = value;
                    this.RaisePropertyChanged("DisplayID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=2)]
        public string RoomID {
            get {
                return this.RoomIDField;
            }
            set {
                if ((object.ReferenceEquals(this.RoomIDField, value) != true)) {
                    this.RoomIDField = value;
                    this.RaisePropertyChanged("RoomID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=3)]
        public string RoomName {
            get {
                return this.RoomNameField;
            }
            set {
                if ((object.ReferenceEquals(this.RoomNameField, value) != true)) {
                    this.RoomNameField = value;
                    this.RaisePropertyChanged("RoomName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=4)]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=5)]
        public string DirectionImageWebPath {
            get {
                return this.DirectionImageWebPathField;
            }
            set {
                if ((object.ReferenceEquals(this.DirectionImageWebPathField, value) != true)) {
                    this.DirectionImageWebPathField = value;
                    this.RaisePropertyChanged("DirectionImageWebPath");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=6)]
        public string DirectionImageID {
            get {
                return this.DirectionImageIDField;
            }
            set {
                if ((object.ReferenceEquals(this.DirectionImageIDField, value) != true)) {
                    this.DirectionImageIDField = value;
                    this.RaisePropertyChanged("DirectionImageID");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GeneralFaultContract", Namespace="http://schemas.inspiredisplays.com")]
    [System.SerializableAttribute()]
    public partial class GeneralFaultContract : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ErrorCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ErrorDescField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ErrorCode {
            get {
                return this.ErrorCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.ErrorCodeField, value) != true)) {
                    this.ErrorCodeField = value;
                    this.RaisePropertyChanged("ErrorCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ErrorDesc {
            get {
                return this.ErrorDescField;
            }
            set {
                if ((object.ReferenceEquals(this.ErrorDescField, value) != true)) {
                    this.ErrorDescField = value;
                    this.RaisePropertyChanged("ErrorDesc");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(Namespace="http://schemas.inspiredisplays.com", ConfigurationName="DirectionReference.DirectionServiceContract")]
    public interface DirectionServiceContract {
        
        // CODEGEN: Generating message contract since the operation GetAllImages is neither RPC nor document wrapped.
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.inspiredisplays.com/DirectionServiceContract/GetAllImages", ReplyAction="http://schemas.inspiredisplays.com/DirectionServiceContract/GetAllImagesResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Inspire.Events.Proxy.DirectionReference.GeneralFaultContract), Action="http://schemas.inspiredisplays.com/DirectionServiceContract/GetAllImagesGeneralFa" +
            "ultContractFault", Name="GeneralFaultContract")]
        Inspire.Events.Proxy.DirectionReference.GetAllImagesResponseMessage GetAllImages(Inspire.Events.Proxy.DirectionReference.GetAllImagesRequestMessage request);
        
        // CODEGEN: Generating message contract since the operation AddImage is neither RPC nor document wrapped.
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.inspiredisplays.com/DirectionServiceContract/AddImage", ReplyAction="http://schemas.inspiredisplays.com/DirectionServiceContract/AddImageResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Inspire.Events.Proxy.DirectionReference.GeneralFaultContract), Action="http://schemas.inspiredisplays.com/DirectionServiceContract/AddImageGeneralFaultC" +
            "ontractFault", Name="GeneralFaultContract")]
        Inspire.Events.Proxy.DirectionReference.AddImageResponseMessage AddImage(Inspire.Events.Proxy.DirectionReference.AddImageRequestMessage request);
        
        // CODEGEN: Generating message contract since the operation DeleteImage is neither RPC nor document wrapped.
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.inspiredisplays.com/DirectionServiceContract/DeleteImage", ReplyAction="http://schemas.inspiredisplays.com/DirectionServiceContract/DeleteImageResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Inspire.Events.Proxy.DirectionReference.GeneralFaultContract), Action="http://schemas.inspiredisplays.com/DirectionServiceContract/DeleteImageGeneralFau" +
            "ltContractFault", Name="GeneralFaultContract")]
        Inspire.Events.Proxy.DirectionReference.DeleteImageResponseMessage DeleteImage(Inspire.Events.Proxy.DirectionReference.DeleteImageRequestMessage request);
        
        // CODEGEN: Generating message contract since the operation GetDirections is neither RPC nor document wrapped.
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.inspiredisplays.com/DirectionServiceContract/GetDirections", ReplyAction="http://schemas.inspiredisplays.com/DirectionServiceContract/GetDirectionsResponse" +
            "")]
        [System.ServiceModel.FaultContractAttribute(typeof(Inspire.Events.Proxy.DirectionReference.GeneralFaultContract), Action="http://schemas.inspiredisplays.com/DirectionServiceContract/GetDirectionsGeneralF" +
            "aultContractFault", Name="GeneralFaultContract")]
        Inspire.Events.Proxy.DirectionReference.GetDirectionsResponseMessage GetDirections(Inspire.Events.Proxy.DirectionReference.GetDirectionsRequestMessage request);
        
        // CODEGEN: Generating message contract since the operation AddDirection is neither RPC nor document wrapped.
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.inspiredisplays.com/DirectionServiceContract/AddDirection", ReplyAction="http://schemas.inspiredisplays.com/DirectionServiceContract/AddDirectionResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Inspire.Events.Proxy.DirectionReference.GeneralFaultContract), Action="http://schemas.inspiredisplays.com/DirectionServiceContract/AddDirectionGeneralFa" +
            "ultContractFault", Name="GeneralFaultContract")]
        Inspire.Events.Proxy.DirectionReference.AddDirectionResponseMessage AddDirection(Inspire.Events.Proxy.DirectionReference.AddDirectionRequestMessage request);
        
        // CODEGEN: Generating message contract since the operation DeleteDirection is neither RPC nor document wrapped.
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.inspiredisplays.com/DirectionServiceContract/DeleteDirection", ReplyAction="http://schemas.inspiredisplays.com/DirectionServiceContract/DeleteDirectionRespon" +
            "se")]
        [System.ServiceModel.FaultContractAttribute(typeof(Inspire.Events.Proxy.DirectionReference.GeneralFaultContract), Action="http://schemas.inspiredisplays.com/DirectionServiceContract/DeleteDirectionGenera" +
            "lFaultContractFault", Name="GeneralFaultContract")]
        Inspire.Events.Proxy.DirectionReference.DeleteDirectionResponseMessage DeleteDirection(Inspire.Events.Proxy.DirectionReference.DeleteDirectionRequestMessage request);
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class GetAllImagesRequestMessage {
        
        public GetAllImagesRequestMessage() {
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class GetAllImagesResponseMessage {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://schemas.inspiredisplays.com", Order=0)]
        public Inspire.Events.Proxy.DirectionReference.DirectionalImages DirectionalImages;
        
        public GetAllImagesResponseMessage() {
        }
        
        public GetAllImagesResponseMessage(Inspire.Events.Proxy.DirectionReference.DirectionalImages DirectionalImages) {
            this.DirectionalImages = DirectionalImages;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class AddImageRequestMessage {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://schemas.inspiredisplays.com", Order=0)]
        public Inspire.Events.Proxy.DirectionReference.DirectionalImage DirectionImage;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://schemas.inspiredisplays.com", Order=1)]
        public byte[] ImageFile;
        
        public AddImageRequestMessage() {
        }
        
        public AddImageRequestMessage(Inspire.Events.Proxy.DirectionReference.DirectionalImage DirectionImage, byte[] ImageFile) {
            this.DirectionImage = DirectionImage;
            this.ImageFile = ImageFile;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class AddImageResponseMessage {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://schemas.inspiredisplays.com", Order=0)]
        public string WebPath;
        
        public AddImageResponseMessage() {
        }
        
        public AddImageResponseMessage(string WebPath) {
            this.WebPath = WebPath;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class DeleteImageRequestMessage {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://schemas.inspiredisplays.com", Order=0)]
        public Inspire.Events.Proxy.DirectionReference.DirectionalImage DirectionalImage;
        
        public DeleteImageRequestMessage() {
        }
        
        public DeleteImageRequestMessage(Inspire.Events.Proxy.DirectionReference.DirectionalImage DirectionalImage) {
            this.DirectionalImage = DirectionalImage;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class DeleteImageResponseMessage {
        
        public DeleteImageResponseMessage() {
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class GetDirectionsRequestMessage {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://schemas.inspiredisplays.com", Order=0)]
        public string DisplayID;
        
        public GetDirectionsRequestMessage() {
        }
        
        public GetDirectionsRequestMessage(string DisplayID) {
            this.DisplayID = DisplayID;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class GetDirectionsResponseMessage {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://schemas.inspiredisplays.com", Order=0)]
        public Inspire.Events.Proxy.DirectionReference.Directions Directions;
        
        public GetDirectionsResponseMessage() {
        }
        
        public GetDirectionsResponseMessage(Inspire.Events.Proxy.DirectionReference.Directions Directions) {
            this.Directions = Directions;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class AddDirectionRequestMessage {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://schemas.inspiredisplays.com", Order=0)]
        public Inspire.Events.Proxy.DirectionReference.Directions Directions;
        
        public AddDirectionRequestMessage() {
        }
        
        public AddDirectionRequestMessage(Inspire.Events.Proxy.DirectionReference.Directions Directions) {
            this.Directions = Directions;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class AddDirectionResponseMessage {
        
        public AddDirectionResponseMessage() {
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class DeleteDirectionRequestMessage {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://schemas.inspiredisplays.com", Order=0)]
        public string DirectionID;
        
        public DeleteDirectionRequestMessage() {
        }
        
        public DeleteDirectionRequestMessage(string DirectionID) {
            this.DirectionID = DirectionID;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class DeleteDirectionResponseMessage {
        
        public DeleteDirectionResponseMessage() {
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface DirectionServiceContractChannel : Inspire.Events.Proxy.DirectionReference.DirectionServiceContract, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class DirectionServiceContractClient : System.ServiceModel.ClientBase<Inspire.Events.Proxy.DirectionReference.DirectionServiceContract>, Inspire.Events.Proxy.DirectionReference.DirectionServiceContract {
        
        public DirectionServiceContractClient() {
        }
        
        public DirectionServiceContractClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public DirectionServiceContractClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public DirectionServiceContractClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public DirectionServiceContractClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Inspire.Events.Proxy.DirectionReference.GetAllImagesResponseMessage Inspire.Events.Proxy.DirectionReference.DirectionServiceContract.GetAllImages(Inspire.Events.Proxy.DirectionReference.GetAllImagesRequestMessage request) {
            return base.Channel.GetAllImages(request);
        }
        
        public Inspire.Events.Proxy.DirectionReference.DirectionalImages GetAllImages() {
            Inspire.Events.Proxy.DirectionReference.GetAllImagesRequestMessage inValue = new Inspire.Events.Proxy.DirectionReference.GetAllImagesRequestMessage();
            Inspire.Events.Proxy.DirectionReference.GetAllImagesResponseMessage retVal = ((Inspire.Events.Proxy.DirectionReference.DirectionServiceContract)(this)).GetAllImages(inValue);
            return retVal.DirectionalImages;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Inspire.Events.Proxy.DirectionReference.AddImageResponseMessage Inspire.Events.Proxy.DirectionReference.DirectionServiceContract.AddImage(Inspire.Events.Proxy.DirectionReference.AddImageRequestMessage request) {
            return base.Channel.AddImage(request);
        }
        
        public string AddImage(Inspire.Events.Proxy.DirectionReference.DirectionalImage DirectionImage, byte[] ImageFile) {
            Inspire.Events.Proxy.DirectionReference.AddImageRequestMessage inValue = new Inspire.Events.Proxy.DirectionReference.AddImageRequestMessage();
            inValue.DirectionImage = DirectionImage;
            inValue.ImageFile = ImageFile;
            Inspire.Events.Proxy.DirectionReference.AddImageResponseMessage retVal = ((Inspire.Events.Proxy.DirectionReference.DirectionServiceContract)(this)).AddImage(inValue);
            return retVal.WebPath;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Inspire.Events.Proxy.DirectionReference.DeleteImageResponseMessage Inspire.Events.Proxy.DirectionReference.DirectionServiceContract.DeleteImage(Inspire.Events.Proxy.DirectionReference.DeleteImageRequestMessage request) {
            return base.Channel.DeleteImage(request);
        }
        
        public void DeleteImage(Inspire.Events.Proxy.DirectionReference.DirectionalImage DirectionalImage) {
            Inspire.Events.Proxy.DirectionReference.DeleteImageRequestMessage inValue = new Inspire.Events.Proxy.DirectionReference.DeleteImageRequestMessage();
            inValue.DirectionalImage = DirectionalImage;
            Inspire.Events.Proxy.DirectionReference.DeleteImageResponseMessage retVal = ((Inspire.Events.Proxy.DirectionReference.DirectionServiceContract)(this)).DeleteImage(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Inspire.Events.Proxy.DirectionReference.GetDirectionsResponseMessage Inspire.Events.Proxy.DirectionReference.DirectionServiceContract.GetDirections(Inspire.Events.Proxy.DirectionReference.GetDirectionsRequestMessage request) {
            return base.Channel.GetDirections(request);
        }
        
        public Inspire.Events.Proxy.DirectionReference.Directions GetDirections(string DisplayID) {
            Inspire.Events.Proxy.DirectionReference.GetDirectionsRequestMessage inValue = new Inspire.Events.Proxy.DirectionReference.GetDirectionsRequestMessage();
            inValue.DisplayID = DisplayID;
            Inspire.Events.Proxy.DirectionReference.GetDirectionsResponseMessage retVal = ((Inspire.Events.Proxy.DirectionReference.DirectionServiceContract)(this)).GetDirections(inValue);
            return retVal.Directions;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Inspire.Events.Proxy.DirectionReference.AddDirectionResponseMessage Inspire.Events.Proxy.DirectionReference.DirectionServiceContract.AddDirection(Inspire.Events.Proxy.DirectionReference.AddDirectionRequestMessage request) {
            return base.Channel.AddDirection(request);
        }
        
        public void AddDirection(Inspire.Events.Proxy.DirectionReference.Directions Directions) {
            Inspire.Events.Proxy.DirectionReference.AddDirectionRequestMessage inValue = new Inspire.Events.Proxy.DirectionReference.AddDirectionRequestMessage();
            inValue.Directions = Directions;
            Inspire.Events.Proxy.DirectionReference.AddDirectionResponseMessage retVal = ((Inspire.Events.Proxy.DirectionReference.DirectionServiceContract)(this)).AddDirection(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Inspire.Events.Proxy.DirectionReference.DeleteDirectionResponseMessage Inspire.Events.Proxy.DirectionReference.DirectionServiceContract.DeleteDirection(Inspire.Events.Proxy.DirectionReference.DeleteDirectionRequestMessage request) {
            return base.Channel.DeleteDirection(request);
        }
        
        public void DeleteDirection(string DirectionID) {
            Inspire.Events.Proxy.DirectionReference.DeleteDirectionRequestMessage inValue = new Inspire.Events.Proxy.DirectionReference.DeleteDirectionRequestMessage();
            inValue.DirectionID = DirectionID;
            Inspire.Events.Proxy.DirectionReference.DeleteDirectionResponseMessage retVal = ((Inspire.Events.Proxy.DirectionReference.DirectionServiceContract)(this)).DeleteDirection(inValue);
        }
    }
}
