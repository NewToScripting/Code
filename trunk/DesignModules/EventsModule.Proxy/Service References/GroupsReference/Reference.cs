//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.1
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Inspire.Events.Proxy.GroupsReference {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.CollectionDataContractAttribute(Name="Groups", Namespace="http://schemas.inspiredisplays.com", ItemName="Groups")]
    [System.SerializableAttribute()]
    public class Groups : System.Collections.Generic.List<Inspire.Events.Proxy.GroupsReference.Group> {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Group", Namespace="http://schemas.inspiredisplays.com")]
    [System.SerializableAttribute()]
    public partial class Group : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string GUIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Inspire.Events.Proxy.GroupsReference.GroupAliases GroupAliasesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string GroupImageWebPathField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ImageIDField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string GUID {
            get {
                return this.GUIDField;
            }
            set {
                if ((object.ReferenceEquals(this.GUIDField, value) != true)) {
                    this.GUIDField = value;
                    this.RaisePropertyChanged("GUID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=2)]
        public Inspire.Events.Proxy.GroupsReference.GroupAliases GroupAliases {
            get {
                return this.GroupAliasesField;
            }
            set {
                if ((object.ReferenceEquals(this.GroupAliasesField, value) != true)) {
                    this.GroupAliasesField = value;
                    this.RaisePropertyChanged("GroupAliases");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=3)]
        public string GroupImageWebPath {
            get {
                return this.GroupImageWebPathField;
            }
            set {
                if ((object.ReferenceEquals(this.GroupImageWebPathField, value) != true)) {
                    this.GroupImageWebPathField = value;
                    this.RaisePropertyChanged("GroupImageWebPath");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=4)]
        public string ImageID {
            get {
                return this.ImageIDField;
            }
            set {
                if ((object.ReferenceEquals(this.ImageIDField, value) != true)) {
                    this.ImageIDField = value;
                    this.RaisePropertyChanged("ImageID");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.CollectionDataContractAttribute(Name="GroupAliases", Namespace="http://schemas.inspiredisplays.com", ItemName="GroupAliases")]
    [System.SerializableAttribute()]
    public class GroupAliases : System.Collections.Generic.List<Inspire.Events.Proxy.GroupsReference.GroupAlias> {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GroupAlias", Namespace="http://schemas.inspiredisplays.com")]
    [System.SerializableAttribute()]
    public partial class GroupAlias : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string GUIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ValueField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string GroupIDField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string GUID {
            get {
                return this.GUIDField;
            }
            set {
                if ((object.ReferenceEquals(this.GUIDField, value) != true)) {
                    this.GUIDField = value;
                    this.RaisePropertyChanged("GUID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Value {
            get {
                return this.ValueField;
            }
            set {
                if ((object.ReferenceEquals(this.ValueField, value) != true)) {
                    this.ValueField = value;
                    this.RaisePropertyChanged("Value");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=2)]
        public string GroupID {
            get {
                return this.GroupIDField;
            }
            set {
                if ((object.ReferenceEquals(this.GroupIDField, value) != true)) {
                    this.GroupIDField = value;
                    this.RaisePropertyChanged("GroupID");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GeneralFaultContract", Namespace="http://schemas.inspiredisplays.com")]
    [System.SerializableAttribute()]
    public partial class GeneralFaultContract : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ErrorCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ErrorDescField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ErrorCode {
            get {
                return this.ErrorCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.ErrorCodeField, value) != true)) {
                    this.ErrorCodeField = value;
                    this.RaisePropertyChanged("ErrorCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ErrorDesc {
            get {
                return this.ErrorDescField;
            }
            set {
                if ((object.ReferenceEquals(this.ErrorDescField, value) != true)) {
                    this.ErrorDescField = value;
                    this.RaisePropertyChanged("ErrorDesc");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(Namespace="http://schemas.inspiredisplays.com", ConfigurationName="GroupsReference.GroupsServiceContract")]
    public interface GroupsServiceContract {
        
        // CODEGEN: Generating message contract since the operation GetGroups is neither RPC nor document wrapped.
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.inspiredisplays.com/GroupsServiceContract/GetGroups", ReplyAction="http://schemas.inspiredisplays.com/GroupsServiceContract/GetGroupsResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Inspire.Events.Proxy.GroupsReference.GeneralFaultContract), Action="http://schemas.inspiredisplays.com/GroupsServiceContract/GetGroupsGeneralFaultCon" +
            "tractFault", Name="GeneralFaultContract")]
        Inspire.Events.Proxy.GroupsReference.GetGroupsResponseMessage GetGroups(Inspire.Events.Proxy.GroupsReference.GetGroupsRequestMessage request);
        
        // CODEGEN: Generating message contract since the operation AddGroup is neither RPC nor document wrapped.
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.inspiredisplays.com/GroupsServiceContract/AddGroup", ReplyAction="http://schemas.inspiredisplays.com/GroupsServiceContract/AddGroupResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Inspire.Events.Proxy.GroupsReference.GeneralFaultContract), Action="http://schemas.inspiredisplays.com/GroupsServiceContract/AddGroupGeneralFaultCont" +
            "ractFault", Name="GeneralFaultContract")]
        Inspire.Events.Proxy.GroupsReference.AddGroupResponseMessage AddGroup(Inspire.Events.Proxy.GroupsReference.AddGroupRequestMessage request);
        
        // CODEGEN: Generating message contract since the operation UpdateGroup is neither RPC nor document wrapped.
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.inspiredisplays.com/GroupsServiceContract/UpdateGroup", ReplyAction="http://schemas.inspiredisplays.com/GroupsServiceContract/UpdateGroupResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Inspire.Events.Proxy.GroupsReference.GeneralFaultContract), Action="http://schemas.inspiredisplays.com/GroupsServiceContract/UpdateGroupGeneralFaultC" +
            "ontractFault", Name="GeneralFaultContract")]
        Inspire.Events.Proxy.GroupsReference.UpdateGroupResponseMessage UpdateGroup(Inspire.Events.Proxy.GroupsReference.UpdateGroupRequestMessage request);
        
        // CODEGEN: Generating message contract since the operation DeleteGroup is neither RPC nor document wrapped.
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.inspiredisplays.com/GroupsServiceContract/DeleteGroup", ReplyAction="http://schemas.inspiredisplays.com/GroupsServiceContract/DeleteGroupResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Inspire.Events.Proxy.GroupsReference.GeneralFaultContract), Action="http://schemas.inspiredisplays.com/GroupsServiceContract/DeleteGroupGeneralFaultC" +
            "ontractFault", Name="GeneralFaultContract")]
        Inspire.Events.Proxy.GroupsReference.DeleteGroupResponseMessage DeleteGroup(Inspire.Events.Proxy.GroupsReference.DeleteGroupRequestMessage request);
        
        // CODEGEN: Generating message contract since the operation GetAliases is neither RPC nor document wrapped.
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.inspiredisplays.com/GroupsServiceContract/GetAliases", ReplyAction="http://schemas.inspiredisplays.com/GroupsServiceContract/GetAliasesResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Inspire.Events.Proxy.GroupsReference.GeneralFaultContract), Action="http://schemas.inspiredisplays.com/GroupsServiceContract/GetAliasesGeneralFaultCo" +
            "ntractFault", Name="GeneralFaultContract")]
        Inspire.Events.Proxy.GroupsReference.GetAliasesResponseMessage GetAliases(Inspire.Events.Proxy.GroupsReference.GetAliasesRequestMessage request);
        
        // CODEGEN: Generating message contract since the operation AddAlias is neither RPC nor document wrapped.
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.inspiredisplays.com/GroupsServiceContract/AddAlias", ReplyAction="http://schemas.inspiredisplays.com/GroupsServiceContract/AddAliasResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Inspire.Events.Proxy.GroupsReference.GeneralFaultContract), Action="http://schemas.inspiredisplays.com/GroupsServiceContract/AddAliasGeneralFaultCont" +
            "ractFault", Name="GeneralFaultContract")]
        Inspire.Events.Proxy.GroupsReference.AddAliasResponseMessage AddAlias(Inspire.Events.Proxy.GroupsReference.AddAliasRequestMessage request);
        
        // CODEGEN: Generating message contract since the operation DeleteAlias is neither RPC nor document wrapped.
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.inspiredisplays.com/GroupsServiceContract/DeleteAlias", ReplyAction="http://schemas.inspiredisplays.com/GroupsServiceContract/DeleteAliasResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Inspire.Events.Proxy.GroupsReference.GeneralFaultContract), Action="http://schemas.inspiredisplays.com/GroupsServiceContract/DeleteAliasGeneralFaultC" +
            "ontractFault", Name="GeneralFaultContract")]
        Inspire.Events.Proxy.GroupsReference.DeleteAliasResponseMessage DeleteAlias(Inspire.Events.Proxy.GroupsReference.DeleteAliasRequestMessage request);
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class GetGroupsRequestMessage {
        
        public GetGroupsRequestMessage() {
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class GetGroupsResponseMessage {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://schemas.inspiredisplays.com", Order=0)]
        public Inspire.Events.Proxy.GroupsReference.Groups Groups;
        
        public GetGroupsResponseMessage() {
        }
        
        public GetGroupsResponseMessage(Inspire.Events.Proxy.GroupsReference.Groups Groups) {
            this.Groups = Groups;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="AddGroupRequestMessage", WrapperNamespace="http://schemas.inspiredisplays.com", IsWrapped=true)]
    public partial class AddGroupRequestMessage {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://schemas.inspiredisplays.com", Order=0)]
        public Inspire.Events.Proxy.GroupsReference.Group Group;
        
        public AddGroupRequestMessage() {
        }
        
        public AddGroupRequestMessage(Inspire.Events.Proxy.GroupsReference.Group Group) {
            this.Group = Group;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class AddGroupResponseMessage {
        
        public AddGroupResponseMessage() {
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="UpdateGroupRequestMessage", WrapperNamespace="http://schemas.inspiredisplays.com", IsWrapped=true)]
    public partial class UpdateGroupRequestMessage {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://schemas.inspiredisplays.com", Order=0)]
        public Inspire.Events.Proxy.GroupsReference.Group Group;
        
        public UpdateGroupRequestMessage() {
        }
        
        public UpdateGroupRequestMessage(Inspire.Events.Proxy.GroupsReference.Group Group) {
            this.Group = Group;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class UpdateGroupResponseMessage {
        
        public UpdateGroupResponseMessage() {
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class DeleteGroupRequestMessage {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://schemas.inspiredisplays.com", Order=0)]
        public string GUID;
        
        public DeleteGroupRequestMessage() {
        }
        
        public DeleteGroupRequestMessage(string GUID) {
            this.GUID = GUID;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class DeleteGroupResponseMessage {
        
        public DeleteGroupResponseMessage() {
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class GetAliasesRequestMessage {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://schemas.inspiredisplays.com", Order=0)]
        public string GroupID;
        
        public GetAliasesRequestMessage() {
        }
        
        public GetAliasesRequestMessage(string GroupID) {
            this.GroupID = GroupID;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class GetAliasesResponseMessage {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://schemas.inspiredisplays.com", Order=0)]
        public Inspire.Events.Proxy.GroupsReference.GroupAliases Aliases;
        
        public GetAliasesResponseMessage() {
        }
        
        public GetAliasesResponseMessage(Inspire.Events.Proxy.GroupsReference.GroupAliases Aliases) {
            this.Aliases = Aliases;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class AddAliasRequestMessage {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://schemas.inspiredisplays.com", Order=0)]
        public Inspire.Events.Proxy.GroupsReference.GroupAlias GroupAlias;
        
        public AddAliasRequestMessage() {
        }
        
        public AddAliasRequestMessage(Inspire.Events.Proxy.GroupsReference.GroupAlias GroupAlias) {
            this.GroupAlias = GroupAlias;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class AddAliasResponseMessage {
        
        public AddAliasResponseMessage() {
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class DeleteAliasRequestMessage {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://schemas.inspiredisplays.com", Order=0)]
        public string AliasID;
        
        public DeleteAliasRequestMessage() {
        }
        
        public DeleteAliasRequestMessage(string AliasID) {
            this.AliasID = AliasID;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class DeleteAliasResponseMessage {
        
        public DeleteAliasResponseMessage() {
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface GroupsServiceContractChannel : Inspire.Events.Proxy.GroupsReference.GroupsServiceContract, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GroupsServiceContractClient : System.ServiceModel.ClientBase<Inspire.Events.Proxy.GroupsReference.GroupsServiceContract>, Inspire.Events.Proxy.GroupsReference.GroupsServiceContract {
        
        public GroupsServiceContractClient() {
        }
        
        public GroupsServiceContractClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public GroupsServiceContractClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public GroupsServiceContractClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public GroupsServiceContractClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Inspire.Events.Proxy.GroupsReference.GetGroupsResponseMessage Inspire.Events.Proxy.GroupsReference.GroupsServiceContract.GetGroups(Inspire.Events.Proxy.GroupsReference.GetGroupsRequestMessage request) {
            return base.Channel.GetGroups(request);
        }
        
        public Inspire.Events.Proxy.GroupsReference.Groups GetGroups() {
            Inspire.Events.Proxy.GroupsReference.GetGroupsRequestMessage inValue = new Inspire.Events.Proxy.GroupsReference.GetGroupsRequestMessage();
            Inspire.Events.Proxy.GroupsReference.GetGroupsResponseMessage retVal = ((Inspire.Events.Proxy.GroupsReference.GroupsServiceContract)(this)).GetGroups(inValue);
            return retVal.Groups;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Inspire.Events.Proxy.GroupsReference.AddGroupResponseMessage Inspire.Events.Proxy.GroupsReference.GroupsServiceContract.AddGroup(Inspire.Events.Proxy.GroupsReference.AddGroupRequestMessage request) {
            return base.Channel.AddGroup(request);
        }
        
        public void AddGroup(Inspire.Events.Proxy.GroupsReference.Group Group) {
            Inspire.Events.Proxy.GroupsReference.AddGroupRequestMessage inValue = new Inspire.Events.Proxy.GroupsReference.AddGroupRequestMessage();
            inValue.Group = Group;
            Inspire.Events.Proxy.GroupsReference.AddGroupResponseMessage retVal = ((Inspire.Events.Proxy.GroupsReference.GroupsServiceContract)(this)).AddGroup(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Inspire.Events.Proxy.GroupsReference.UpdateGroupResponseMessage Inspire.Events.Proxy.GroupsReference.GroupsServiceContract.UpdateGroup(Inspire.Events.Proxy.GroupsReference.UpdateGroupRequestMessage request) {
            return base.Channel.UpdateGroup(request);
        }
        
        public void UpdateGroup(Inspire.Events.Proxy.GroupsReference.Group Group) {
            Inspire.Events.Proxy.GroupsReference.UpdateGroupRequestMessage inValue = new Inspire.Events.Proxy.GroupsReference.UpdateGroupRequestMessage();
            inValue.Group = Group;
            Inspire.Events.Proxy.GroupsReference.UpdateGroupResponseMessage retVal = ((Inspire.Events.Proxy.GroupsReference.GroupsServiceContract)(this)).UpdateGroup(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Inspire.Events.Proxy.GroupsReference.DeleteGroupResponseMessage Inspire.Events.Proxy.GroupsReference.GroupsServiceContract.DeleteGroup(Inspire.Events.Proxy.GroupsReference.DeleteGroupRequestMessage request) {
            return base.Channel.DeleteGroup(request);
        }
        
        public void DeleteGroup(string GUID) {
            Inspire.Events.Proxy.GroupsReference.DeleteGroupRequestMessage inValue = new Inspire.Events.Proxy.GroupsReference.DeleteGroupRequestMessage();
            inValue.GUID = GUID;
            Inspire.Events.Proxy.GroupsReference.DeleteGroupResponseMessage retVal = ((Inspire.Events.Proxy.GroupsReference.GroupsServiceContract)(this)).DeleteGroup(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Inspire.Events.Proxy.GroupsReference.GetAliasesResponseMessage Inspire.Events.Proxy.GroupsReference.GroupsServiceContract.GetAliases(Inspire.Events.Proxy.GroupsReference.GetAliasesRequestMessage request) {
            return base.Channel.GetAliases(request);
        }
        
        public Inspire.Events.Proxy.GroupsReference.GroupAliases GetAliases(string GroupID) {
            Inspire.Events.Proxy.GroupsReference.GetAliasesRequestMessage inValue = new Inspire.Events.Proxy.GroupsReference.GetAliasesRequestMessage();
            inValue.GroupID = GroupID;
            Inspire.Events.Proxy.GroupsReference.GetAliasesResponseMessage retVal = ((Inspire.Events.Proxy.GroupsReference.GroupsServiceContract)(this)).GetAliases(inValue);
            return retVal.Aliases;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Inspire.Events.Proxy.GroupsReference.AddAliasResponseMessage Inspire.Events.Proxy.GroupsReference.GroupsServiceContract.AddAlias(Inspire.Events.Proxy.GroupsReference.AddAliasRequestMessage request) {
            return base.Channel.AddAlias(request);
        }
        
        public void AddAlias(Inspire.Events.Proxy.GroupsReference.GroupAlias GroupAlias) {
            Inspire.Events.Proxy.GroupsReference.AddAliasRequestMessage inValue = new Inspire.Events.Proxy.GroupsReference.AddAliasRequestMessage();
            inValue.GroupAlias = GroupAlias;
            Inspire.Events.Proxy.GroupsReference.AddAliasResponseMessage retVal = ((Inspire.Events.Proxy.GroupsReference.GroupsServiceContract)(this)).AddAlias(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Inspire.Events.Proxy.GroupsReference.DeleteAliasResponseMessage Inspire.Events.Proxy.GroupsReference.GroupsServiceContract.DeleteAlias(Inspire.Events.Proxy.GroupsReference.DeleteAliasRequestMessage request) {
            return base.Channel.DeleteAlias(request);
        }
        
        public void DeleteAlias(string AliasID) {
            Inspire.Events.Proxy.GroupsReference.DeleteAliasRequestMessage inValue = new Inspire.Events.Proxy.GroupsReference.DeleteAliasRequestMessage();
            inValue.AliasID = AliasID;
            Inspire.Events.Proxy.GroupsReference.DeleteAliasResponseMessage retVal = ((Inspire.Events.Proxy.GroupsReference.GroupsServiceContract)(this)).DeleteAlias(inValue);
        }
    }
}
