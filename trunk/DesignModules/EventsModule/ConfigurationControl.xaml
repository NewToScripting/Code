<UserControl  x:Class="EventsModule.ConfigurationControl"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:Commands="clr-namespace:EventsModule.Commands"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" mc:Ignorable="d"
    xmlns:TreeViewModel="clr-namespace:Inspire.Common.TreeViewModel;assembly=Inspire.Common"
    xmlns:Controls="clr-namespace:Microsoft.Windows.Controls;assembly=WPFToolkit"
    xmlns:EventsModule="clr-namespace:EventsModule"
    xmlns:Inspire="clr-namespace:Inspire;assembly=Inspire"
    xmlns:Primitives="clr-namespace:Microsoft.Windows.Controls.Primitives;assembly=WPFToolkit">
    <UserControl.CommandBindings>
        <CommandBinding Command="{x:Static Commands:EventsModuleCommands.AddDisplayRoomCommand}" Executed="AddDisplayRoomExecuted" CanExecute="AddDisplayRoomCanExecute" />
        <CommandBinding Command="{x:Static Commands:EventsModuleCommands.RemoveDisplayRoomCommand}" Executed="RemoveDisplayRoomExecuted" CanExecute="RemoveDisplayRoomCanExecute" />
        <CommandBinding Command="{x:Static Commands:EventsModuleCommands.AddRoomCommand}" Executed="AddRoomExecuted" CanExecute="AddRoomCanExecute" />
        <CommandBinding Command="{x:Static Commands:EventsModuleCommands.RemoveRoomCommand}" Executed="RemoveRoomExecuted" CanExecute="RemoveRoomCanExecute" />
    </UserControl.CommandBindings>
    <UserControl.Resources>
        <DataTemplate x:Key="directionalTemplate">
            <Border BorderThickness="1,1,1,1" CornerRadius="5,5,5,5" Margin=" 3,3,3,3" Width="100" ToolTip="{Binding Path=Description}">
                <Border.Background>
                    <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                        <GradientStop Color="#99000000" Offset="1"/>
                        <GradientStop Color="#99202020" Offset="0.902"/>
                        <GradientStop Color="#99090909" Offset="0.973"/>
                        <GradientStop Color="#CCFFFFFF" Offset="0.196"/>
                        <GradientStop Color="#99AAAAAA" Offset="0.482"/>
                        <GradientStop Color="#99626262" Offset="0.522"/>
                    </LinearGradientBrush>
                </Border.Background>
                <Border.BorderBrush>
                    <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                        <GradientStop Color="#FFFFFFFF" Offset="0"/>
                        <GradientStop Color="#FFD9D9D9" Offset="0"/>
                        <GradientStop Color="#FF000000" Offset="0.598"/>
                        <GradientStop Color="#FF474747" Offset="0.357"/>
                        <GradientStop Color="#FF8C8C8C" Offset="0.071"/>
                    </LinearGradientBrush>
                </Border.BorderBrush>
                <Border.Effect>
                    <DropShadowEffect />
                </Border.Effect>
                <Grid>
                    <Button Height="100" Width="100" RenderTransformOrigin="0.5,0.5" IsHitTestVisible="False" />
                    <Image Source="{Binding Path=WebPath}" Margin="2,2,2,2" Height="85" IsHitTestVisible="False" >
                        <Image.Effect>
                            <DropShadowEffect />
                        </Image.Effect>
                    </Image>
                </Grid>
            </Border>
        </DataTemplate>

        <Style x:Key="DatagridColumnHeaderCustomTemplateStyle" 
         TargetType="{x:Type Primitives:DataGridColumnHeader}">
            <Setter Property="SnapsToDevicePixels" Value="True" />
            <Setter Property="MinWidth" Value="0" />
            <Setter Property="MinHeight" Value="28" />
            <Setter Property="Foreground" Value="White" />
            <Setter Property="Cursor" Value="Hand" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Primitives:DataGridColumnHeader}">
                        <Grid x:Name="RootElement" HorizontalAlignment="Stretch" Background="Black">
                            <Path Stretch="Fill" Stroke="#FF000000" Data="M0.5,4.5 C0.5,2.290861 2.290861,0.5 4.5,0.5 L93.5,0.5 C95.709139,0.5 97.5,2.290861 97.5,4.5 L97.416667,31.333333 C97.333333,31.50032 0.41666667,31.499598 0.5,31.416667 z" Visibility="Visible" Opacity="1" x:Name="path1">
                                <Path.Fill>
                                    <RadialGradientBrush GradientOrigin="0.5,0.60">
                                        <RadialGradientBrush.RelativeTransform>
                                            <TransformGroup>
                                                <ScaleTransform CenterX="0.5" CenterY="0.5" ScaleX="1.996" ScaleY="1.414"/>
                                                <SkewTransform AngleX="0" AngleY="0" CenterX="0.5" CenterY="0.5"/>
                                                <RotateTransform Angle="0" CenterX="0.5" CenterY="0.5"/>
                                                <TranslateTransform X="0" Y="0.502"/>
                                            </TransformGroup>
                                        </RadialGradientBrush.RelativeTransform>
                                        <GradientStop Color="#FF57C6EF" Offset="0.125"/>
                                        <GradientStop Color="#D6264F7C" Offset="1"/>
                                        <GradientStop Color="#FF2C86D8" Offset="0.464"/>
                                        <GradientStop Color="#FE2179D8" Offset="0.665"/>
                                    </RadialGradientBrush>
                                </Path.Fill>
                            </Path>
                            <Path Stretch="Fill" Stroke="#FF000000" Data="M0.5,4.5 C0.5,2.290861 2.290861,0.5 4.5,0.5 L93.5,0.5 C95.709139,0.5 97.5,2.290861 97.5,4.5 L97.416667,31.333333 C97.333333,31.50032 0.41666667,31.499598 0.5,31.416667 z" Opacity=".9" Visibility="Visible" StrokeThickness="0" x:Name="path">
                                <Path.Fill>
                                    <RadialGradientBrush GradientOrigin="0.499,0.76">
                                        <RadialGradientBrush.RelativeTransform>
                                            <TransformGroup>
                                                <ScaleTransform CenterX="0.5" CenterY="0.5" ScaleX="2.135" ScaleY="4.298"/>
                                                <SkewTransform AngleX="0" AngleY="0" CenterX="0.5" CenterY="0.5"/>
                                                <RotateTransform Angle="0" CenterX="0.5" CenterY="0.5"/>
                                                <TranslateTransform X="-0.011" Y="1.664"/>
                                            </TransformGroup>
                                        </RadialGradientBrush.RelativeTransform>
                                        <GradientStop Color="#FF57C6EF" Offset="0.576"/>
                                        <GradientStop Color="#FF000000" Offset="0.942"/>
                                        <GradientStop Color="#FF00ADFF" Offset="0.652"/>
                                    </RadialGradientBrush>
                                </Path.Fill>
                            </Path>
                            <ContentPresenter HorizontalAlignment="Center" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" 
                                              VerticalAlignment="Center"/>
                            <Path Height="14.638" Stretch="Fill" Data="M0.5,4.5 C0.5,2.290861 2.290861,0.5 4.5,0.5 L93.5,0.5 C95.709139,0.5 97.5,2.290861 97.5,4.5 L97.416667,31.333333 C97.333333,31.50032 0.41666667,31.499598 0.5,31.416667 z" Opacity="0.145" Canvas.Left="1.332" Canvas.Top="1.335" Visibility="Visible" VerticalAlignment="Top">
                                <Path.Fill>
                                    <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                        <GradientStop Color="#FFC7C7C7" Offset="1"/>
                                        <GradientStop Color="#FFFFFFFF" Offset="0"/>
                                    </LinearGradientBrush>
                                </Path.Fill>
                            </Path>
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="defaultCellStyle" TargetType="{x:Type Controls:DataGridCell}">
            <!--<Setter Property="BorderBrush" Value="Red" />-->
            <Setter Property="BorderThickness" Value="0" />
        </Style>

        <ContextMenu x:Key="RemoveImageContext" Background="Black">
            <MenuItem Header="Clear Image" Click="ClearDirectionalImage" Background="Black">
                <MenuItem.Icon>
                    <Image Source="Resources/Images/Remove.png"
               Width="16"
               Height="16" />
                </MenuItem.Icon>
            </MenuItem>
        </ContextMenu>
        <!--<Style TargetType="{x:Type DataPresenter:CellValuePresenter}" x:Key="DirectionalImage">
            <Setter Property="DataPresenter:CellValuePresenter.Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type DataPresenter:CellValuePresenter}">

                        <Grid Width="{TemplateBinding DataPresenter:CellValuePresenter.Width}" Height="{TemplateBinding DataPresenter:CellValuePresenter.Height}">
                            <Button ContextMenu="{StaticResource RemoveImageContext}" Style="{x:Null}"  Click="ShowDirectionalImageSelector">
                                <Image 
					  Margin="{TemplateBinding DataPresenter:CellValuePresenter.Padding}"
					  HorizontalAlignment="{TemplateBinding DataPresenter:CellValuePresenter.HorizontalContentAlignment}"
					  VerticalAlignment="{TemplateBinding DataPresenter:CellValuePresenter.VerticalContentAlignment}"
					  Source="{Binding Path=Content, RelativeSource={RelativeSource TemplatedParent}}"/>
                            </Button>
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style TargetType="{x:Type DataPresenter:CellValuePresenter}" x:Key="DirectionalText">
            <Setter Property="DataPresenter:CellValuePresenter.Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type DataPresenter:CellValuePresenter}">
                        <Grid Width="{TemplateBinding DataPresenter:CellValuePresenter.Width}" Height="{TemplateBinding DataPresenter:CellValuePresenter.Height}">
                            <TextBlock Margin="{TemplateBinding DataPresenter:CellValuePresenter.Padding}" HorizontalAlignment="Left"
					  VerticalAlignment="{TemplateBinding DataPresenter:CellValuePresenter.VerticalContentAlignment}" Foreground="Black" Text="{Binding Path=Content, RelativeSource={RelativeSource TemplatedParent}}" />
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>-->
    </UserControl.Resources>
    <Grid Margin="0,5,0,0">
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="529*"/>
        </Grid.ColumnDefinitions>
        <TabControl Grid.Column="0" x:Name="tcEventConfig">
            <TabItem Header="Groups" Foreground="White" x:Name="tiGroups">
                <EventsModule:GroupIconPanel x:Name="GroupIconPanelTab" />
            </TabItem>
            <TabItem Header="Rooms" Foreground="White" x:Name="tiRooms">
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition MinWidth="200" Width="205*"/>
                        <ColumnDefinition MinWidth="200" Width="205*" />
                    </Grid.ColumnDefinitions>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="25" />
                        <RowDefinition MinHeight="300" Height="300*" />
                        <RowDefinition Height="54" />
                    </Grid.RowDefinitions>
                    <TextBlock Grid.Column="0" Grid.Row="0" HorizontalAlignment="Center" Text="Rooms" Margin="5"/>
                    <ListBox Grid.Column="0" Grid.Row="1" x:Name="lbRoomList" VerticalAlignment="Stretch" Margin="5" SelectionChanged="lbRoomList_SelectionChanged">
                        <ListBox.ItemTemplate>
                            <DataTemplate>
                                <TextBlock Foreground="White" Text="{Binding Path=Name}" />
                            </DataTemplate>
                        </ListBox.ItemTemplate>
                    </ListBox>
                    <StackPanel Grid.Row="2" Orientation="Horizontal" HorizontalAlignment="Right" VerticalAlignment="Stretch">
                        <Button Inspire:ButtonImage.Image="Resources\Images\Add.png" Width="125" Height="35" Margin="3" Command="{x:Static Commands:EventsModuleCommands.AddRoomCommand}" Content=" Add"/>
                        <Button Inspire:ButtonImage.Image="Resources\Images\Remove.png" Width="125" Height="35" Margin="3" Command="{x:Static Commands:EventsModuleCommands.RemoveRoomCommand}" Content=" Remove"/>
                    </StackPanel>

                    <TextBlock Grid.Column="1" Grid.Row="0" HorizontalAlignment="Center" Text="Room Aliases" Margin="5"/>
                    <ListBox Grid.Column="1" Grid.Row="1" x:Name="lbAliasList" VerticalAlignment="Stretch" Margin="5">
                        <ListBox.ItemTemplate>
                            <DataTemplate>
                                <TextBlock Foreground="White" Text="{Binding Path=Value}" />
                            </DataTemplate>
                        </ListBox.ItemTemplate>
                    </ListBox>
                    <StackPanel Grid.Column="1" Grid.Row="2" Orientation="Horizontal" HorizontalAlignment="Right">
                        <Button Inspire:ButtonImage.Image="Resources\Images\Add.png" Width="125" Height="35" Margin="3" Click="btnAliasAdd" Content=" Add"/>
                        <Button Inspire:ButtonImage.Image="Resources\Images\Remove.png" Width="125" Height="35" Margin="3" Click="btnAliasRemove" Content=" Remove"/>
                    </StackPanel>
                </Grid>
            </TabItem>
            <TabItem Header="Room to Display Mappings" Foreground="White" x:Name="tiRoomMappings">
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="200*" MinWidth="200"/>
                        <ColumnDefinition Width="200*"/>
                    </Grid.ColumnDefinitions>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="25"/>
                        <RowDefinition Height="500*"/>
                        <RowDefinition Height="54" />
                    </Grid.RowDefinitions>
                    <TextBlock Grid.Row="0" Grid.Column="0" HorizontalAlignment="Center" Text="Displays" Margin="5"/>
                    <TreeView Grid.Row="1" Grid.Column="0" x:Name="mapTreeControl" ItemsSource="{Binding Path=DisplayProperties}" Margin="3" VerticalAlignment="Stretch" MinWidth="200" >
                        <TreeView.Resources>
                            <HierarchicalDataTemplate DataType="{x:Type TreeViewModel:PropertyViewModel}" ItemsSource="{Binding Path=Children}">
                                <StackPanel Orientation="Horizontal" MouseRightButtonUp="OnRightMouseButtonUp">
                                    <Image Width="24" Height="24" Margin="3,0" Source="Resources\Images\Property.ico" />
                                    <TextBlock Text="{Binding Path=PropertyName}" Foreground="White" />
                                </StackPanel>
                            </HierarchicalDataTemplate>

                            <HierarchicalDataTemplate DataType="{x:Type TreeViewModel:DisplayGroupViewModel}" ItemsSource="{Binding Path=Children}">
                                <StackPanel Orientation="Horizontal" MouseRightButtonUp="OnRightMouseButtonUp" PreviewMouseLeftButtonDown="TreeItem_PreviewMouseLeftButtonDown">
                                    <Image Width="24" Height="24" Margin="3,0" Source="Resources\Images\DisplayGroup.ico" SnapsToDevicePixels="True" />
                                    <TextBlock Text="{Binding Path=DisplayGroupName}" />
                                </StackPanel>
                            </HierarchicalDataTemplate>

                            <DataTemplate DataType="{x:Type TreeViewModel:DisplayViewModel}">
                                <StackPanel Orientation="Horizontal" MouseRightButtonUp="OnRightMouseButtonUp" MouseLeftButtonDown="AdminDisplay_MouseLeftButtonDown" PreviewMouseLeftButtonDown="TreeItem_PreviewMouseLeftButtonDown">
                                    <Grid>
                                        <Image  Width="24" Height="24" Margin="3,0" Source="Resources\Images\Display.ico" />
                                    </Grid>
                                    <TextBlock Text="{Binding Path=DisplayName}"  />
                                </StackPanel>
                            </DataTemplate>
                        </TreeView.Resources>
                        <TreeView.ItemContainerStyle>
                            <!-- This Style binds a TreeViewItem to a TreeViewItemViewModel. -->
                            <Style TargetType="{x:Type TreeViewItem}">
                                <Setter Property="IsExpanded" Value="{Binding Path=IsExpanded, Mode=TwoWay}" />
                                <Setter Property="IsSelected" Value="{Binding Path=IsSelected, Mode=TwoWay}" />
                                <Setter Property="Background" Value="Transparent" />
                                <Setter Property="HorizontalContentAlignment" Value="{Binding Path=HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" />
                                <Setter Property="VerticalContentAlignment" Value="{Binding Path=VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" />
                                <Setter Property="Padding" Value="1,0,0,0" />
                                <Setter Property="Template">
                                    <Setter.Value>
                                        <ControlTemplate TargetType="{x:Type TreeViewItem}">
                                            <ControlTemplate.Resources>
                                                <Storyboard x:Key="HoverOn">
                                                    <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="PART_HeaderHover" Storyboard.TargetProperty="(UIElement.Opacity)">
                                                        <SplineDoubleKeyFrame KeyTime="00:00:00.1000000" Value="1" />
                                                    </DoubleAnimationUsingKeyFrames>
                                                </Storyboard>
                                                <Storyboard x:Key="HoverOff">
                                                    <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="PART_HeaderHover" Storyboard.TargetProperty="(UIElement.Opacity)">
                                                        <SplineDoubleKeyFrame KeyTime="00:00:00.3000000" Value="0" />
                                                    </DoubleAnimationUsingKeyFrames>
                                                </Storyboard>
                                                <Storyboard x:Key="SelectedOn">
                                                    <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="PART_Header" Storyboard.TargetProperty="(UIElement.BitmapEffect).(OuterGlowBitmapEffect.Opacity)">
                                                        <SplineDoubleKeyFrame KeyTime="00:00:00.1000000" Value="0.6" />
                                                    </DoubleAnimationUsingKeyFrames>
                                                </Storyboard>
                                                <Storyboard x:Key="SelectedOff">
                                                    <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="PART_Header" Storyboard.TargetProperty="(UIElement.BitmapEffect).(OuterGlowBitmapEffect.Opacity)">
                                                        <SplineDoubleKeyFrame KeyTime="00:00:00.3000000" Value="0" />
                                                    </DoubleAnimationUsingKeyFrames>
                                                </Storyboard>
                                                <Storyboard x:Key="SelectedHoverOn">
                                                    <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="PART_HeaderSelectedHover" Storyboard.TargetProperty="(UIElement.BitmapEffect).(OuterGlowBitmapEffect.Opacity)">
                                                        <SplineDoubleKeyFrame KeyTime="00:00:00.1000000" Value="0.6" />
                                                    </DoubleAnimationUsingKeyFrames>
                                                </Storyboard>
                                                <Storyboard x:Key="SelectedHoverOff">
                                                    <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="PART_HeaderSelectedHover" Storyboard.TargetProperty="(UIElement.BitmapEffect).(OuterGlowBitmapEffect.Opacity)">
                                                        <SplineDoubleKeyFrame KeyTime="00:00:00.3000000" Value="0" />
                                                    </DoubleAnimationUsingKeyFrames>
                                                </Storyboard>
                                            </ControlTemplate.Resources>
                                            <Grid>
                                                <Grid.ColumnDefinitions>
                                                    <ColumnDefinition MinWidth="19" Width="Auto" />
                                                    <ColumnDefinition Width="Auto" />
                                                    <ColumnDefinition Width="*" />
                                                </Grid.ColumnDefinitions>
                                                <Grid.RowDefinitions>
                                                    <RowDefinition Height="Auto" />
                                                    <RowDefinition />
                                                </Grid.RowDefinitions>
                                                <ToggleButton x:Name="Expander" Style="{StaticResource nuclearTreeViewItemToggleButton}" IsChecked="{Binding Path=IsExpanded, RelativeSource={RelativeSource TemplatedParent}}" ClickMode="Press" />
                                                <Border Grid.Column="1" x:Name="Selection_Border" BorderThickness="{TemplateBinding BorderThickness}" Padding="{TemplateBinding Padding}" CornerRadius="4,4,4,4">
                                                    <Grid Width="Auto" Height="Auto" Margin="2,0,2,0">
                                                        <ContentPresenter HorizontalAlignment="Stretch" x:Name="PART_Header" ContentSource="Header" d:LayoutOverrides="Width" Margin="0,1,0,1">
                                                            <ContentPresenter.BitmapEffect>
                                                                <OuterGlowBitmapEffect GlowColor="{StaticResource MainColor}" Opacity="0" />
                                                            </ContentPresenter.BitmapEffect>
                                                        </ContentPresenter>
                                                        <ContentPresenter HorizontalAlignment="Stretch" x:Name="PART_HeaderHover" ContentSource="Header" d:LayoutOverrides="Width" Opacity="0" Margin="0,1,0,1">
                                                            <ContentPresenter.BitmapEffect>
                                                                <OuterGlowBitmapEffect GlowColor="{StaticResource MainColor}" />
                                                            </ContentPresenter.BitmapEffect>
                                                        </ContentPresenter>
                                                        <ContentPresenter HorizontalAlignment="Stretch" x:Name="PART_HeaderSelectedHover" ContentSource="Header" d:LayoutOverrides="Width" Margin="0,1,0,1">
                                                            <ContentPresenter.BitmapEffect>
                                                                <OuterGlowBitmapEffect GlowColor="{StaticResource MainColor}" Opacity="0" />
                                                            </ContentPresenter.BitmapEffect>
                                                        </ContentPresenter>
                                                    </Grid>
                                                </Border>
                                                <Border Margin="0,0,-3.803,0" Grid.ColumnSpan="1" Grid.RowSpan="1" Grid.Column="1" x:Name="border" CornerRadius="4,4,4,4" />
                                                <ItemsPresenter Grid.Column="1" Grid.ColumnSpan="2" Grid.Row="1" x:Name="ItemsHost" />
                                            </Grid>
                                            <ControlTemplate.Triggers>
                                                <MultiTrigger>
                                                    <MultiTrigger.ExitActions>
                                                        <BeginStoryboard Storyboard="{StaticResource SelectedHoverOff}" x:Name="SelectedHoverOff_BeginStoryboard" />
                                                    </MultiTrigger.ExitActions>
                                                    <MultiTrigger.EnterActions>
                                                        <BeginStoryboard Storyboard="{StaticResource SelectedHoverOn}" x:Name="SelectedHoverOn_BeginStoryboard" />
                                                    </MultiTrigger.EnterActions>
                                                    <MultiTrigger.Conditions>
                                                        <Condition Property="IsSelected" Value="True" />
                                                        <Condition Property="IsMouseOver" Value="True" />
                                                    </MultiTrigger.Conditions>
                                                </MultiTrigger>
                                                <MultiTrigger>
                                                    <MultiTrigger.Conditions>
                                                        <Condition Property="IsSelected" Value="False" />
                                                        <Condition Property="IsMouseOver" SourceName="Selection_Border" Value="True" />
                                                    </MultiTrigger.Conditions>
                                                    <MultiTrigger.ExitActions>
                                                        <BeginStoryboard x:Name="HoverOff_BeginStoryboard" Storyboard="{StaticResource HoverOff}" />
                                                    </MultiTrigger.ExitActions>
                                                    <MultiTrigger.EnterActions>
                                                        <BeginStoryboard Storyboard="{StaticResource HoverOn}" />
                                                    </MultiTrigger.EnterActions>
                                                </MultiTrigger>
                                                <Trigger Property="IsExpanded" Value="false">
                                                    <Setter Property="Visibility" Value="Collapsed" TargetName="ItemsHost" />
                                                </Trigger>
                                                <Trigger Property="HasItems" Value="false">
                                                    <Setter Property="Visibility" Value="Hidden" TargetName="Expander" />
                                                </Trigger>

                                                <Trigger Property="IsSelected" Value="true">
                                                    <Trigger.ExitActions>
                                                        <BeginStoryboard x:Name="SelectedOff_BeginStoryboard" Storyboard="{StaticResource SelectedOff}" />
                                                    </Trigger.ExitActions>
                                                    <Trigger.EnterActions>
                                                        <BeginStoryboard x:Name="SelectedOn_BeginStoryboard" Storyboard="{StaticResource SelectedOn}" />
                                                    </Trigger.EnterActions>
                                                    <Setter Property="Foreground" Value="{StaticResource {x:Static SystemColors.HighlightTextBrushKey}}" />
                                                </Trigger>
                                                <MultiTrigger>
                                                    <MultiTrigger.Conditions>
                                                        <Condition Property="IsSelected" Value="true" />
                                                        <Condition Property="IsSelectionActive" Value="false" />
                                                    </MultiTrigger.Conditions>
                                                    <Setter Property="Foreground" Value="{StaticResource {x:Static SystemColors.ControlTextBrushKey}}" />
                                                    <Setter Property="Background" TargetName="Selection_Border" Value="#3F545454" />
                                                    <Setter Property="Background" TargetName="border" Value="#72000000" />
                                                </MultiTrigger>
                                                <Trigger Property="IsEnabled" Value="false">
                                                    <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" />
                                                </Trigger>
                                            </ControlTemplate.Triggers>
                                        </ControlTemplate>
                                    </Setter.Value>
                                </Setter>
                                <Setter Property="Foreground">
                                    <Setter.Value>
                                        <SolidColorBrush Color="{StaticResource WhiteColor}" />
                                    </Setter.Value>
                                </Setter>
                                <Style.Triggers>
                                    <Trigger Property="IsSelected" Value="True">
                                        <!--<Setter Property="FontWeight" Value="Bold" />-->
                                    </Trigger>
                                </Style.Triggers>
                            </Style>
                        </TreeView.ItemContainerStyle>
                    </TreeView>

                    <TextBlock Grid.Row="0" Grid.Column="1" HorizontalAlignment="Center" Text="Rooms" Margin="5"/>
                    <ListBox Grid.Row="1" Grid.Column="1" Margin="3" x:Name="lbDisplayRooms" VerticalAlignment="Stretch" SelectionMode="Multiple">
                        <ListBox.ItemTemplate>
                            <DataTemplate>
                                <TextBlock Foreground="White" Text="{Binding Path=Name}" />
                            </DataTemplate>
                        </ListBox.ItemTemplate>
                    </ListBox>
                    <StackPanel Grid.Row="2" Grid.Column="0" Grid.ColumnSpan="2" Orientation="Horizontal" HorizontalAlignment="Right" VerticalAlignment="Stretch">
                        <Button Inspire:ButtonImage.Image="Resources\Images\Add.png" Width="187" Height="35" Margin="3" Command="{x:Static Commands:EventsModuleCommands.AddDisplayRoomCommand}" Content=" Add"/>
                        <Button Inspire:ButtonImage.Image="Resources\Images\Remove.png" Width="187" Height="35" Margin="3" Command="{x:Static Commands:EventsModuleCommands.RemoveDisplayRoomCommand}" Content=" Remove"/>
                    </StackPanel>
                </Grid>
            </TabItem>
            <TabItem Header="Directions" Foreground="White" x:Name="tiDirections">
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="205*"/>
                        <ColumnDefinition Width="310*"/>
                    </Grid.ColumnDefinitions>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="571.04*"/>
                        <RowDefinition Height="54"/>
                    </Grid.RowDefinitions>

                    <TreeView x:Name="directionTreeControl" ItemsSource="{Binding Path=DisplayProperties}" MinWidth="200" Margin="0,0,5,0">
                        <TreeView.Resources>
                            <HierarchicalDataTemplate DataType="{x:Type TreeViewModel:PropertyViewModel}" ItemsSource="{Binding Path=Children}">
                                <StackPanel Orientation="Horizontal" MouseRightButtonUp="OnRightMouseButtonUp">
                                    <Image Width="24" Height="24" Margin="3,0" Source="Resources\Images\Property.ico" />
                                    <TextBlock Text="{Binding Path=PropertyName}" Foreground="White" />
                                </StackPanel>
                            </HierarchicalDataTemplate>

                            <HierarchicalDataTemplate DataType="{x:Type TreeViewModel:DisplayGroupViewModel}" ItemsSource="{Binding Path=Children}">
                                <StackPanel Orientation="Horizontal" MouseRightButtonUp="OnRightMouseButtonUp" PreviewMouseLeftButtonDown="TreeItem_PreviewMouseLeftButtonDown">
                                    <Image Width="24" Height="24" Margin="3,0" Source="Resources\Images\DisplayGroup.ico" SnapsToDevicePixels="True" />
                                    <TextBlock Text="{Binding Path=DisplayGroupName}" />
                                </StackPanel>
                            </HierarchicalDataTemplate>

                            <DataTemplate DataType="{x:Type TreeViewModel:DisplayViewModel}">
                                <StackPanel Orientation="Horizontal" MouseRightButtonUp="OnRightMouseButtonUp" MouseLeftButtonDown="directionTree_MouseLeftButtonDown"  PreviewMouseLeftButtonDown="TreeItem_PreviewMouseLeftButtonDown">
                                    <Grid>
                                        <Image  Width="24" Height="24" Margin="3,0" Source="Resources\Images\Display.ico" />
                                    </Grid>
                                    <TextBlock Text="{Binding Path=DisplayName}"  />
                                </StackPanel>
                            </DataTemplate>
                        </TreeView.Resources>
                        <TreeView.ItemContainerStyle>
                            <!-- This Style binds a TreeViewItem to a TreeViewItemViewModel. -->
                            <Style TargetType="{x:Type TreeViewItem}">
                                <Setter Property="IsExpanded" Value="{Binding Path=IsExpanded, Mode=TwoWay}" />
                                <Setter Property="IsSelected" Value="{Binding Path=IsSelected, Mode=TwoWay}" />
                                <Setter Property="Background" Value="Transparent" />
                                <Setter Property="HorizontalContentAlignment" Value="{Binding Path=HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" />
                                <Setter Property="VerticalContentAlignment" Value="{Binding Path=VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" />
                                <Setter Property="Padding" Value="1,0,0,0" />
                                <Setter Property="Template">
                                    <Setter.Value>
                                        <ControlTemplate TargetType="{x:Type TreeViewItem}">
                                            <ControlTemplate.Resources>
                                                <Storyboard x:Key="HoverOn">
                                                    <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="PART_HeaderHover" Storyboard.TargetProperty="(UIElement.Opacity)">
                                                        <SplineDoubleKeyFrame KeyTime="00:00:00.1000000" Value="1" />
                                                    </DoubleAnimationUsingKeyFrames>
                                                </Storyboard>
                                                <Storyboard x:Key="HoverOff">
                                                    <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="PART_HeaderHover" Storyboard.TargetProperty="(UIElement.Opacity)">
                                                        <SplineDoubleKeyFrame KeyTime="00:00:00.3000000" Value="0" />
                                                    </DoubleAnimationUsingKeyFrames>
                                                </Storyboard>
                                                <Storyboard x:Key="SelectedOn">
                                                    <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="PART_Header" Storyboard.TargetProperty="(UIElement.BitmapEffect).(OuterGlowBitmapEffect.Opacity)">
                                                        <SplineDoubleKeyFrame KeyTime="00:00:00.1000000" Value="0.6" />
                                                    </DoubleAnimationUsingKeyFrames>
                                                </Storyboard>
                                                <Storyboard x:Key="SelectedOff">
                                                    <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="PART_Header" Storyboard.TargetProperty="(UIElement.BitmapEffect).(OuterGlowBitmapEffect.Opacity)">
                                                        <SplineDoubleKeyFrame KeyTime="00:00:00.3000000" Value="0" />
                                                    </DoubleAnimationUsingKeyFrames>
                                                </Storyboard>
                                                <Storyboard x:Key="SelectedHoverOn">
                                                    <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="PART_HeaderSelectedHover" Storyboard.TargetProperty="(UIElement.BitmapEffect).(OuterGlowBitmapEffect.Opacity)">
                                                        <SplineDoubleKeyFrame KeyTime="00:00:00.1000000" Value="0.6" />
                                                    </DoubleAnimationUsingKeyFrames>
                                                </Storyboard>
                                                <Storyboard x:Key="SelectedHoverOff">
                                                    <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="PART_HeaderSelectedHover" Storyboard.TargetProperty="(UIElement.BitmapEffect).(OuterGlowBitmapEffect.Opacity)">
                                                        <SplineDoubleKeyFrame KeyTime="00:00:00.3000000" Value="0" />
                                                    </DoubleAnimationUsingKeyFrames>
                                                </Storyboard>
                                            </ControlTemplate.Resources>
                                            <Grid>
                                                <Grid.ColumnDefinitions>
                                                    <ColumnDefinition MinWidth="19" Width="Auto" />
                                                    <ColumnDefinition Width="Auto" />
                                                    <ColumnDefinition Width="*" />
                                                </Grid.ColumnDefinitions>
                                                <Grid.RowDefinitions>
                                                    <RowDefinition Height="Auto" />
                                                    <RowDefinition />
                                                </Grid.RowDefinitions>
                                                <ToggleButton x:Name="Expander" Style="{StaticResource nuclearTreeViewItemToggleButton}" IsChecked="{Binding Path=IsExpanded, RelativeSource={RelativeSource TemplatedParent}}" ClickMode="Press" />
                                                <Border Grid.Column="1" x:Name="Selection_Border" BorderThickness="{TemplateBinding BorderThickness}" Padding="{TemplateBinding Padding}" CornerRadius="4,4,4,4">
                                                    <Grid Width="Auto" Height="Auto" Margin="2,0,2,0">
                                                        <ContentPresenter HorizontalAlignment="Stretch" x:Name="PART_Header" ContentSource="Header" d:LayoutOverrides="Width" Margin="0,1,0,1">
                                                            <ContentPresenter.BitmapEffect>
                                                                <OuterGlowBitmapEffect GlowColor="{StaticResource MainColor}" Opacity="0" />
                                                            </ContentPresenter.BitmapEffect>
                                                        </ContentPresenter>
                                                        <ContentPresenter HorizontalAlignment="Stretch" x:Name="PART_HeaderHover" ContentSource="Header" d:LayoutOverrides="Width" Opacity="0" Margin="0,1,0,1">
                                                            <ContentPresenter.BitmapEffect>
                                                                <OuterGlowBitmapEffect GlowColor="{StaticResource MainColor}" />
                                                            </ContentPresenter.BitmapEffect>
                                                        </ContentPresenter>
                                                        <ContentPresenter HorizontalAlignment="Stretch" x:Name="PART_HeaderSelectedHover" ContentSource="Header" d:LayoutOverrides="Width" Margin="0,1,0,1">
                                                            <ContentPresenter.BitmapEffect>
                                                                <OuterGlowBitmapEffect GlowColor="{StaticResource MainColor}" Opacity="0" />
                                                            </ContentPresenter.BitmapEffect>
                                                        </ContentPresenter>
                                                    </Grid>
                                                </Border>
                                                <Border Margin="0,0,-3.803,0" Grid.ColumnSpan="1" Grid.RowSpan="1" Grid.Column="1" x:Name="border" CornerRadius="4,4,4,4" />
                                                <ItemsPresenter Grid.Column="1" Grid.ColumnSpan="2" Grid.Row="1" x:Name="ItemsHost" />
                                            </Grid>
                                            <ControlTemplate.Triggers>
                                                <MultiTrigger>
                                                    <MultiTrigger.ExitActions>
                                                        <BeginStoryboard Storyboard="{StaticResource SelectedHoverOff}" x:Name="SelectedHoverOff_BeginStoryboard" />
                                                    </MultiTrigger.ExitActions>
                                                    <MultiTrigger.EnterActions>
                                                        <BeginStoryboard Storyboard="{StaticResource SelectedHoverOn}" x:Name="SelectedHoverOn_BeginStoryboard" />
                                                    </MultiTrigger.EnterActions>
                                                    <MultiTrigger.Conditions>
                                                        <Condition Property="IsSelected" Value="True" />
                                                        <Condition Property="IsMouseOver" Value="True" />
                                                    </MultiTrigger.Conditions>
                                                </MultiTrigger>
                                                <MultiTrigger>
                                                    <MultiTrigger.Conditions>
                                                        <Condition Property="IsSelected" Value="False" />
                                                        <Condition Property="IsMouseOver" SourceName="Selection_Border" Value="True" />
                                                    </MultiTrigger.Conditions>
                                                    <MultiTrigger.ExitActions>
                                                        <BeginStoryboard x:Name="HoverOff_BeginStoryboard" Storyboard="{StaticResource HoverOff}" />
                                                    </MultiTrigger.ExitActions>
                                                    <MultiTrigger.EnterActions>
                                                        <BeginStoryboard Storyboard="{StaticResource HoverOn}" />
                                                    </MultiTrigger.EnterActions>
                                                </MultiTrigger>
                                                <Trigger Property="IsExpanded" Value="false">
                                                    <Setter Property="Visibility" Value="Collapsed" TargetName="ItemsHost" />
                                                </Trigger>
                                                <Trigger Property="HasItems" Value="false">
                                                    <Setter Property="Visibility" Value="Hidden" TargetName="Expander" />
                                                </Trigger>
                                                <Trigger Property="IsSelected" Value="true">
                                                    <Trigger.ExitActions>
                                                        <BeginStoryboard x:Name="SelectedOff_BeginStoryboard" Storyboard="{StaticResource SelectedOff}" />
                                                    </Trigger.ExitActions>
                                                    <Trigger.EnterActions>
                                                        <BeginStoryboard x:Name="SelectedOn_BeginStoryboard" Storyboard="{StaticResource SelectedOn}" />
                                                    </Trigger.EnterActions>
                                                    <Setter Property="Foreground" Value="{StaticResource {x:Static SystemColors.HighlightTextBrushKey}}" />
                                                </Trigger>
                                                <MultiTrigger>
                                                    <MultiTrigger.Conditions>
                                                        <Condition Property="IsSelected" Value="true" />
                                                        <Condition Property="IsSelectionActive" Value="false" />
                                                    </MultiTrigger.Conditions>
                                                    <Setter Property="Foreground" Value="{StaticResource {x:Static SystemColors.ControlTextBrushKey}}" />
                                                    <Setter Property="Background" TargetName="Selection_Border" Value="#3F545454" />
                                                    <Setter Property="Background" TargetName="border" Value="#72000000" />
                                                </MultiTrigger>
                                                <Trigger Property="IsEnabled" Value="false">
                                                    <Setter Property="Foreground" Value="{StaticResource {x:Static SystemColors.GrayTextBrushKey}}" />
                                                </Trigger>
                                            </ControlTemplate.Triggers>
                                        </ControlTemplate>
                                    </Setter.Value>
                                </Setter>
                                <Setter Property="Foreground">
                                    <Setter.Value>
                                        <SolidColorBrush Color="{StaticResource WhiteColor}" />
                                    </Setter.Value>
                                </Setter>
                                <Style.Triggers>
                                    <Trigger Property="IsSelected" Value="True">
                                        <!--<Setter Property="FontWeight" Value="Bold" />-->
                                    </Trigger>
                                </Style.Triggers>
                            </Style>
                        </TreeView.ItemContainerStyle>

                    </TreeView>

                    <Controls:DataGrid x:Name="DirectionsGrid" ColumnHeaderStyle="{StaticResource DatagridColumnHeaderCustomTemplateStyle}" Background="{StaticResource WindowBackgroundBrush}" CanUserAddRows="False" AutoGenerateColumns="False" Grid.Column="1" Foreground="Black" Margin="5,0,0,0" HorizontalAlignment="Stretch" AreRowDetailsFrozen="True" SelectionMode="Single" HeadersVisibility="Column" BorderThickness="1">
                        <Controls:DataGrid.Columns>
                            <Controls:DataGridTextColumn Binding="{Binding GUID, Mode=OneWay}" Header="GUID" Visibility="Collapsed"/>
                            <Controls:DataGridTextColumn Binding="{Binding DisplayID, Mode=OneWay}" Header="DisplayID" Visibility="Collapsed"/>
                            <Controls:DataGridTextColumn Binding="{Binding RoomID, Mode=OneWay}" Header="RoomID" Visibility="Collapsed"/>
                            <Controls:DataGridTextColumn Binding="{Binding DirectionImageID, Mode=TwoWay}" Header="GUID" Visibility="Collapsed"/>
                            <Controls:DataGridTemplateColumn MinWidth="80" Header="Room Name" CellStyle="{StaticResource defaultCellStyle}">
                                <Controls:DataGridTemplateColumn.CellTemplate>
                                    <DataTemplate>
                                        <Border BorderThickness="0" Background="{StaticResource WindowBackgroundBrush}">
                                            <TextBlock Foreground="White"  Margin="5" HorizontalAlignment="Left" VerticalAlignment="Center" Text="{Binding RoomName, Mode=OneWay}" />
                                        </Border>
                                    </DataTemplate>
                                </Controls:DataGridTemplateColumn.CellTemplate>
                            </Controls:DataGridTemplateColumn>
                            <Controls:DataGridTemplateColumn Header="Direction Image" MinWidth="95" Width="95" CanUserSort="False">
                                <Controls:DataGridTemplateColumn.CellTemplate>
                                    <DataTemplate>
                                        <Border BorderThickness="0" Background="{StaticResource WindowBackgroundBrush}">
                                            <Button BorderThickness="0" BorderBrush="Transparent" Width="50" Height="50" ContextMenu="{StaticResource RemoveImageContext}" Style="{x:Null}" Background="{StaticResource WindowBackgroundBrush}" Click="ShowDirectionalImageSelector">
                                                <Image Source="{Binding DirectionImageWebPath, Mode=OneWay, NotifyOnTargetUpdated=True}" RenderOptions.BitmapScalingMode="LowQuality"/>
                                            </Button>
                                        </Border>
                                    </DataTemplate>
                                </Controls:DataGridTemplateColumn.CellTemplate>
                            </Controls:DataGridTemplateColumn>
                            <Controls:DataGridTemplateColumn MinWidth="50" Width="*" Header="Description">
                                <Controls:DataGridTemplateColumn.CellTemplate>
                                    <DataTemplate>
                                        <Border BorderBrush="Transparent" Background="{StaticResource WindowBackgroundBrush}">
                                            <TextBox Foreground="White" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Text="{Binding Description, Mode=TwoWay}" AcceptsReturn="False" TextWrapping="Wrap" VerticalContentAlignment="Center" />
                                        </Border>
                                    </DataTemplate>
                                </Controls:DataGridTemplateColumn.CellTemplate>
                            </Controls:DataGridTemplateColumn>
                        </Controls:DataGrid.Columns>
                    </Controls:DataGrid>
                    <StackPanel Orientation="Horizontal" Margin="5" Grid.Row="1" Grid.ColumnSpan="2" FlowDirection="LeftToRight" HorizontalAlignment="Right">
                        <Button Inspire:ButtonImage.Image="Resources\Images\Ok16.png" Height="38" Margin="3" x:Name="btnDirectionSave" VerticalAlignment="Bottom" Click="btnDirectionSave_Click" Content="Save" HorizontalAlignment="Left" Width="187" />
                        <Button Inspire:ButtonImage.Image="Resources\Images\Cancel16.png" Height="38" HorizontalAlignment="Right" Margin="3" x:Name="btnDirectionCancel" VerticalAlignment="Bottom" Width="187" Grid.Column="3" Content="Cancel"/>
                    </StackPanel>
                </Grid>
            </TabItem>
            <TabItem Header="Directional Images" Foreground="White" x:Name="tiDirectionalImages">
                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="571.04*" />
                        <RowDefinition Height="54" />
                    </Grid.RowDefinitions>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="520*"/>
                    </Grid.ColumnDefinitions>
                    <ListBox Grid.Column="0" x:Name="lbDiectionalImages" ItemTemplate="{StaticResource directionalTemplate}" Margin="0,3,0,3">
                        <ListBox.ItemsPanel>
                            <ItemsPanelTemplate>
                                <WrapPanel IsItemsHost="True" Width="{Binding Path=ActualWidth, RelativeSource={RelativeSource AncestorType={x:Type ScrollContentPresenter}, Mode=FindAncestor}}" />
                            </ItemsPanelTemplate>
                        </ListBox.ItemsPanel>
                    </ListBox>
                    <StackPanel Orientation="Horizontal" Margin="5" Grid.Row="1" Grid.Column="0" FlowDirection="LeftToRight" HorizontalAlignment="Right">
                        <Button Inspire:ButtonImage.Image="Resources\Images\Add.png" Height="38" Width="187" Margin="3" x:Name="btnAddDirectionalImage" VerticalAlignment="Bottom" Click="btnAddDirectionalImage_Click" Content="Add" />
                        <Button Inspire:ButtonImage.Image="Resources\Images\Remove.png" Height="38" HorizontalAlignment="Right" Margin="3" x:Name="btnRemoveDirectionalImage" VerticalAlignment="Bottom" Click="btnRemoveDirectionalImage_Click"  Width="187" Content="Remove" />
                    </StackPanel>
                </Grid>
            </TabItem>
            <TabItem Header="Event Manager" Foreground="White" x:Name="tiEventEntry">
                <Grid x:Name="tiEventPanel" />
            </TabItem>
            <TabItem Visibility="Collapsed" Header="Event Sources" Foreground="White" x:Name="tiEventSources">
                <EventsModule:ConfigureEventSource x:Name="ConfigureEventSourceControl" />
            </TabItem>
        </TabControl>
    </Grid>
</UserControl>
